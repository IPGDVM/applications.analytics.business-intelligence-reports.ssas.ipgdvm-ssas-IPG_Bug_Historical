{
  "name": "SemanticModel",
  "compatibilityLevel": 1400,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "name": "iBI",
        "connectionString": "Provider=MSDASQL;Persist Security Info=False;Initial Catalog=HSD_ES;DSN=iBI DaaS",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "Others"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "FinalData",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "WW",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[WW]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "id",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[id]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Status",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Status]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Configuration",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Configuration]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ProjectedTotalBugManual",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[ProjectedTotalBugCount]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ProjectedTotalBugComplete",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ProjectedTotalBugComplete]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "AverageCompletedBugPerWeek",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AverageCompletedBugPerWeek]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ProjectedTotalBug",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ProjectedTotalBug]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "AverageTotalBug",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AverageTotalBug]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "AverageCategory",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AverageCategory]"
          },
          {
            "type": "calculated",
            "name": "WW_Display",
            "dataType": "string",
            "isDataTypeInferred": false,
            "expression": " [WW]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "UNION(",
                "\t-- 6 Weeks Avg",
                "\tSELECTCOLUMNS(",
                "\t\tHistoricalData",
                "\t\t,\"WW\",'HistoricalData'[ww]",
                "\t\t,\"id\",'HistoricalData'[id]",
                "\t\t,\"Status\",'HistoricalData'[status]",
                "\t\t,\"Configuration\",'HistoricalData'[ConfigurationLatestPerId]",
                "\t\t,\"ProjectedTotalBugCount\",0",
                "\t\t,\"ProjectedTotalBugComplete\",BLANK()",
                "\t\t,\"AverageCompletedBugPerWeek\", BLANK()",
                "        \t\t,\"ProjectedTotalBug\",BLANK()",
                "\t\t,\"AverageTotalBug\", BLANK()",
                "\t\t,\"AverageCategory\", \"Last6WksAvg\"",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\t'TotalBugManualProjection'",
                "\t\t,\"WW\",'TotalBugManualProjection'[ww]",
                "\t\t,\"id\",0",
                "\t\t,\"Status\",\"\"",
                "\t\t,\"Configuration\",'TotalBugManualProjection'[Configuration]",
                "\t\t,\"ProjectedTotalBugCount\",'TotalBugManualProjection'[predicted_value]",
                "\t\t,\"ProjectedTotalBugComplete\", BLANK()",
                "\t\t,\"AverageCompletedBugPerWeek\", BLANK()",
                "     \t\t   ,\"ProjectedTotalBug\",BLANK()",
                "\t\t,\"AverageTotalBug\", BLANK()",
                "\t\t,\"AverageCategory\", \"Last6WksAvg\"",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\t'BugCompleteProjection'",
                "\t\t,\"WW\",BugCompleteProjection[ww]",
                "\t\t,\"id\",0",
                "\t\t,\"Status\",\"\"",
                "\t\t,\"Configuration\",'BugCompleteProjection'[ConfigurationLatestPerId]",
                "\t\t,\"ProjectedTotalBugCount\",0",
                "\t\t,\"ProjectedTotalBugComplete\", BugCompleteProjection[ProjectedCompleteBugs6WksAvg]",
                "\t\t,\"AverageCompletedBugPerWeek\", BugCompleteProjection[6WksAvg]",
                "        \t\t,\"ProjectedTotalBug\",BLANK()",
                "\t\t,\"AverageTotalBug\", BLANK()",
                "\t\t,\"AverageCategory\", \"Last6WksAvg\"",
                "\t),",
                "  \t  SELECTCOLUMNS(",
                "\t\t'TotalBugProjection'",
                "\t\t,\"WW\",TotalBugProjection[ww]",
                "\t\t,\"id\",0",
                "\t\t,\"Status\",\"\"",
                "\t\t,\"Configuration\",'TotalBugProjection'[ConfigurationLatestPerId]",
                "\t\t,\"ProjectedTotalBugCount\",0",
                "\t\t,\"ProjectedTotalBugComplete\", BLANK()",
                "\t\t,\"AverageCompletedBugPerWeek\", BLANK()",
                "\t\t,\"ProjectedTotalBug\",TotalBugProjection[ProjectedTotalBugs6Wks]",
                "\t\t,\"AverageTotalBug\", TotalBugProjection[6WksAvgTotal]",
                "\t\t,\"AverageCategory\", \"Last6WksAvg\"",
                "\t),",
                "\t-- 5 Weeks Avg",
                "\tSELECTCOLUMNS(",
                "\t\tHistoricalData",
                "\t\t,\"WW\",'HistoricalData'[ww]",
                "\t\t,\"id\",'HistoricalData'[id]",
                "\t\t,\"Status\",'HistoricalData'[status]",
                "\t\t,\"Configuration\",'HistoricalData'[ConfigurationLatestPerId]",
                "\t\t,\"ProjectedTotalBugCount\",0",
                "\t\t,\"ProjectedTotalBugComplete\",BLANK()",
                "\t\t,\"AverageCompletedBugPerWeek\", BLANK()",
                "      \t\t  ,\"ProjectedTotalBug\",BLANK()",
                "\t\t,\"AverageTotalBug\", BLANK()",
                "\t\t,\"AverageCategory\", \"Last5WksAvg\"",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\t'TotalBugManualProjection'",
                "\t\t,\"WW\",'TotalBugManualProjection'[ww]",
                "\t\t,\"id\",0",
                "\t\t,\"Status\",\"\"",
                "\t\t,\"Configuration\",'TotalBugManualProjection'[Configuration]",
                "\t\t,\"ProjectedTotalBugCount\",'TotalBugManualProjection'[predicted_value]",
                "\t\t,\"ProjectedTotalBugComplete\", BLANK()",
                "\t\t,\"AverageCompletedBugPerWeek\", BLANK()",
                "      \t\t  ,\"ProjectedTotalBug\",BLANK()",
                "\t\t,\"AverageTotalBug\", BLANK()",
                "\t\t,\"AverageCategory\", \"Last5WksAvg\"",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\t'BugCompleteProjection'",
                "\t\t,\"WW\",BugCompleteProjection[ww]",
                "\t\t,\"id\",0",
                "\t\t,\"Status\",\"\"",
                "\t\t,\"Configuration\",'BugCompleteProjection'[ConfigurationLatestPerId]",
                "\t\t,\"ProjectedTotalBugCount\",0",
                "\t\t,\"ProjectedTotalBugComplete\", BugCompleteProjection[ProjectedCompleteBugs5WksAvg]",
                "\t\t,\"AverageCompletedBugPerWeek\", BugCompleteProjection[5WksAvg]",
                "        \t\t,\"ProjectedTotalBug\",BLANK()",
                "\t\t,\"AverageTotalBug\", BLANK()",
                "\t\t,\"AverageCategory\", \"Last5WksAvg\"",
                "\t),",
                "   \t SELECTCOLUMNS(",
                "\t\t'TotalBugProjection'",
                "\t\t,\"WW\",TotalBugProjection[ww]",
                "\t\t,\"id\",0",
                "\t\t,\"Status\",\"\"",
                "\t\t,\"Configuration\",'TotalBugProjection'[ConfigurationLatestPerId]",
                "\t\t,\"ProjectedTotalBugCount\",0",
                "\t\t,\"ProjectedTotalBugComplete\", BLANK()",
                "\t\t,\"AverageCompletedBugPerWeek\", BLANK()",
                "\t\t,\"ProjectedTotalBug\",TotalBugProjection[ProjectedTotalBugs5Wks]",
                "\t\t,\"AverageTotalBug\", TotalBugProjection[5WksAvgTotal]",
                "\t\t,\"AverageCategory\", \"Last5WksAvg\"",
                "\t),",
                "\t-- 4 Weeks Avg",
                "    \tSELECTCOLUMNS(",
                "\t\tHistoricalData",
                "\t\t,\"WW\",'HistoricalData'[ww]",
                "\t\t,\"id\",'HistoricalData'[id]",
                "\t\t,\"Status\",'HistoricalData'[status]",
                "\t\t,\"Configuration\",'HistoricalData'[ConfigurationLatestPerId]",
                "\t\t,\"ProjectedTotalBugCount\",0",
                "\t\t,\"ProjectedTotalBugComplete\",BLANK()",
                "\t\t,\"AverageCompletedBugPerWeek\", BLANK()",
                "       \t\t ,\"ProjectedTotalBug\",BLANK()",
                "\t\t,\"AverageTotalBug\", BLANK()",
                "\t\t,\"AverageCategory\", \"Last4WksAvg\"",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\t'TotalBugManualProjection'",
                "\t\t,\"WW\",'TotalBugManualProjection'[ww]",
                "\t\t,\"id\",0",
                "\t\t,\"Status\",\"\"",
                "\t\t,\"Configuration\",'TotalBugManualProjection'[Configuration]",
                "\t\t,\"ProjectedTotalBugCount\",'TotalBugManualProjection'[predicted_value]",
                "\t\t,\"ProjectedTotalBugComplete\", BLANK()",
                "\t\t,\"AverageCompletedBugPerWeek\", BLANK()",
                "      \t\t  ,\"ProjectedTotalBug\",BLANK()",
                "\t\t,\"AverageTotalBug\", BLANK()",
                "\t\t,\"AverageCategory\", \"Last4WksAvg\"",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\t'BugCompleteProjection'",
                "\t\t,\"WW\",BugCompleteProjection[ww]",
                "\t\t,\"id\",0",
                "\t\t,\"Status\",\"\"",
                "\t\t,\"Configuration\",'BugCompleteProjection'[ConfigurationLatestPerId]",
                "\t\t,\"ProjectedTotalBugCount\",0",
                "\t\t,\"ProjectedTotalBugComplete\", BugCompleteProjection[ProjectedCompleteBugs4WksAvg]",
                "\t\t,\"AverageCompletedBugPerWeek\", BugCompleteProjection[4WksAvg]",
                "       \t\t ,\"ProjectedTotalBug\",BLANK()",
                "\t\t,\"AverageTotalBug\", BLANK()",
                "\t\t,\"AverageCategory\", \"Last4WksAvg\"",
                "\t),",
                "    SELECTCOLUMNS(",
                "\t\t'TotalBugProjection'",
                "\t\t,\"WW\",TotalBugProjection[ww]",
                "\t\t,\"id\",0",
                "\t\t,\"Status\",\"\"",
                "\t\t,\"Configuration\",'TotalBugProjection'[ConfigurationLatestPerId]",
                "\t\t,\"ProjectedTotalBugCount\",0",
                "\t\t,\"ProjectedTotalBugComplete\", BLANK()",
                "\t\t,\"AverageCompletedBugPerWeek\", BLANK()",
                "\t\t,\"ProjectedTotalBug\",TotalBugProjection[ProjectedTotalBugs4Wks]",
                "\t\t,\"AverageTotalBug\", TotalBugProjection[4WksAvgTotal]",
                "\t\t,\"AverageCategory\", \"Last4WksAvg\"",
                "\t)",
                ")"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "UncompletedBug",
            "expression": " CALCULATE(DISTINCTCOUNT(FinalData[id]), FinalData[Status] <> \"complete\", FinalData[id] <> 0)"
          },
          {
            "name": "CompletedBug",
            "expression": " CALCULATE(DISTINCTCOUNT(FinalData[id]), FinalData[Status] = \"complete\", FinalData[id] <> 0)"
          }
        ]
      },
      {
        "name": "BugCompleteProjection",
        "columns": [
          {
            "type": "calculated",
            "name": "ProjectedCompleteBugs5WksAvg",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var current_ww = max('HistoricalData'[currentww])",
              "var cummulative_complete_bug =  CALCULATE(DISTINCTCOUNT('HistoricalData'[id]),HistoricalData[ConfigurationLatestPerId] = EARLIER(BugCompleteProjection[ConfigurationLatestPerId]), 'HistoricalData'[IsRealBug] = 1, 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\", 'HistoricalData'[status] = \"complete\", 'HistoricalData'[id] <> 0)",
              "var diff_in_ww_to_current_ww = BugCompleteProjection[ww] - current_ww",
              "return cummulative_complete_bug + (BugCompleteProjection[5WksAvg] * diff_in_ww_to_current_ww)",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "ProjectedCompleteBugs4WksAvg",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var current_ww = max('HistoricalData'[currentww])",
              "var cummulative_complete_bug =  CALCULATE(DISTINCTCOUNT('HistoricalData'[id]),HistoricalData[ConfigurationLatestPerId] = EARLIER(BugCompleteProjection[ConfigurationLatestPerId]), 'HistoricalData'[IsRealBug] = 1, 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\", 'HistoricalData'[status] = \"complete\", 'HistoricalData'[id] <> 0)",
              "var diff_in_ww_to_current_ww = BugCompleteProjection[ww] - current_ww",
              "return cummulative_complete_bug + (BugCompleteProjection[4WksAvg] * diff_in_ww_to_current_ww)",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "ProjectedCompleteBugs6WksAvg",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var current_ww = max('HistoricalData'[currentww])",
              "var cummulative_complete_bug =  CALCULATE(DISTINCTCOUNT('HistoricalData'[id]),HistoricalData[ConfigurationLatestPerId] = EARLIER(BugCompleteProjection[ConfigurationLatestPerId]), 'HistoricalData'[IsRealBug] = 1, 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\", 'HistoricalData'[status] = \"complete\", 'HistoricalData'[id] <> 0)",
              "var diff_in_ww_to_current_ww = BugCompleteProjection[ww] - current_ww",
              "return cummulative_complete_bug + (BugCompleteProjection[6WksAvg] * diff_in_ww_to_current_ww)",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "4WksAvg",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var current_ww = max('HistoricalData'[currentww])",
              "var total_completed_current_ww =  CALCULATE(DISTINCTCOUNT('HistoricalData'[id]),FILTER('HistoricalData', 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(BugCompleteProjection[ConfigurationLatestPerId]) && 'HistoricalData'[IsRealBug] = 1 && 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\" && 'HistoricalData'[status] = \"complete\" && 'HistoricalData'[id] <> 0 && 'HistoricalData'[ww] = current_ww))",
              "var total_completed_3_weeks_ago= CALCULATE(DISTINCTCOUNT('HistoricalData'[id]),FILTER('HistoricalData', 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(BugCompleteProjection[ConfigurationLatestPerId]) && 'HistoricalData'[IsRealBug] = 1 && 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\" && 'HistoricalData'[status] = \"complete\" && 'HistoricalData'[id] <> 0 && 'HistoricalData'[ww] = current_ww - 3))",
              "var average_completed_bugs_per_week = (total_completed_current_ww - total_completed_3_weeks_ago) / 4",
              "return average_completed_bugs_per_week",
              "",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "5WksAvg",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var current_ww = max('HistoricalData'[currentww])",
              "var total_completed_current_ww =  CALCULATE(DISTINCTCOUNT('HistoricalData'[id]),FILTER('HistoricalData', 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(BugCompleteProjection[ConfigurationLatestPerId]) && 'HistoricalData'[IsRealBug] = 1 && 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\" && 'HistoricalData'[status] = \"complete\" && 'HistoricalData'[id] <> 0 && 'HistoricalData'[ww] = current_ww))",
              "var total_completed_4_weeks_ago= CALCULATE(DISTINCTCOUNT('HistoricalData'[id]),FILTER('HistoricalData', 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(BugCompleteProjection[ConfigurationLatestPerId]) && 'HistoricalData'[IsRealBug] = 1 && 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\" && 'HistoricalData'[status] = \"complete\" && 'HistoricalData'[id] <> 0 && 'HistoricalData'[ww] = current_ww - 4))",
              "var average_completed_bugs_per_week = (total_completed_current_ww - total_completed_4_weeks_ago) / 5",
              "return average_completed_bugs_per_week"
            ]
          },
          {
            "type": "calculated",
            "name": "6WksAvg",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var current_ww = max('HistoricalData'[currentww])",
              "var total_completed_current_ww =  CALCULATE(DISTINCTCOUNT('HistoricalData'[id]),FILTER('HistoricalData', 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(BugCompleteProjection[ConfigurationLatestPerId]) && 'HistoricalData'[IsRealBug] = 1 && 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\" && 'HistoricalData'[status] = \"complete\" && 'HistoricalData'[id] <> 0 && 'HistoricalData'[ww] = current_ww))",
              "var total_completed_5_weeks_ago= CALCULATE(DISTINCTCOUNT('HistoricalData'[id]),FILTER('HistoricalData', 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(BugCompleteProjection[ConfigurationLatestPerId]) && 'HistoricalData'[IsRealBug] = 1 && 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\" && 'HistoricalData'[status] = \"complete\" && 'HistoricalData'[id] <> 0 && 'HistoricalData'[ww] = current_ww - 5))",
              "var average_completed_bugs_per_week = (total_completed_current_ww - total_completed_5_weeks_ago) / 6",
              "return average_completed_bugs_per_week "
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TotalBugManualProjection[ww]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ConfigurationLatestPerId",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "HistoricalData[ConfigurationLatestPerId]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "CROSSJOIN(",
                "\tFILTER(DISTINCT('TotalBugManualProjection'[ww]),TotalBugManualProjection[ww] >= MAX('HistoricalData'[currentww])),",
                "\tFILTER(DISTINCT('HistoricalData'[ConfigurationLatestPerId]), 'HistoricalData'[ConfigurationLatestPerId] <> \"\" && 'HistoricalData'[ConfigurationLatestPerId] <> BLANK())",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "TotalBugManualProjection",
        "columns": [
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "configuration",
            "dataType": "string",
            "sourceColumn": "configuration",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "predicted_value",
            "dataType": "int64",
            "sourceColumn": "predicted_value",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "CONVERT(int, ww) as ww",
                ",configuration",
                ",CONVERT(int, predicted_value) as predicted_value",
                "from ipg_bug_prediction_value"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "CONVERT(int, ww) as ww",
                  ",configuration",
                  ",CONVERT(int, predicted_value) as predicted_value",
                  "from ipg_bug_prediction_value</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "CONVERT(int, ww) as ww",
              ",configuration",
              ",CONVERT(int, predicted_value) as predicted_value",
              "from ipg_bug_prediction_value"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "CONVERT(int, ww) as ww",
              ",configuration",
              ",CONVERT(int, predicted_value) as predicted_value",
              "from ipg_bug_prediction_value</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "TotalBugProjection",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "ww",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TotalBugManualProjection[ww]"
          },
          {
            "type": "calculated",
            "name": "4WksAvgTotal",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var current_ww = max('HistoricalData'[currentww])",
              "var cummulative_total_bug_curr =  CALCULATE(DISTINCTCOUNT('HistoricalData'[id]), 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(TotalBugProjection[ConfigurationLatestPerId]), 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\", 'HistoricalData'[id] <> 0, 'HistoricalData'[ww] = current_ww) ",
              "var cummulative_total_bug_3ww_ago = CALCULATE(DISTINCTCOUNT('HistoricalData'[id]), 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(TotalBugProjection[ConfigurationLatestPerId]), 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\", 'HistoricalData'[id] <> 0, 'HistoricalData'[ww] = current_ww - 3)",
              "",
              "return (cummulative_total_bug_curr - cummulative_total_bug_3ww_ago) / 4"
            ]
          },
          {
            "type": "calculated",
            "name": "5WksAvgTotal",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var current_ww = max('HistoricalData'[currentww])",
              "var cummulative_total_bug_curr =  CALCULATE(DISTINCTCOUNT('HistoricalData'[id]), 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(TotalBugProjection[ConfigurationLatestPerId]), 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\", 'HistoricalData'[id] <> 0, 'HistoricalData'[ww] = current_ww) ",
              "var cummulative_total_bug_4ww_ago = CALCULATE(DISTINCTCOUNT('HistoricalData'[id]), 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(TotalBugProjection[ConfigurationLatestPerId]), 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\", 'HistoricalData'[id] <> 0, 'HistoricalData'[ww] = current_ww - 4)",
              "",
              "return (cummulative_total_bug_curr - cummulative_total_bug_4ww_ago) / 5"
            ]
          },
          {
            "type": "calculated",
            "name": "6WksAvgTotal",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var current_ww = max('HistoricalData'[currentww])",
              "var cummulative_total_bug_curr =  CALCULATE(DISTINCTCOUNT('HistoricalData'[id]), 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(TotalBugProjection[ConfigurationLatestPerId]), 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\", 'HistoricalData'[id] <> 0, 'HistoricalData'[ww] = current_ww) ",
              "var cummulative_total_bug_5ww_ago = CALCULATE(DISTINCTCOUNT('HistoricalData'[id]), 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(TotalBugProjection[ConfigurationLatestPerId]), 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\", 'HistoricalData'[id] <> 0, 'HistoricalData'[ww] = current_ww - 5)",
              "",
              "return (cummulative_total_bug_curr - cummulative_total_bug_5ww_ago) / 6"
            ]
          },
          {
            "type": "calculated",
            "name": "ProjectedTotalBugs4Wks",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var current_ww = max('HistoricalData'[currentww])",
              "var cummulative_total_bug =  CALCULATE(DISTINCTCOUNT('HistoricalData'[id]), 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(TotalBugProjection[ConfigurationLatestPerId]), 'HistoricalData'[IsRealBug] = 1, 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\", 'HistoricalData'[id] <> 0, 'HistoricalData'[ww] = current_ww)",
              "var diff_in_ww_to_current_ww = TotalBugProjection[ww] - current_ww",
              "return cummulative_total_bug + (TotalBugProjection[4WksAvgTotal] * diff_in_ww_to_current_ww)"
            ]
          },
          {
            "type": "calculated",
            "name": "ProjectedTotalBugs5Wks",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var current_ww = max('HistoricalData'[currentww])",
              "var cummulative_total_bug =  CALCULATE(DISTINCTCOUNT('HistoricalData'[id]), 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(TotalBugProjection[ConfigurationLatestPerId]), 'HistoricalData'[IsRealBug] = 1, 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\", 'HistoricalData'[id] <> 0, 'HistoricalData'[ww] = current_ww)",
              "var diff_in_ww_to_current_ww = TotalBugProjection[ww] - current_ww",
              "return cummulative_total_bug + (TotalBugProjection[5WksAvgTotal] * diff_in_ww_to_current_ww)"
            ]
          },
          {
            "type": "calculated",
            "name": "ProjectedTotalBugs6Wks",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var current_ww = max('HistoricalData'[currentww])",
              "var cummulative_total_bug =  CALCULATE(DISTINCTCOUNT('HistoricalData'[id]), 'HistoricalData'[ConfigurationLatestPerId] = EARLIER(TotalBugProjection[ConfigurationLatestPerId]), 'HistoricalData'[IsRealBug] = 1, 'HistoricalData'[bugeco.typeLatestPerId] = \"bug\", 'HistoricalData'[id] <> 0, 'HistoricalData'[ww] = current_ww)",
              "var diff_in_ww_to_current_ww = TotalBugProjection[ww] - current_ww",
              "return cummulative_total_bug + (TotalBugProjection[6WksAvgTotal] * diff_in_ww_to_current_ww)"
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "ConfigurationLatestPerId",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[ConfigurationLatestPerId]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "CROSSJOIN(",
                "\tFILTER(DISTINCT('TotalBugManualProjection'[ww]),TotalBugManualProjection[ww] >= MAX('RAWDATA'[currentww])),",
                "\tFILTER(DISTINCT('RAWDATA'[ConfigurationLatestPerId]), 'RAWDATA'[ConfigurationLatestPerId] <> \"\" && 'RAWDATA'[ConfigurationLatestPerId] <> BLANK())",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "UpdateTime",
        "columns": [
          {
            "name": "LatestUpdate",
            "dataType": "dateTime",
            "sourceColumn": "expr1",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          }
        ],
        "partitions": [
          {
            "name": "UpdateTime",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "select top 1 getdate()",
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select top 1 getdate()</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select top 1 getdate()"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "UpdateTime"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select top 1 getdate()</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "RAWDATA",
        "columns": [
          {
            "name": "tenant",
            "dataType": "string",
            "sourceColumn": "tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "original_family",
            "dataType": "string",
            "sourceColumn": "original_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "family",
            "dataType": "string",
            "sourceColumn": "family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ip_supplier",
            "dataType": "string",
            "sourceColumn": "ip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release",
            "dataType": "string",
            "sourceColumn": "release",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release_affected",
            "dataType": "string",
            "sourceColumn": "release_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "tag",
            "dataType": "string",
            "sourceColumn": "tag",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status_detail",
            "dataType": "string",
            "sourceColumn": "status_detail",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "project",
            "dataType": "string",
            "sourceColumn": "project",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "lineage",
            "dataType": "int64",
            "sourceColumn": "lineage",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "original_lineage",
            "dataType": "int64",
            "sourceColumn": "original_lineage",
            "sourceProviderType": "Integer"
          },
          {
            "name": "title",
            "dataType": "string",
            "sourceColumn": "title",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_submitted_date",
            "dataType": "string",
            "sourceColumn": "ww_submitted_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.env_found",
            "dataType": "string",
            "sourceColumn": "bugeco.env_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.team_found",
            "dataType": "string",
            "sourceColumn": "bugeco.team_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bug_category",
            "dataType": "string",
            "sourceColumn": "bug_category",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_tenant",
            "dataType": "string",
            "sourceColumn": "from_tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_subject",
            "dataType": "string",
            "sourceColumn": "from_subject",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.type",
            "dataType": "string",
            "sourceColumn": "bugeco.type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "component",
            "dataType": "string",
            "sourceColumn": "component",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "url",
            "dataType": "string",
            "sourceColumn": "url",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_prq_gating",
            "dataType": "string",
            "sourceColumn": "ccb_prq_gating",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "currentww",
            "dataType": "int64",
            "sourceColumn": "currentww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentmonth",
            "dataType": "int64",
            "sourceColumn": "currentmonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentyear",
            "dataType": "int64",
            "sourceColumn": "currentyear",
            "sourceProviderType": "Integer"
          },
          {
            "name": "subip_family",
            "dataType": "string",
            "sourceColumn": "subip_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "subip_supplier",
            "dataType": "string",
            "sourceColumn": "subip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.release_found",
            "dataType": "string",
            "sourceColumn": "bugeco.release_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "supplier_org",
            "dataType": "string",
            "sourceColumn": "supplier_org",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "sourceColumn": "is_PreSiPostSi",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_found_bySoc",
            "dataType": "string",
            "sourceColumn": "is_found_bySoc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsCount",
            "dataType": "int64",
            "sourceColumn": "IsCount",
            "sourceProviderType": "Integer"
          },
          {
            "name": "lineage_final",
            "dataType": "int64",
            "sourceColumn": "lineage_final",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "IsSubIP",
            "dataType": "string",
            "sourceColumn": "IsSubIP",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sub_bugcategory",
            "dataType": "string",
            "sourceColumn": "sub_bugcategory",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_status",
            "dataType": "string",
            "sourceColumn": "retro_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_ip_escape",
            "dataType": "string",
            "sourceColumn": "retro_ip_escape",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_learning",
            "dataType": "string",
            "sourceColumn": "retro_global_learning",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_action",
            "dataType": "string",
            "sourceColumn": "retro_global_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_analysis",
            "dataType": "string",
            "sourceColumn": "retro_analysis",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_learnings",
            "dataType": "string",
            "sourceColumn": "retro_learnings",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "owner",
            "dataType": "string",
            "sourceColumn": "owner",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_closed_date",
            "dataType": "string",
            "sourceColumn": "ww_closed_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "generation",
            "dataType": "string",
            "sourceColumn": "generation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "totalID",
            "dataType": "int64",
            "sourceColumn": "totalID",
            "sourceProviderType": "Integer"
          },
          {
            "type": "calculated",
            "name": "Configuration",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " [release]"
          },
          {
            "type": "calculated",
            "name": "IsRealBug",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " if(",
              "'RAWDATA'[status] in {\"open\", \"change_defined\", \"repo_modified\", \"approved\", \"future\", \"complete\"}",
              "||",
              "('RAWDATA'[status]= \"rejected\" && 'RAWDATA'[status_detail] in {\"wont_fix\", \"future_project\", \"future_stepping\"})",
              ",1,0)"
            ]
          },
          {
            "type": "calculated",
            "name": "is_closed_on_this_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " if('RAWDATA'[ww_closed_date_nbr] = 'RAWDATA'[ww],1,0)"
          },
          {
            "type": "calculated",
            "name": "ww_closed_date_nbr",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": " VALUE(LEFT('RAWDATA'[ww_closed_date],4) & RIGHT('RAWDATA'[ww_closed_date],2))"
          },
          {
            "type": "calculated",
            "name": "ConfigurationLatestPerId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var latest_update_ww = MAXX(FILTER('RAWDATA', 'RAWDATA'[id] = EARLIER('RAWDATA'[id])), 'RAWDATA'[ww])",
              "return LOOKUPVALUE('RAWDATA'[Configuration], 'RAWDATA'[id], 'RAWDATA'[id],'RAWDATA'[ww], latest_update_ww)"
            ]
          },
          {
            "type": "calculated",
            "name": "bugeco.typeLatestPerId",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "var latest_update_ww = MAXX(FILTER('RAWDATA', 'RAWDATA'[id] = EARLIER('RAWDATA'[id])), 'RAWDATA'[ww])",
              "return LOOKUPVALUE('RAWDATA'[bugeco.type], 'RAWDATA'[id], 'RAWDATA'[id],'RAWDATA'[ww], latest_update_ww)"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select * ",
                "from cached_ipg_bug_historical",
                "where bug_category in ('rtl','rdl','upf') -- Blake requested 08/02/2021"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select * ",
                  "from cached_ipg_bug_historical",
                  "where bug_category in ('rtl','rdl','upf') -- Blake requested 08/02/2021</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select * ",
              "from cached_ipg_bug_historical",
              "where bug_category in ('rtl','rdl','upf') -- Blake requested 08/02/2021"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select * ",
              "from cached_ipg_bug_historical",
              "where bug_category in ('rtl','rdl','upf') -- Blake requested 08/02/2021</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "HistoricalData",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "tenant",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[tenant]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[ww]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "original_family",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[original_family]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "family",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[family]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "priority",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[priority]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ip_supplier",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[ip_supplier]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "release",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[release]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "release_affected",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[release_affected]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "tag",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[tag]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "status",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[status]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "status_detail",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[status_detail]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "project",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[project]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "id",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[id]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "lineage",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[lineage]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "original_lineage",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[original_lineage]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "title",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[title]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_submitted_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[ww_submitted_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "bugeco.env_found",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[bugeco.env_found]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "bugeco.team_found",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[bugeco.team_found]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "bug_category",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[bug_category]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "from_tenant",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[from_tenant]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "from_subject",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[from_subject]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "bugeco.type",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[bugeco.type]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "component",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[component]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "url",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[url]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_prq_gating",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[ccb_prq_gating]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "currentww",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[currentww]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "currentmonth",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[currentmonth]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "currentyear",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[currentyear]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "subip_family",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[subip_family]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "subip_supplier",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[subip_supplier]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "bugeco.release_found",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[bugeco.release_found]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "supplier_org",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[supplier_org]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[is_PreSiPostSi]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "is_found_bySoc",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[is_found_bySoc]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "IsCount",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[IsCount]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "lineage_final",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[lineage_final]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "IsSubIP",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[IsSubIP]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "sub_bugcategory",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[sub_bugcategory]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "retro_status",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[retro_status]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "retro_ip_escape",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[retro_ip_escape]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "retro_global_learning",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[retro_global_learning]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "retro_global_action",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[retro_global_action]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "retro_analysis",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[retro_analysis]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "retro_learnings",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[retro_learnings]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "owner",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[owner]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_closed_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[ww_closed_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "generation",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[generation]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "totalID",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[totalID]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Configuration",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[Configuration]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "IsRealBug",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[IsRealBug]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "is_closed_on_this_ww",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[is_closed_on_this_ww]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_closed_date_nbr",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[ww_closed_date_nbr]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ConfigurationLatestPerId",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[ConfigurationLatestPerId]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "bugeco.typeLatestPerId",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "RAWDATA[bugeco.typeLatestPerId]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "var id_from_last_snap_shot = SELECTCOLUMNS(",
                "\tFILTER('RAWDATA', 'RAWDATA'[IsRealBug] = 1 && 'RAWDATA'[bugeco.typeLatestPerId] = \"bug\" && 'RAWDATA'[ww] = MAX('RAWDATA'[currentww]))",
                "\t,\"id\",'RAWDATA'[id]",
                "\t)",
                "",
                "return",
                "FILTER('RAWDATA', 'RAWDATA'[id] in id_from_last_snap_shot)"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Measure 1",
            "expression": "CALCULATE(DISTINCTCOUNT(HistoricalData[id]),HistoricalData[ww] = 202103, HistoricalData[status] <> \"complete\", HistoricalData[ConfigurationLatestPerId] = \"PXP PCIe_1x4_MTLSOCS\") "
          }
        ]
      },
      {
        "name": "QueryBugHIP",
        "columns": [
          {
            "name": "tenant",
            "dataType": "string",
            "sourceColumn": "tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "closed_date",
            "dataType": "dateTime",
            "sourceColumn": "closed_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "original_family",
            "dataType": "string",
            "sourceColumn": "original_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "family",
            "dataType": "string",
            "sourceColumn": "family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ip_supplier",
            "dataType": "string",
            "sourceColumn": "ip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release",
            "dataType": "string",
            "sourceColumn": "release",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release_affected",
            "dataType": "string",
            "sourceColumn": "release_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "tag",
            "dataType": "string",
            "sourceColumn": "tag",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status_detail",
            "dataType": "string",
            "sourceColumn": "status_detail",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "project",
            "dataType": "string",
            "sourceColumn": "project",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SoC Die",
            "dataType": "string",
            "sourceColumn": "SoC Die",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "lineage",
            "dataType": "int64",
            "sourceColumn": "lineage",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "original_lineage",
            "dataType": "string",
            "sourceColumn": "original_lineage",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "title",
            "dataType": "string",
            "sourceColumn": "title",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_submitted_date",
            "dataType": "string",
            "sourceColumn": "ww_submitted_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_date",
            "dataType": "dateTime",
            "sourceColumn": "submitted_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "updated_date",
            "dataType": "dateTime",
            "sourceColumn": "updated_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ww_updated_date",
            "dataType": "int64",
            "sourceColumn": "ww_updated_date",
            "sourceProviderType": "Integer"
          },
          {
            "name": "bugeco.env_found",
            "dataType": "string",
            "sourceColumn": "bugeco.env_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.team_found",
            "dataType": "string",
            "sourceColumn": "bugeco.team_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bug_category",
            "dataType": "string",
            "sourceColumn": "bug_category",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.bug_class",
            "dataType": "string",
            "sourceColumn": "bugeco.bug_class",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_tenant",
            "dataType": "string",
            "sourceColumn": "from_tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_subject",
            "dataType": "string",
            "sourceColumn": "from_subject",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.type",
            "dataType": "string",
            "sourceColumn": "bugeco.type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "component",
            "dataType": "string",
            "sourceColumn": "component",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "url",
            "dataType": "string",
            "sourceColumn": "url",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_change_scope",
            "dataType": "string",
            "sourceColumn": "ccb_change_scope",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_eta",
            "dataType": "dateTime",
            "sourceColumn": "ccb_eta",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ccb_order",
            "dataType": "int64",
            "sourceColumn": "ccb_order",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ccb_prq_gating",
            "dataType": "string",
            "sourceColumn": "ccb_prq_gating",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_status",
            "dataType": "string",
            "sourceColumn": "ccb_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_action",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_proposal",
            "dataType": "string",
            "sourceColumn": "ccb_proposal",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_mode",
            "dataType": "string",
            "sourceColumn": "ccb_mode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_disposition_type",
            "dataType": "string",
            "sourceColumn": "ccb_disposition_type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_defined_date",
            "dataType": "string",
            "sourceColumn": "ww_defined_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_approved_date",
            "dataType": "string",
            "sourceColumn": "ww_approved_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_predrop_closure_date_sdg",
            "dataType": "string",
            "sourceColumn": "ww_predrop_closure_date_sdg",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "currentww",
            "dataType": "int64",
            "sourceColumn": "currentww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentmonth",
            "dataType": "int64",
            "sourceColumn": "currentmonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentyear",
            "dataType": "int64",
            "sourceColumn": "currentyear",
            "sourceProviderType": "Integer"
          },
          {
            "name": "subip_family",
            "dataType": "string",
            "sourceColumn": "subip_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "subip_supplier",
            "dataType": "string",
            "sourceColumn": "subip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.release_found",
            "dataType": "string",
            "sourceColumn": "bugeco.release_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "supplier_org",
            "dataType": "string",
            "sourceColumn": "supplier_org",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "sourceColumn": "is_PreSiPostSi",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "org_is_found_bySoc",
            "dataType": "string",
            "sourceColumn": "org_is_found_bySoc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsCount",
            "dataType": "int64",
            "sourceColumn": "IsCount",
            "sourceProviderType": "Integer"
          },
          {
            "name": "lineage_final",
            "dataType": "int64",
            "sourceColumn": "lineage_final",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "IsSubIP",
            "dataType": "string",
            "sourceColumn": "IsSubIP",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sub_bugcategory",
            "dataType": "string",
            "sourceColumn": "sub_bugcategory",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_status",
            "dataType": "string",
            "sourceColumn": "retro_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_ip_escape",
            "dataType": "string",
            "sourceColumn": "retro_ip_escape",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_learning",
            "dataType": "string",
            "sourceColumn": "retro_global_learning",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_action",
            "dataType": "string",
            "sourceColumn": "retro_global_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_analysis",
            "dataType": "string",
            "sourceColumn": "retro_analysis",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_learnings",
            "dataType": "string",
            "sourceColumn": "retro_learnings",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "owner",
            "dataType": "string",
            "sourceColumn": "owner",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_closed_date",
            "dataType": "string",
            "sourceColumn": "ww_closed_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_repo_modified_date",
            "dataType": "string",
            "sourceColumn": "ww_repo_modified_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BugFixedDoneDate",
            "dataType": "string",
            "sourceColumn": "BugFixedDoneDate",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "generation",
            "dataType": "string",
            "sourceColumn": "generation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsRealBug",
            "dataType": "int64",
            "sourceColumn": "IsRealBug",
            "sourceProviderType": "Integer"
          },
          {
            "name": "milestone",
            "dataType": "string",
            "sourceColumn": "milestone",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_response_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_response_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_resolution_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_resolution_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_response_date",
            "dataType": "dateTime",
            "sourceColumn": "sla_response_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "sla_resolution_date",
            "dataType": "dateTime",
            "sourceColumn": "sla_resolution_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "sla_response_met",
            "dataType": "string",
            "sourceColumn": "sla_response_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_resolution_met",
            "dataType": "string",
            "sourceColumn": "sla_resolution_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_by",
            "dataType": "string",
            "sourceColumn": "submitted_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "updated_by",
            "dataType": "string",
            "sourceColumn": "updated_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ingredient",
            "dataType": "string",
            "sourceColumn": "ingredient",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_future_date",
            "dataType": "string",
            "sourceColumn": "ww_future_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_reason",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_reason"
          },
          {
            "name": "ccb_workaround",
            "dataType": "string",
            "sourceColumn": "ccb_workaround"
          },
          {
            "name": "predrop_ww",
            "dataType": "string",
            "sourceColumn": "predrop_ww"
          },
          {
            "name": "ccb_meeting",
            "dataType": "string",
            "sourceColumn": "ccb_meeting"
          },
          {
            "name": "gate",
            "dataType": "string",
            "sourceColumn": "gate"
          },
          {
            "name": "reason",
            "dataType": "string",
            "sourceColumn": "reason"
          },
          {
            "name": "open_age",
            "dataType": "int64",
            "sourceColumn": "open_age"
          },
          {
            "name": "unvalidated_age",
            "dataType": "double",
            "sourceColumn": "unvalidated_age"
          },
          {
            "name": "validator",
            "dataType": "string",
            "sourceColumn": "validator"
          },
          {
            "name": "repo_modified_date",
            "dataType": "dateTime",
            "sourceColumn": "repo_modified_date"
          },
          {
            "type": "calculated",
            "name": "max_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "MAXX(filter(QueryBugHip, QueryBugHip[id]=EARLIER(QueryBugHip[id])),QueryBugHip[ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwfamily",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugHip[family],QueryBugHip[id],QueryBugHip[id],QueryBugHip[ww], QueryBugHip[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwrelease",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugHIP[release],QueryBugHip[id],QueryBugHip[id],QueryBugHip[ww], QueryBugHip[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwSocDie",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugHIP[SoC Die],QueryBugHip[id],QueryBugHip[id],QueryBugHip[ww], QueryBugHip[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwip_supplier",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugHIP[ip_supplier],QueryBugHip[id],QueryBugHip[id],QueryBugHip[ww], QueryBugHip[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwbug_category",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugHIP[bug_category],QueryBugHip[id],QueryBugHip[id],QueryBugHip[ww], QueryBugHip[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwsub_bugcategory",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugHIP[sub_bugcategory],QueryBugHip[id],QueryBugHip[id],QueryBugHip[ww], QueryBugHip[max_ww])"
          }
        ],
        "partitions": [
          {
            "name": "QueryBugHIP",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "[tenant]",
                ",ww",
                ",closed_date",
                ",[original_family]",
                ",[family]",
                ",priority",
                ",[ip_supplier] ",
                ",[release]",
                ",[release_affected] ",
                ", [tag]",
                ",[status]",
                ",[status_detail]",
                ",[project]",
                ",[SoC Die]",
                ",[id]",
                ",[lineage]",
                ",[original_lineage]",
                ",[title]",
                ", [ww_submitted_date]",
                ",[submitted_date]",
                ",[updated_date]",
                ",ww_updated_date",
                ",[bugeco.env_found] ",
                ",[bugeco.team_found]",
                ",[bug_category]",
                ",[bugeco.bug_class]",
                ",from_tenant",
                ", from_subject",
                ",[bugeco.type]",
                ",component",
                ",url",
                ",[ccb_change_scope]",
                ",[ccb_eta]",
                ",[ccb_order]",
                "--,[ccb_por]",
                ",[ccb_prq_gating]",
                "--,[ccb_questionnaire]",
                ",[ccb_status]",
                ",[ccb_wontfix_action]",
                ",[ccb_wontfix_reason]",
                ",[ccb_workaround]",
                ",[ccb_proposal]",
                ",[ccb_mode]",
                ",[ccb_disposition_type]",
                ",[ww_defined_date]",
                ",[ww_approved_date]",
                ",ww_predrop_closure_date_sdg",
                ",[currentww]",
                ",[currentmonth]",
                ",[currentyear]",
                ",[subip_family]",
                ",[subip_supplier]",
                ",[bugeco.release_found]",
                ", supplier_org",
                ",[is_PreSiPostSi]",
                ",[org_is_found_bySoc]",
                ", IsCount ",
                ",[lineage_final]",
                ",IsSubIP",
                ",[sub_bugcategory]",
                ",retro_status",
                ",retro_ip_escape",
                ",retro_global_learning",
                ",retro_global_action",
                ",retro_analysis",
                ",retro_learnings",
                ",[owner]",
                ",[ww_closed_date]",
                ",[ww_repo_modified_date]",
                ",[BugFixedDoneDate]",
                ",[generation]",
                ", IsRealBug",
                ",milestone",
                ",[ww_sla_response_date] ",
                ",[ww_sla_resolution_date]",
                ",[sla_response_date]",
                ",[sla_resolution_date]",
                ",[sla_response_met] ",
                " ,[sla_resolution_met]",
                ", submitted_by",
                ", updated_by",
                ",[ingredient]",
                ",[ww_future_date]",
                ",[predrop_ww]",
                ",[ccb_meeting]",
                ",[gate]",
                ",[reason]",
                ",open_age ",
                ",unvalidated_age",
                ",validator",
                ",[repo_modified_date]",
                "from v_ipg_hip_bug_historical"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "[tenant]",
                  ",ww",
                  ",closed_date",
                  ",[original_family]",
                  ",[family]",
                  ",priority",
                  ",[ip_supplier] ",
                  ",[release]",
                  ",[release_affected] ",
                  ", [tag]",
                  ",[status]",
                  ",[status_detail]",
                  ",[project]",
                  ",[SoC Die]",
                  ",[id]",
                  ",[lineage]",
                  ",[original_lineage]",
                  ",[title]",
                  ", [ww_submitted_date]",
                  ",[submitted_date]",
                  ",[updated_date]",
                  ",ww_updated_date",
                  ",[bugeco.env_found] ",
                  ",[bugeco.team_found]",
                  ",[bug_category]",
                  ",[bugeco.bug_class]",
                  ",from_tenant",
                  ", from_subject",
                  ",[bugeco.type]",
                  ",component",
                  ",url",
                  ",[ccb_change_scope]",
                  ",[ccb_eta]",
                  ",[ccb_order]",
                  "--,[ccb_por]",
                  ",[ccb_prq_gating]",
                  "--,[ccb_questionnaire]",
                  ",[ccb_status]",
                  ",[ccb_wontfix_action]",
                  ",[ccb_wontfix_reason]",
                  ",[ccb_workaround]",
                  ",[ccb_proposal]",
                  ",[ccb_mode]",
                  ",[ccb_disposition_type]",
                  ",[ww_defined_date]",
                  ",[ww_approved_date]",
                  ",ww_predrop_closure_date_sdg",
                  ",[currentww]",
                  ",[currentmonth]",
                  ",[currentyear]",
                  ",[subip_family]",
                  ",[subip_supplier]",
                  ",[bugeco.release_found]",
                  ", supplier_org",
                  ",[is_PreSiPostSi]",
                  ",[org_is_found_bySoc]",
                  ", IsCount ",
                  ",[lineage_final]",
                  ",IsSubIP",
                  ",[sub_bugcategory]",
                  ",retro_status",
                  ",retro_ip_escape",
                  ",retro_global_learning",
                  ",retro_global_action",
                  ",retro_analysis",
                  ",retro_learnings",
                  ",[owner]",
                  ",[ww_closed_date]",
                  ",[ww_repo_modified_date]",
                  ",[BugFixedDoneDate]",
                  ",[generation]",
                  ", IsRealBug",
                  ",milestone",
                  ",[ww_sla_response_date] ",
                  ",[ww_sla_resolution_date]",
                  ",[sla_response_date]",
                  ",[sla_resolution_date]",
                  ",[sla_response_met] ",
                  " ,[sla_resolution_met]",
                  ", submitted_by",
                  ", updated_by",
                  ",[ingredient]",
                  ",[ww_future_date]",
                  ",[predrop_ww]",
                  ",[ccb_meeting]",
                  ",[gate]",
                  ",[reason]",
                  ",open_age ",
                  ",unvalidated_age",
                  ",validator",
                  ",[repo_modified_date]",
                  "from v_ipg_hip_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_hip_bug_historical"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryBugHIP"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_hip_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryBugSIP",
        "columns": [
          {
            "name": "tenant",
            "dataType": "string",
            "sourceColumn": "tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "closed_date",
            "dataType": "dateTime",
            "sourceColumn": "closed_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "original_family",
            "dataType": "string",
            "sourceColumn": "original_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "family",
            "dataType": "string",
            "sourceColumn": "family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ip_supplier",
            "dataType": "string",
            "sourceColumn": "ip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release",
            "dataType": "string",
            "sourceColumn": "release",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release_affected",
            "dataType": "string",
            "sourceColumn": "release_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "tag",
            "dataType": "string",
            "sourceColumn": "tag",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status_detail",
            "dataType": "string",
            "sourceColumn": "status_detail",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "project",
            "dataType": "string",
            "sourceColumn": "project",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SoC Die",
            "dataType": "string",
            "sourceColumn": "SoC Die",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "lineage",
            "dataType": "int64",
            "sourceColumn": "lineage",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "original_lineage",
            "dataType": "int64",
            "sourceColumn": "original_lineage",
            "sourceProviderType": "Integer"
          },
          {
            "name": "title",
            "dataType": "string",
            "sourceColumn": "title",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_submitted_date",
            "dataType": "string",
            "sourceColumn": "ww_submitted_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_date",
            "dataType": "dateTime",
            "sourceColumn": "submitted_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "updated_date",
            "dataType": "dateTime",
            "sourceColumn": "updated_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ww_updated_date",
            "dataType": "int64",
            "sourceColumn": "ww_updated_date",
            "sourceProviderType": "Integer"
          },
          {
            "name": "bugeco.env_found",
            "dataType": "string",
            "sourceColumn": "bugeco.env_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.team_found",
            "dataType": "string",
            "sourceColumn": "bugeco.team_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bug_category",
            "dataType": "string",
            "sourceColumn": "bug_category",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.bug_class",
            "dataType": "string",
            "sourceColumn": "bugeco.bug_class",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_tenant",
            "dataType": "string",
            "sourceColumn": "from_tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_subject",
            "dataType": "string",
            "sourceColumn": "from_subject",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.type",
            "dataType": "string",
            "sourceColumn": "bugeco.type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "component",
            "dataType": "string",
            "sourceColumn": "component",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "url",
            "dataType": "string",
            "sourceColumn": "url",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_change_scope",
            "dataType": "string",
            "sourceColumn": "ccb_change_scope",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_eta",
            "dataType": "dateTime",
            "sourceColumn": "ccb_eta",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ccb_order",
            "dataType": "int64",
            "sourceColumn": "ccb_order",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ccb_prq_gating",
            "dataType": "string",
            "sourceColumn": "ccb_prq_gating",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_status",
            "dataType": "string",
            "sourceColumn": "ccb_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_action",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_proposal",
            "dataType": "string",
            "sourceColumn": "ccb_proposal",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_mode",
            "dataType": "string",
            "sourceColumn": "ccb_mode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_disposition_type",
            "dataType": "string",
            "sourceColumn": "ccb_disposition_type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_defined_date",
            "dataType": "string",
            "sourceColumn": "ww_defined_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_approved_date",
            "dataType": "string",
            "sourceColumn": "ww_approved_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_predrop_closure_date_sdg",
            "dataType": "string",
            "sourceColumn": "ww_predrop_closure_date_sdg",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "currentww",
            "dataType": "int64",
            "sourceColumn": "currentww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentmonth",
            "dataType": "int64",
            "sourceColumn": "currentmonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentyear",
            "dataType": "int64",
            "sourceColumn": "currentyear",
            "sourceProviderType": "Integer"
          },
          {
            "name": "subip_family",
            "dataType": "string",
            "sourceColumn": "subip_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "subip_supplier",
            "dataType": "string",
            "sourceColumn": "subip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.release_found",
            "dataType": "string",
            "sourceColumn": "bugeco.release_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "supplier_org",
            "dataType": "string",
            "sourceColumn": "supplier_org",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "sourceColumn": "is_PreSiPostSi",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "org_is_found_bySoc",
            "dataType": "string",
            "sourceColumn": "org_is_found_bySoc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsCount",
            "dataType": "int64",
            "sourceColumn": "IsCount",
            "sourceProviderType": "Integer"
          },
          {
            "name": "lineage_final",
            "dataType": "int64",
            "sourceColumn": "lineage_final",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "IsSubIP",
            "dataType": "string",
            "sourceColumn": "IsSubIP",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sub_bugcategory",
            "dataType": "string",
            "sourceColumn": "sub_bugcategory",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_status",
            "dataType": "string",
            "sourceColumn": "retro_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_ip_escape",
            "dataType": "string",
            "sourceColumn": "retro_ip_escape",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_learning",
            "dataType": "string",
            "sourceColumn": "retro_global_learning",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_action",
            "dataType": "string",
            "sourceColumn": "retro_global_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_analysis",
            "dataType": "string",
            "sourceColumn": "retro_analysis",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_learnings",
            "dataType": "string",
            "sourceColumn": "retro_learnings",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "owner",
            "dataType": "string",
            "sourceColumn": "owner",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_closed_date",
            "dataType": "string",
            "sourceColumn": "ww_closed_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_repo_modified_date",
            "dataType": "string",
            "sourceColumn": "ww_repo_modified_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BugFixedDoneDate",
            "dataType": "string",
            "sourceColumn": "BugFixedDoneDate",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "generation",
            "dataType": "string",
            "sourceColumn": "generation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsRealBug",
            "dataType": "int64",
            "sourceColumn": "IsRealBug",
            "sourceProviderType": "Integer"
          },
          {
            "name": "milestone",
            "dataType": "string",
            "sourceColumn": "milestone",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_response_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_response_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_resolution_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_resolution_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_response_date",
            "dataType": "dateTime",
            "sourceColumn": "sla_response_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "sla_resolution_date",
            "dataType": "dateTime",
            "sourceColumn": "sla_resolution_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "sla_response_met",
            "dataType": "string",
            "sourceColumn": "sla_response_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_resolution_met",
            "dataType": "string",
            "sourceColumn": "sla_resolution_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_by",
            "dataType": "string",
            "sourceColumn": "submitted_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "updated_by",
            "dataType": "string",
            "sourceColumn": "updated_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ingredient",
            "dataType": "string",
            "sourceColumn": "ingredient",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_future_date",
            "dataType": "string",
            "sourceColumn": "ww_future_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_reason",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_reason"
          },
          {
            "name": "ccb_workaround",
            "dataType": "string",
            "sourceColumn": "ccb_workaround"
          },
          {
            "name": "predrop_ww",
            "dataType": "string",
            "sourceColumn": "predrop_ww"
          },
          {
            "name": "ccb_meeting",
            "dataType": "string",
            "sourceColumn": "ccb_meeting"
          },
          {
            "name": "gate",
            "dataType": "string",
            "sourceColumn": "gate"
          },
          {
            "name": "reason",
            "dataType": "string",
            "sourceColumn": "reason"
          },
          {
            "name": "open_age",
            "dataType": "int64",
            "sourceColumn": "open_age"
          },
          {
            "name": "unvalidated_age",
            "dataType": "double",
            "sourceColumn": "unvalidated_age"
          },
          {
            "name": "validator",
            "dataType": "string",
            "sourceColumn": "validator"
          },
          {
            "name": "repo_modified_date",
            "dataType": "dateTime",
            "sourceColumn": "repo_modified_date"
          },
          {
            "type": "calculated",
            "name": "max_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "MAXX(filter(QueryBugSIP, QueryBugSIP[id]=EARLIER(QueryBugSIP[id])),QueryBugSIP[ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwfamily",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugSIP[family],QueryBugSIP[id],QueryBugSIP[id],QueryBugSIP[ww], QueryBugSIP[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwrelease",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugSIP[release],QueryBugSIP[id],QueryBugSIP[id],QueryBugSIP[ww], QueryBugSIP[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwSocDie",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugSIP[SoC Die],QueryBugSIP[id],QueryBugSIP[id],QueryBugSIP[ww], QueryBugSIP[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwip_supplier",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugSIP[ip_supplier],QueryBugSIP[id],QueryBugSIP[id],QueryBugSIP[ww], QueryBugSIP[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwbug_category",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugSIP[bug_category],QueryBugSIP[id],QueryBugSIP[id],QueryBugSIP[ww], QueryBugSIP[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwsub_bugcategory",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugSIP[sub_bugcategory],QueryBugSIP[id],QueryBugSIP[id],QueryBugSIP[ww], QueryBugSIP[max_ww])"
          }
        ],
        "partitions": [
          {
            "name": "QuerySIP",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "[tenant]",
                ",ww",
                ",closed_date",
                ",[original_family]",
                ",[family]",
                ",priority",
                ",[ip_supplier] ",
                ",[release]",
                ",[release_affected] ",
                ", [tag]",
                ",[status]",
                ",[status_detail]",
                ",[project]",
                ",[SoC Die]",
                ",[id]",
                ",[lineage]",
                ",[original_lineage]",
                ",[title]",
                ", [ww_submitted_date]",
                ",[submitted_date]",
                ",[updated_date]",
                ",ww_updated_date",
                ",[bugeco.env_found] ",
                ",[bugeco.team_found]",
                ",[bug_category]",
                ",[bugeco.bug_class]",
                ",from_tenant",
                ", from_subject",
                ",[bugeco.type]",
                ",component",
                ",url",
                ",[ccb_change_scope]",
                ",[ccb_eta]",
                ",[ccb_order]",
                "--,[ccb_por]",
                ",[ccb_prq_gating]",
                "--,[ccb_questionnaire]",
                ",[ccb_status]",
                ",[ccb_wontfix_action]",
                ",[ccb_wontfix_reason]",
                ",[ccb_workaround]",
                ",[ccb_proposal]",
                ",[ccb_mode]",
                ",[ccb_disposition_type]",
                ",[ww_defined_date]",
                ",[ww_approved_date]",
                ",ww_predrop_closure_date_sdg",
                ",[currentww]",
                ",[currentmonth]",
                ",[currentyear]",
                ",[subip_family]",
                ",[subip_supplier]",
                ",[bugeco.release_found]",
                ", supplier_org",
                ",[is_PreSiPostSi]",
                ",[org_is_found_bySoc]",
                ", IsCount ",
                ",[lineage_final]",
                ",IsSubIP",
                ",[sub_bugcategory]",
                ",retro_status",
                ",retro_ip_escape",
                ",retro_global_learning",
                ",retro_global_action",
                ",retro_analysis",
                ",retro_learnings",
                ",[owner]",
                ",[ww_closed_date]",
                ",[ww_repo_modified_date]",
                ",[BugFixedDoneDate]",
                ",[generation]",
                ", IsRealBug",
                ",milestone",
                ",[ww_sla_response_date] ",
                ",[ww_sla_resolution_date]",
                ",[sla_response_date]",
                ",[sla_resolution_date]",
                ",[sla_response_met] ",
                " ,[sla_resolution_met]",
                ", submitted_by",
                ", updated_by",
                ",[ingredient]",
                ",[ww_future_date]",
                ",[predrop_ww]",
                ",[ccb_meeting]",
                ",[gate]",
                ",[reason]",
                ",open_age ",
                ",unvalidated_age",
                ",validator",
                ",[repo_modified_date]",
                "from v_ipg_sip_bug_historical"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "[tenant]",
                  ",ww",
                  ",closed_date",
                  ",[original_family]",
                  ",[family]",
                  ",priority",
                  ",[ip_supplier] ",
                  ",[release]",
                  ",[release_affected] ",
                  ", [tag]",
                  ",[status]",
                  ",[status_detail]",
                  ",[project]",
                  ",[SoC Die]",
                  ",[id]",
                  ",[lineage]",
                  ",[original_lineage]",
                  ",[title]",
                  ", [ww_submitted_date]",
                  ",[submitted_date]",
                  ",[updated_date]",
                  ",ww_updated_date",
                  ",[bugeco.env_found] ",
                  ",[bugeco.team_found]",
                  ",[bug_category]",
                  ",[bugeco.bug_class]",
                  ",from_tenant",
                  ", from_subject",
                  ",[bugeco.type]",
                  ",component",
                  ",url",
                  ",[ccb_change_scope]",
                  ",[ccb_eta]",
                  ",[ccb_order]",
                  "--,[ccb_por]",
                  ",[ccb_prq_gating]",
                  "--,[ccb_questionnaire]",
                  ",[ccb_status]",
                  ",[ccb_wontfix_action]",
                  ",[ccb_wontfix_reason]",
                  ",[ccb_workaround]",
                  ",[ccb_proposal]",
                  ",[ccb_mode]",
                  ",[ccb_disposition_type]",
                  ",[ww_defined_date]",
                  ",[ww_approved_date]",
                  ",ww_predrop_closure_date_sdg",
                  ",[currentww]",
                  ",[currentmonth]",
                  ",[currentyear]",
                  ",[subip_family]",
                  ",[subip_supplier]",
                  ",[bugeco.release_found]",
                  ", supplier_org",
                  ",[is_PreSiPostSi]",
                  ",[org_is_found_bySoc]",
                  ", IsCount ",
                  ",[lineage_final]",
                  ",IsSubIP",
                  ",[sub_bugcategory]",
                  ",retro_status",
                  ",retro_ip_escape",
                  ",retro_global_learning",
                  ",retro_global_action",
                  ",retro_analysis",
                  ",retro_learnings",
                  ",[owner]",
                  ",[ww_closed_date]",
                  ",[ww_repo_modified_date]",
                  ",[BugFixedDoneDate]",
                  ",[generation]",
                  ", IsRealBug",
                  ",milestone",
                  ",[ww_sla_response_date] ",
                  ",[ww_sla_resolution_date]",
                  ",[sla_response_date]",
                  ",[sla_resolution_date]",
                  ",[sla_response_met] ",
                  " ,[sla_resolution_met]",
                  ", submitted_by",
                  ", updated_by",
                  ",[ingredient]",
                  ",[ww_future_date]",
                  ",[predrop_ww]",
                  ",[ccb_meeting]",
                  ",[gate]",
                  ",[reason]",
                  ",open_age ",
                  ",unvalidated_age",
                  ",validator",
                  ",[repo_modified_date]",
                  "from v_ipg_sip_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_sip_bug_historical"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QuerySIP"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_sip_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryBugWave3HW",
        "columns": [
          {
            "name": "tenant",
            "dataType": "string",
            "sourceColumn": "tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "closed_date",
            "dataType": "dateTime",
            "sourceColumn": "closed_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "original_family",
            "dataType": "string",
            "sourceColumn": "original_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "family",
            "dataType": "string",
            "sourceColumn": "family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ip_supplier",
            "dataType": "string",
            "sourceColumn": "ip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release",
            "dataType": "string",
            "sourceColumn": "release",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release_affected",
            "dataType": "string",
            "sourceColumn": "release_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "tag",
            "dataType": "string",
            "sourceColumn": "tag",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status_detail",
            "dataType": "string",
            "sourceColumn": "status_detail",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "project",
            "dataType": "string",
            "sourceColumn": "project",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SoC Die",
            "dataType": "string",
            "sourceColumn": "SoC Die",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "lineage",
            "dataType": "int64",
            "sourceColumn": "lineage",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "original_lineage",
            "dataType": "string",
            "sourceColumn": "original_lineage",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "title",
            "dataType": "string",
            "sourceColumn": "title",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_submitted_date",
            "dataType": "string",
            "sourceColumn": "ww_submitted_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_date",
            "dataType": "dateTime",
            "sourceColumn": "submitted_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "updated_date",
            "dataType": "dateTime",
            "sourceColumn": "updated_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ww_updated_date",
            "dataType": "int64",
            "sourceColumn": "ww_updated_date",
            "sourceProviderType": "Integer"
          },
          {
            "name": "bugeco.env_found",
            "dataType": "string",
            "sourceColumn": "bugeco.env_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.team_found",
            "dataType": "string",
            "sourceColumn": "bugeco.team_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bug_category",
            "dataType": "string",
            "sourceColumn": "bug_category",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.bug_class",
            "dataType": "string",
            "sourceColumn": "bugeco.bug_class",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_tenant",
            "dataType": "string",
            "sourceColumn": "from_tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_subject",
            "dataType": "string",
            "sourceColumn": "from_subject",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.type",
            "dataType": "string",
            "sourceColumn": "bugeco.type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "component",
            "dataType": "string",
            "sourceColumn": "component",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "url",
            "dataType": "string",
            "sourceColumn": "url",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_change_scope",
            "dataType": "string",
            "sourceColumn": "ccb_change_scope",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_eta",
            "dataType": "dateTime",
            "sourceColumn": "ccb_eta",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ccb_order",
            "dataType": "int64",
            "sourceColumn": "ccb_order",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ccb_prq_gating",
            "dataType": "string",
            "sourceColumn": "ccb_prq_gating",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_status",
            "dataType": "string",
            "sourceColumn": "ccb_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_action",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_reason",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_reason",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_workaround",
            "dataType": "string",
            "sourceColumn": "ccb_workaround",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_proposal",
            "dataType": "string",
            "sourceColumn": "ccb_proposal",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_mode",
            "dataType": "string",
            "sourceColumn": "ccb_mode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_disposition_type",
            "dataType": "string",
            "sourceColumn": "ccb_disposition_type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_defined_date",
            "dataType": "string",
            "sourceColumn": "ww_defined_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_approved_date",
            "dataType": "string",
            "sourceColumn": "ww_approved_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_predrop_closure_date_sdg",
            "dataType": "string",
            "sourceColumn": "ww_predrop_closure_date_sdg",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "currentww",
            "dataType": "int64",
            "sourceColumn": "currentww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentmonth",
            "dataType": "int64",
            "sourceColumn": "currentmonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentyear",
            "dataType": "int64",
            "sourceColumn": "currentyear",
            "sourceProviderType": "Integer"
          },
          {
            "name": "subip_family",
            "dataType": "string",
            "sourceColumn": "subip_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "subip_supplier",
            "dataType": "string",
            "sourceColumn": "subip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.release_found",
            "dataType": "string",
            "sourceColumn": "bugeco.release_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "supplier_org",
            "dataType": "string",
            "sourceColumn": "supplier_org",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "sourceColumn": "is_PreSiPostSi",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "org_is_found_bySoc",
            "dataType": "string",
            "sourceColumn": "org_is_found_bySoc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsCount",
            "dataType": "int64",
            "sourceColumn": "IsCount",
            "sourceProviderType": "Integer"
          },
          {
            "name": "lineage_final",
            "dataType": "int64",
            "sourceColumn": "lineage_final",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "IsSubIP",
            "dataType": "string",
            "sourceColumn": "IsSubIP",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sub_bugcategory",
            "dataType": "string",
            "sourceColumn": "sub_bugcategory",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_status",
            "dataType": "string",
            "sourceColumn": "retro_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_ip_escape",
            "dataType": "string",
            "sourceColumn": "retro_ip_escape",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_learning",
            "dataType": "string",
            "sourceColumn": "retro_global_learning",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_action",
            "dataType": "string",
            "sourceColumn": "retro_global_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_analysis",
            "dataType": "string",
            "sourceColumn": "retro_analysis",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_learnings",
            "dataType": "string",
            "sourceColumn": "retro_learnings",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "owner",
            "dataType": "string",
            "sourceColumn": "owner",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_closed_date",
            "dataType": "string",
            "sourceColumn": "ww_closed_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_repo_modified_date",
            "dataType": "string",
            "sourceColumn": "ww_repo_modified_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BugFixedDoneDate",
            "dataType": "string",
            "sourceColumn": "BugFixedDoneDate",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "generation",
            "dataType": "string",
            "sourceColumn": "generation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsRealBug",
            "dataType": "int64",
            "sourceColumn": "IsRealBug",
            "sourceProviderType": "Integer"
          },
          {
            "name": "milestone",
            "dataType": "string",
            "sourceColumn": "milestone",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_response_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_response_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_resolution_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_resolution_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_response_date",
            "dataType": "dateTime",
            "sourceColumn": "sla_response_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "sla_resolution_date",
            "dataType": "dateTime",
            "sourceColumn": "sla_resolution_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "sla_response_met",
            "dataType": "string",
            "sourceColumn": "sla_response_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_resolution_met",
            "dataType": "string",
            "sourceColumn": "sla_resolution_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_by",
            "dataType": "string",
            "sourceColumn": "submitted_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "updated_by",
            "dataType": "string",
            "sourceColumn": "updated_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ingredient",
            "dataType": "string",
            "sourceColumn": "ingredient",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_future_date",
            "dataType": "string",
            "sourceColumn": "ww_future_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "predrop_ww",
            "dataType": "int64",
            "sourceColumn": "predrop_ww"
          },
          {
            "name": "ccb_meeting",
            "dataType": "string",
            "sourceColumn": "ccb_meeting"
          },
          {
            "name": "gate",
            "dataType": "string",
            "sourceColumn": "gate"
          },
          {
            "name": "reason",
            "dataType": "string",
            "sourceColumn": "reason"
          },
          {
            "name": "open_age",
            "dataType": "double",
            "sourceColumn": "open_age"
          },
          {
            "name": "unvalidated_age",
            "dataType": "double",
            "sourceColumn": "unvalidated_age"
          },
          {
            "name": "validator",
            "dataType": "string",
            "sourceColumn": "validator"
          },
          {
            "name": "repo_modified_date",
            "dataType": "dateTime",
            "sourceColumn": "repo_modified_date"
          },
          {
            "type": "calculated",
            "name": "max_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "MAXX(filter(QueryBugWave3HW, QueryBugWave3HW[id]=EARLIER(QueryBugWave3HW[id])),QueryBugWave3HW[ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwfamily",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugWave3HW[family],QueryBugWave3HW[id],QueryBugWave3HW[id],QueryBugWave3HW[ww], QueryBugWave3HW[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwrelease",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugWave3HW[release],QueryBugWave3HW[id],QueryBugWave3HW[id],QueryBugWave3HW[ww], QueryBugWave3HW[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwSocDie",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugWave3HW[SoC Die],QueryBugWave3HW[id],QueryBugWave3HW[id],QueryBugWave3HW[ww], QueryBugWave3HW[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwip_supplier",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugWave3HW[ip_supplier],QueryBugWave3HW[id],QueryBugWave3HW[id],QueryBugWave3HW[ww], QueryBugWave3HW[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwbug_category",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugWave3HW[bug_category],QueryBugWave3HW[id],QueryBugWave3HW[id],QueryBugWave3HW[ww], QueryBugWave3HW[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwsub_bugcategory",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugWave3HW[sub_bugcategory],QueryBugWave3HW[id],QueryBugWave3HW[id],QueryBugWave3HW[ww], QueryBugWave3HW[max_ww])"
          }
        ],
        "partitions": [
          {
            "name": "QueryBugWave3HW",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "[tenant]",
                ",ww",
                ",closed_date",
                ",[original_family]",
                ",[family]",
                ",priority",
                ",[ip_supplier] ",
                ",[release]",
                ",[release_affected] ",
                ", [tag]",
                ",[status]",
                ",[status_detail]",
                ",[project]",
                ",[SoC Die]",
                ",[id]",
                ",[lineage]",
                ",[original_lineage]",
                ",[title]",
                ", [ww_submitted_date]",
                ",[submitted_date]",
                ",[updated_date]",
                ",ww_updated_date",
                ",[bugeco.env_found] ",
                ",[bugeco.team_found]",
                ",[bug_category]",
                ",[bugeco.bug_class]",
                ",from_tenant",
                ", from_subject",
                ",[bugeco.type]",
                ",component",
                ",url",
                ",[ccb_change_scope]",
                ",[ccb_eta]",
                ",[ccb_order]",
                "--,[ccb_por]",
                ",[ccb_prq_gating]",
                "--,[ccb_questionnaire]",
                ",[ccb_status]",
                ",[ccb_wontfix_action]",
                ",[ccb_wontfix_reason]",
                ",[ccb_workaround]",
                ",[ccb_proposal]",
                ",[ccb_mode]",
                ",[ccb_disposition_type]",
                ",[ww_defined_date]",
                ",[ww_approved_date]",
                ",ww_predrop_closure_date_sdg",
                ",[currentww]",
                ",[currentmonth]",
                ",[currentyear]",
                ",[subip_family]",
                ",[subip_supplier]",
                ",[bugeco.release_found]",
                ", supplier_org",
                ",[is_PreSiPostSi]",
                ",[org_is_found_bySoc]",
                ", IsCount ",
                ",[lineage_final]",
                ",IsSubIP",
                ",[sub_bugcategory]",
                ",retro_status",
                ",retro_ip_escape",
                ",retro_global_learning",
                ",retro_global_action",
                ",retro_analysis",
                ",retro_learnings",
                ",[owner]",
                ",[ww_closed_date]",
                ",[ww_repo_modified_date]",
                ",[BugFixedDoneDate]",
                ",[generation]",
                ", IsRealBug",
                ",milestone",
                ",[ww_sla_response_date] ",
                ",[ww_sla_resolution_date]",
                ",[sla_response_date]",
                ",[sla_resolution_date]",
                ",[sla_response_met] ",
                " ,[sla_resolution_met]",
                ", submitted_by",
                ", updated_by",
                ",[ingredient]",
                ",[ww_future_date]",
                ",[predrop_ww]",
                ",[ccb_meeting]",
                ",[gate]",
                ",[reason]",
                ",open_age ",
                ",unvalidated_age",
                ",validator",
                ",[repo_modified_date]",
                "from v_ipg_wave3_server_bug_historical"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "[tenant]",
                  ",ww",
                  ",closed_date",
                  ",[original_family]",
                  ",[family]",
                  ",priority",
                  ",[ip_supplier] ",
                  ",[release]",
                  ",[release_affected] ",
                  ", [tag]",
                  ",[status]",
                  ",[status_detail]",
                  ",[project]",
                  ",[SoC Die]",
                  ",[id]",
                  ",[lineage]",
                  ",[original_lineage]",
                  ",[title]",
                  ", [ww_submitted_date]",
                  ",[submitted_date]",
                  ",[updated_date]",
                  ",ww_updated_date",
                  ",[bugeco.env_found] ",
                  ",[bugeco.team_found]",
                  ",[bug_category]",
                  ",[bugeco.bug_class]",
                  ",from_tenant",
                  ", from_subject",
                  ",[bugeco.type]",
                  ",component",
                  ",url",
                  ",[ccb_change_scope]",
                  ",[ccb_eta]",
                  ",[ccb_order]",
                  "--,[ccb_por]",
                  ",[ccb_prq_gating]",
                  "--,[ccb_questionnaire]",
                  ",[ccb_status]",
                  ",[ccb_wontfix_action]",
                  ",[ccb_wontfix_reason]",
                  ",[ccb_workaround]",
                  ",[ccb_proposal]",
                  ",[ccb_mode]",
                  ",[ccb_disposition_type]",
                  ",[ww_defined_date]",
                  ",[ww_approved_date]",
                  ",ww_predrop_closure_date_sdg",
                  ",[currentww]",
                  ",[currentmonth]",
                  ",[currentyear]",
                  ",[subip_family]",
                  ",[subip_supplier]",
                  ",[bugeco.release_found]",
                  ", supplier_org",
                  ",[is_PreSiPostSi]",
                  ",[org_is_found_bySoc]",
                  ", IsCount ",
                  ",[lineage_final]",
                  ",IsSubIP",
                  ",[sub_bugcategory]",
                  ",retro_status",
                  ",retro_ip_escape",
                  ",retro_global_learning",
                  ",retro_global_action",
                  ",retro_analysis",
                  ",retro_learnings",
                  ",[owner]",
                  ",[ww_closed_date]",
                  ",[ww_repo_modified_date]",
                  ",[BugFixedDoneDate]",
                  ",[generation]",
                  ", IsRealBug",
                  ",milestone",
                  ",[ww_sla_response_date] ",
                  ",[ww_sla_resolution_date]",
                  ",[sla_response_date]",
                  ",[sla_resolution_date]",
                  ",[sla_response_met] ",
                  " ,[sla_resolution_met]",
                  ", submitted_by",
                  ", updated_by",
                  ",[ingredient]",
                  ",[ww_future_date]",
                  ",[predrop_ww]",
                  ",[ccb_meeting]",
                  ",[gate]",
                  ",[reason]",
                  ",open_age ",
                  ",unvalidated_age",
                  ",validator",
                  ",[repo_modified_date]",
                  "from v_ipg_wave3_server_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_wave3_server_bug_historical"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryBugWave3HW"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_wave3_server_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryBugWave1and2",
        "columns": [
          {
            "name": "tenant",
            "dataType": "string",
            "sourceColumn": "tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "closed_date",
            "dataType": "dateTime",
            "sourceColumn": "closed_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "original_family",
            "dataType": "string",
            "sourceColumn": "original_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "family",
            "dataType": "string",
            "sourceColumn": "family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ip_supplier",
            "dataType": "string",
            "sourceColumn": "ip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release",
            "dataType": "string",
            "sourceColumn": "release",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release_affected",
            "dataType": "string",
            "sourceColumn": "release_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "tag",
            "dataType": "string",
            "sourceColumn": "tag",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status_detail",
            "dataType": "string",
            "sourceColumn": "status_detail",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "project",
            "dataType": "string",
            "sourceColumn": "project",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SoC Die",
            "dataType": "string",
            "sourceColumn": "SoC Die",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "lineage",
            "dataType": "int64",
            "sourceColumn": "lineage",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "original_lineage",
            "dataType": "string",
            "sourceColumn": "original_lineage",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "title",
            "dataType": "string",
            "sourceColumn": "title",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_submitted_date",
            "dataType": "string",
            "sourceColumn": "ww_submitted_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_date",
            "dataType": "dateTime",
            "sourceColumn": "submitted_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "updated_date",
            "dataType": "dateTime",
            "sourceColumn": "updated_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ww_updated_date",
            "dataType": "int64",
            "sourceColumn": "ww_updated_date",
            "sourceProviderType": "Integer"
          },
          {
            "name": "bugeco.env_found",
            "dataType": "string",
            "sourceColumn": "bugeco.env_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.team_found",
            "dataType": "string",
            "sourceColumn": "bugeco.team_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bug_category",
            "dataType": "string",
            "sourceColumn": "bug_category",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.bug_class",
            "dataType": "string",
            "sourceColumn": "bugeco.bug_class",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_tenant",
            "dataType": "string",
            "sourceColumn": "from_tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_subject",
            "dataType": "string",
            "sourceColumn": "from_subject",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.type",
            "dataType": "string",
            "sourceColumn": "bugeco.type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "component",
            "dataType": "string",
            "sourceColumn": "component",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "url",
            "dataType": "string",
            "sourceColumn": "url",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_change_scope",
            "dataType": "string",
            "sourceColumn": "ccb_change_scope",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_eta",
            "dataType": "string",
            "sourceColumn": "ccb_eta",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_order",
            "dataType": "string",
            "sourceColumn": "ccb_order",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_prq_gating",
            "dataType": "string",
            "sourceColumn": "ccb_prq_gating",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_status",
            "dataType": "string",
            "sourceColumn": "ccb_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_action",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_reason",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_reason",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_workaround",
            "dataType": "string",
            "sourceColumn": "ccb_workaround",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_proposal",
            "dataType": "string",
            "sourceColumn": "ccb_proposal",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_mode",
            "dataType": "string",
            "sourceColumn": "ccb_mode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_disposition_type",
            "dataType": "string",
            "sourceColumn": "ccb_disposition_type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_defined_date",
            "dataType": "string",
            "sourceColumn": "ww_defined_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_approved_date",
            "dataType": "string",
            "sourceColumn": "ww_approved_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_predrop_closure_date_sdg",
            "dataType": "string",
            "sourceColumn": "ww_predrop_closure_date_sdg",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "currentww",
            "dataType": "int64",
            "sourceColumn": "currentww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentmonth",
            "dataType": "int64",
            "sourceColumn": "currentmonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentyear",
            "dataType": "int64",
            "sourceColumn": "currentyear",
            "sourceProviderType": "Integer"
          },
          {
            "name": "subip_family",
            "dataType": "string",
            "sourceColumn": "subip_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "subip_supplier",
            "dataType": "string",
            "sourceColumn": "subip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.release_found",
            "dataType": "string",
            "sourceColumn": "bugeco.release_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "supplier_org",
            "dataType": "string",
            "sourceColumn": "supplier_org",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "sourceColumn": "is_PreSiPostSi",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "org_is_found_bySoc",
            "dataType": "string",
            "sourceColumn": "org_is_found_bySoc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsCount",
            "dataType": "int64",
            "sourceColumn": "IsCount",
            "sourceProviderType": "Integer"
          },
          {
            "name": "lineage_final",
            "dataType": "int64",
            "sourceColumn": "lineage_final",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "IsSubIP",
            "dataType": "string",
            "sourceColumn": "IsSubIP",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sub_bugcategory",
            "dataType": "string",
            "sourceColumn": "sub_bugcategory",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_status",
            "dataType": "string",
            "sourceColumn": "retro_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_ip_escape",
            "dataType": "string",
            "sourceColumn": "retro_ip_escape",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_learning",
            "dataType": "string",
            "sourceColumn": "retro_global_learning",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_action",
            "dataType": "string",
            "sourceColumn": "retro_global_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_analysis",
            "dataType": "string",
            "sourceColumn": "retro_analysis",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_learnings",
            "dataType": "string",
            "sourceColumn": "retro_learnings",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "owner",
            "dataType": "string",
            "sourceColumn": "owner",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_closed_date",
            "dataType": "string",
            "sourceColumn": "ww_closed_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_repo_modified_date",
            "dataType": "string",
            "sourceColumn": "ww_repo_modified_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BugFixedDoneDate",
            "dataType": "string",
            "sourceColumn": "BugFixedDoneDate",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "generation",
            "dataType": "string",
            "sourceColumn": "generation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsRealBug",
            "dataType": "int64",
            "sourceColumn": "IsRealBug",
            "sourceProviderType": "Integer"
          },
          {
            "name": "milestone",
            "dataType": "string",
            "sourceColumn": "milestone",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_response_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_response_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_resolution_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_resolution_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_response_date",
            "dataType": "dateTime",
            "sourceColumn": "sla_response_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "sla_resolution_date",
            "dataType": "dateTime",
            "sourceColumn": "sla_resolution_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "sla_response_met",
            "dataType": "string",
            "sourceColumn": "sla_response_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_resolution_met",
            "dataType": "string",
            "sourceColumn": "sla_resolution_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_by",
            "dataType": "string",
            "sourceColumn": "submitted_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "updated_by",
            "dataType": "string",
            "sourceColumn": "updated_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ingredient",
            "dataType": "string",
            "sourceColumn": "ingredient",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_future_date",
            "dataType": "string",
            "sourceColumn": "ww_future_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "predrop_ww",
            "dataType": "int64",
            "sourceColumn": "predrop_ww"
          },
          {
            "name": "ccb_meeting",
            "dataType": "string",
            "sourceColumn": "ccb_meeting"
          },
          {
            "name": "gate",
            "dataType": "string",
            "sourceColumn": "gate"
          },
          {
            "name": "reason",
            "dataType": "string",
            "sourceColumn": "reason"
          },
          {
            "name": "open_age",
            "dataType": "double",
            "sourceColumn": "open_age"
          },
          {
            "name": "unvalidated_age",
            "dataType": "double",
            "sourceColumn": "unvalidated_age"
          },
          {
            "name": "validator",
            "dataType": "string",
            "sourceColumn": "validator"
          },
          {
            "name": "repo_modified_date",
            "dataType": "dateTime",
            "sourceColumn": "repo_modified_date"
          },
          {
            "type": "calculated",
            "name": "max_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "MAXX(filter(QueryBugWave1and2, QueryBugWave1and2[id]=EARLIER(QueryBugWave1and2[id])),QueryBugWave1and2[ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwfamily",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugWave1and2[family],QueryBugWave1and2[id],QueryBugWave1and2[id],QueryBugWave1and2[ww], QueryBugWave1and2[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwrelease",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugWave1and2[release],QueryBugWave1and2[id],QueryBugWave1and2[id],QueryBugWave1and2[ww], QueryBugWave1and2[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwSocDie",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugWave1and2[SoC Die],QueryBugWave1and2[id],QueryBugWave1and2[id],QueryBugWave1and2[ww], QueryBugWave1and2[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwip_supplier",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugWave1and2[ip_supplier],QueryBugWave1and2[id],QueryBugWave1and2[id],QueryBugWave1and2[ww], QueryBugWave1and2[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwbug_category",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugWave1and2[bug_category],QueryBugWave1and2[id],QueryBugWave1and2[id],QueryBugWave1and2[ww], QueryBugWave1and2[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwsub_bugcategory",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugWave1and2[sub_bugcategory],QueryBugWave1and2[id],QueryBugWave1and2[id],QueryBugWave1and2[ww], QueryBugWave1and2[max_ww])"
          }
        ],
        "partitions": [
          {
            "name": "QueryBugWave1and2",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "[tenant]",
                ",ww",
                ",closed_date",
                ",[original_family]",
                ",[family]",
                ",priority",
                ",[ip_supplier] ",
                ",[release]",
                ",[release_affected] ",
                ", [tag]",
                ",[status]",
                ",[status_detail]",
                ",[project]",
                ",[SoC Die]",
                ",[id]",
                ",[lineage]",
                ",[original_lineage]",
                ",[title]",
                ", [ww_submitted_date]",
                ",[submitted_date]",
                ",[updated_date]",
                ",ww_updated_date",
                ",[bugeco.env_found] ",
                ",[bugeco.team_found]",
                ",[bug_category]",
                ",[bugeco.bug_class]",
                ",from_tenant",
                ", from_subject",
                ",[bugeco.type]",
                ",component",
                ",url",
                ",[ccb_change_scope]",
                ",[ccb_eta]",
                ",[ccb_order]",
                "--,[ccb_por]",
                ",[ccb_prq_gating]",
                "--,[ccb_questionnaire]",
                ",[ccb_status]",
                ",[ccb_wontfix_action]",
                ",[ccb_wontfix_reason]",
                ",[ccb_workaround]",
                ",[ccb_proposal]",
                ",[ccb_mode]",
                ",[ccb_disposition_type]",
                ",[ww_defined_date]",
                ",[ww_approved_date]",
                ",ww_predrop_closure_date_sdg",
                ",[currentww]",
                ",[currentmonth]",
                ",[currentyear]",
                ",[subip_family]",
                ",[subip_supplier]",
                ",[bugeco.release_found]",
                ", supplier_org",
                ",[is_PreSiPostSi]",
                ",[org_is_found_bySoc]",
                ", IsCount ",
                ",[lineage_final]",
                ",IsSubIP",
                ",[sub_bugcategory]",
                ",retro_status",
                ",retro_ip_escape",
                ",retro_global_learning",
                ",retro_global_action",
                ",retro_analysis",
                ",retro_learnings",
                ",[owner]",
                ",[ww_closed_date]",
                ",[ww_repo_modified_date]",
                ",[BugFixedDoneDate]",
                ",[generation]",
                ", IsRealBug",
                ",milestone",
                ",[ww_sla_response_date] ",
                ",[ww_sla_resolution_date]",
                ",[sla_response_date]",
                ",[sla_resolution_date]",
                ",[sla_response_met] ",
                " ,[sla_resolution_met]",
                ", submitted_by",
                ", updated_by",
                ",[ingredient]",
                ",[ww_future_date]",
                ",[predrop_ww]",
                ",[ccb_meeting]",
                ",[gate]",
                ",[reason]",
                ",open_age ",
                ",unvalidated_age",
                ",validator",
                ",[repo_modified_date]",
                "from v_ipg_wave1_2_server_bug_historical"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "[tenant]",
                  ",ww",
                  ",closed_date",
                  ",[original_family]",
                  ",[family]",
                  ",priority",
                  ",[ip_supplier] ",
                  ",[release]",
                  ",[release_affected] ",
                  ", [tag]",
                  ",[status]",
                  ",[status_detail]",
                  ",[project]",
                  ",[SoC Die]",
                  ",[id]",
                  ",[lineage]",
                  ",[original_lineage]",
                  ",[title]",
                  ", [ww_submitted_date]",
                  ",[submitted_date]",
                  ",[updated_date]",
                  ",ww_updated_date",
                  ",[bugeco.env_found] ",
                  ",[bugeco.team_found]",
                  ",[bug_category]",
                  ",[bugeco.bug_class]",
                  ",from_tenant",
                  ", from_subject",
                  ",[bugeco.type]",
                  ",component",
                  ",url",
                  ",[ccb_change_scope]",
                  ",[ccb_eta]",
                  ",[ccb_order]",
                  "--,[ccb_por]",
                  ",[ccb_prq_gating]",
                  "--,[ccb_questionnaire]",
                  ",[ccb_status]",
                  ",[ccb_wontfix_action]",
                  ",[ccb_wontfix_reason]",
                  ",[ccb_workaround]",
                  ",[ccb_proposal]",
                  ",[ccb_mode]",
                  ",[ccb_disposition_type]",
                  ",[ww_defined_date]",
                  ",[ww_approved_date]",
                  ",ww_predrop_closure_date_sdg",
                  ",[currentww]",
                  ",[currentmonth]",
                  ",[currentyear]",
                  ",[subip_family]",
                  ",[subip_supplier]",
                  ",[bugeco.release_found]",
                  ", supplier_org",
                  ",[is_PreSiPostSi]",
                  ",[org_is_found_bySoc]",
                  ", IsCount ",
                  ",[lineage_final]",
                  ",IsSubIP",
                  ",[sub_bugcategory]",
                  ",retro_status",
                  ",retro_ip_escape",
                  ",retro_global_learning",
                  ",retro_global_action",
                  ",retro_analysis",
                  ",retro_learnings",
                  ",[owner]",
                  ",[ww_closed_date]",
                  ",[ww_repo_modified_date]",
                  ",[BugFixedDoneDate]",
                  ",[generation]",
                  ", IsRealBug",
                  ",milestone",
                  ",[ww_sla_response_date] ",
                  ",[ww_sla_resolution_date]",
                  ",[sla_response_date]",
                  ",[sla_resolution_date]",
                  ",[sla_response_met] ",
                  " ,[sla_resolution_met]",
                  ", submitted_by",
                  ", updated_by",
                  ",[ingredient]",
                  ",[ww_future_date]",
                  ",[predrop_ww]",
                  ",[ccb_meeting]",
                  ",[gate]",
                  ",[reason]",
                  ",open_age ",
                  ",unvalidated_age",
                  ",validator",
                  ",[repo_modified_date]",
                  "from v_ipg_wave1_2_server_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_wave1_2_server_bug_historical"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryBugWave1and2"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_wave1_2_server_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryBugGen3",
        "columns": [
          {
            "name": "tenant",
            "dataType": "string",
            "sourceColumn": "tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "closed_date",
            "dataType": "dateTime",
            "sourceColumn": "closed_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "original_family",
            "dataType": "string",
            "sourceColumn": "original_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "family",
            "dataType": "string",
            "sourceColumn": "family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ip_supplier",
            "dataType": "string",
            "sourceColumn": "ip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release",
            "dataType": "string",
            "sourceColumn": "release",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release_affected",
            "dataType": "string",
            "sourceColumn": "release_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "tag",
            "dataType": "string",
            "sourceColumn": "tag",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status_detail",
            "dataType": "string",
            "sourceColumn": "status_detail",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "project",
            "dataType": "string",
            "sourceColumn": "project",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SoC Die",
            "dataType": "string",
            "sourceColumn": "SoC Die",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "lineage",
            "dataType": "int64",
            "sourceColumn": "lineage",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "original_lineage",
            "dataType": "string",
            "sourceColumn": "original_lineage",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "title",
            "dataType": "string",
            "sourceColumn": "title",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_submitted_date",
            "dataType": "string",
            "sourceColumn": "ww_submitted_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_date",
            "dataType": "dateTime",
            "sourceColumn": "submitted_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "updated_date",
            "dataType": "dateTime",
            "sourceColumn": "updated_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ww_updated_date",
            "dataType": "int64",
            "sourceColumn": "ww_updated_date",
            "sourceProviderType": "Integer"
          },
          {
            "name": "bugeco.env_found",
            "dataType": "string",
            "sourceColumn": "bugeco.env_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.team_found",
            "dataType": "string",
            "sourceColumn": "bugeco.team_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bug_category",
            "dataType": "string",
            "sourceColumn": "bug_category",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.bug_class",
            "dataType": "string",
            "sourceColumn": "bugeco.bug_class",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_tenant",
            "dataType": "string",
            "sourceColumn": "from_tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_subject",
            "dataType": "string",
            "sourceColumn": "from_subject",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.type",
            "dataType": "string",
            "sourceColumn": "bugeco.type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "component",
            "dataType": "string",
            "sourceColumn": "component",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "url",
            "dataType": "string",
            "sourceColumn": "url",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_change_scope",
            "dataType": "string",
            "sourceColumn": "ccb_change_scope",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_eta",
            "dataType": "dateTime",
            "sourceColumn": "ccb_eta",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ccb_order",
            "dataType": "int64",
            "sourceColumn": "ccb_order",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ccb_prq_gating",
            "dataType": "string",
            "sourceColumn": "ccb_prq_gating",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_status",
            "dataType": "string",
            "sourceColumn": "ccb_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_action",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_reason",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_reason",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_workaround",
            "dataType": "string",
            "sourceColumn": "ccb_workaround",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_proposal",
            "dataType": "string",
            "sourceColumn": "ccb_proposal",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_mode",
            "dataType": "string",
            "sourceColumn": "ccb_mode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_disposition_type",
            "dataType": "string",
            "sourceColumn": "ccb_disposition_type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_defined_date",
            "dataType": "string",
            "sourceColumn": "ww_defined_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_approved_date",
            "dataType": "string",
            "sourceColumn": "ww_approved_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_predrop_closure_date_sdg",
            "dataType": "string",
            "sourceColumn": "ww_predrop_closure_date_sdg",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "currentww",
            "dataType": "int64",
            "sourceColumn": "currentww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentmonth",
            "dataType": "int64",
            "sourceColumn": "currentmonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentyear",
            "dataType": "int64",
            "sourceColumn": "currentyear",
            "sourceProviderType": "Integer"
          },
          {
            "name": "subip_family",
            "dataType": "string",
            "sourceColumn": "subip_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "subip_supplier",
            "dataType": "string",
            "sourceColumn": "subip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.release_found",
            "dataType": "string",
            "sourceColumn": "bugeco.release_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "supplier_org",
            "dataType": "string",
            "sourceColumn": "supplier_org",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "sourceColumn": "is_PreSiPostSi",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "org_is_found_bySoc",
            "dataType": "string",
            "sourceColumn": "org_is_found_bySoc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsCount",
            "dataType": "int64",
            "sourceColumn": "IsCount",
            "sourceProviderType": "Integer"
          },
          {
            "name": "lineage_final",
            "dataType": "int64",
            "sourceColumn": "lineage_final",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "IsSubIP",
            "dataType": "string",
            "sourceColumn": "IsSubIP",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sub_bugcategory",
            "dataType": "string",
            "sourceColumn": "sub_bugcategory",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_status",
            "dataType": "string",
            "sourceColumn": "retro_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_ip_escape",
            "dataType": "string",
            "sourceColumn": "retro_ip_escape",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_learning",
            "dataType": "string",
            "sourceColumn": "retro_global_learning",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_action",
            "dataType": "string",
            "sourceColumn": "retro_global_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_analysis",
            "dataType": "string",
            "sourceColumn": "retro_analysis",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_learnings",
            "dataType": "string",
            "sourceColumn": "retro_learnings",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "owner",
            "dataType": "string",
            "sourceColumn": "owner",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_closed_date",
            "dataType": "string",
            "sourceColumn": "ww_closed_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_repo_modified_date",
            "dataType": "string",
            "sourceColumn": "ww_repo_modified_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BugFixedDoneDate",
            "dataType": "string",
            "sourceColumn": "BugFixedDoneDate",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "generation",
            "dataType": "string",
            "sourceColumn": "generation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsRealBug",
            "dataType": "int64",
            "sourceColumn": "IsRealBug",
            "sourceProviderType": "Integer"
          },
          {
            "name": "milestone",
            "dataType": "string",
            "sourceColumn": "milestone",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_response_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_response_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_resolution_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_resolution_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_response_date",
            "dataType": "dateTime",
            "sourceColumn": "sla_response_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "sla_resolution_date",
            "dataType": "dateTime",
            "sourceColumn": "sla_resolution_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "sla_response_met",
            "dataType": "string",
            "sourceColumn": "sla_response_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_resolution_met",
            "dataType": "string",
            "sourceColumn": "sla_resolution_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_by",
            "dataType": "string",
            "sourceColumn": "submitted_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "updated_by",
            "dataType": "string",
            "sourceColumn": "updated_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ingredient",
            "dataType": "string",
            "sourceColumn": "ingredient",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_future_date",
            "dataType": "string",
            "sourceColumn": "ww_future_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "predrop_ww",
            "dataType": "int64",
            "sourceColumn": "predrop_ww"
          },
          {
            "name": "ccb_meeting",
            "dataType": "string",
            "sourceColumn": "ccb_meeting"
          },
          {
            "name": "gate",
            "dataType": "string",
            "sourceColumn": "gate"
          },
          {
            "name": "reason",
            "dataType": "string",
            "sourceColumn": "reason"
          },
          {
            "name": "open_age",
            "dataType": "double",
            "sourceColumn": "open_age"
          },
          {
            "name": "unvalidated_age",
            "dataType": "double",
            "sourceColumn": "unvalidated_age"
          },
          {
            "name": "validator",
            "dataType": "string",
            "sourceColumn": "validator"
          },
          {
            "name": "repo_modified_date",
            "dataType": "dateTime",
            "sourceColumn": "repo_modified_date"
          },
          {
            "type": "calculated",
            "name": "max_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "MAXX(filter(QueryBugGen3, QueryBugGen3[id]=EARLIER(QueryBugGen3[id])),QueryBugGen3[ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwfamily",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugGen3[family],QueryBugGen3[id],QueryBugGen3[id],QueryBugGen3[ww], QueryBugGen3[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwrelease",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugGen3[release],QueryBugGen3[id],QueryBugGen3[id],QueryBugGen3[ww], QueryBugGen3[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwSoCDie",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugGen3[SoC Die],QueryBugGen3[id],QueryBugGen3[id],QueryBugGen3[ww], QueryBugGen3[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwip_supplier",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugGen3[ip_supplier],QueryBugGen3[id],QueryBugGen3[id],QueryBugGen3[ww], QueryBugGen3[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwbug_category",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugGen3[bug_category],QueryBugGen3[id],QueryBugGen3[id],QueryBugGen3[ww], QueryBugGen3[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwsub_bugcategory",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugGen3[sub_bugcategory],QueryBugGen3[id],QueryBugGen3[id],QueryBugGen3[ww], QueryBugGen3[max_ww])"
          }
        ],
        "partitions": [
          {
            "name": "QueryBugGen3",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "[tenant]",
                ",ww",
                ",closed_date",
                ",[original_family]",
                ",[family]",
                ",priority",
                ",[ip_supplier] ",
                ",[release]",
                ",[release_affected] ",
                ", [tag]",
                ",[status]",
                ",[status_detail]",
                ",[project]",
                ",[SoC Die]",
                ",[id]",
                ",[lineage]",
                ",[original_lineage]",
                ",[title]",
                ", [ww_submitted_date]",
                ",[submitted_date]",
                ",[updated_date]",
                ",ww_updated_date",
                ",[bugeco.env_found] ",
                ",[bugeco.team_found]",
                ",[bug_category]",
                ",[bugeco.bug_class]",
                ",from_tenant",
                ", from_subject",
                ",[bugeco.type]",
                ",component",
                ",url",
                ",[ccb_change_scope]",
                ",[ccb_eta]",
                ",[ccb_order]",
                "--,[ccb_por]",
                ",[ccb_prq_gating]",
                "--,[ccb_questionnaire]",
                ",[ccb_status]",
                ",[ccb_wontfix_action]",
                ",[ccb_wontfix_reason]",
                ",[ccb_workaround]",
                ",[ccb_proposal]",
                ",[ccb_mode]",
                ",[ccb_disposition_type]",
                ",[ww_defined_date]",
                ",[ww_approved_date]",
                ",ww_predrop_closure_date_sdg",
                ",[currentww]",
                ",[currentmonth]",
                ",[currentyear]",
                ",[subip_family]",
                ",[subip_supplier]",
                ",[bugeco.release_found]",
                ", supplier_org",
                ",[is_PreSiPostSi]",
                ",[org_is_found_bySoc]",
                ", IsCount ",
                ",[lineage_final]",
                ",IsSubIP",
                ",[sub_bugcategory]",
                ",retro_status",
                ",retro_ip_escape",
                ",retro_global_learning",
                ",retro_global_action",
                ",retro_analysis",
                ",retro_learnings",
                ",[owner]",
                ",[ww_closed_date]",
                ",[ww_repo_modified_date]",
                ",[BugFixedDoneDate]",
                ",[generation]",
                ", IsRealBug",
                ",milestone",
                ",[ww_sla_response_date] ",
                ",[ww_sla_resolution_date]",
                ",[sla_response_date]",
                ",[sla_resolution_date]",
                ",[sla_response_met] ",
                " ,[sla_resolution_met]",
                ", submitted_by",
                ", updated_by",
                ",[ingredient]",
                ",[ww_future_date]",
                ",[predrop_ww]",
                ",[ccb_meeting]",
                ",[gate]",
                ",[reason]",
                ",open_age ",
                ",unvalidated_age",
                ",validator",
                ",[repo_modified_date]",
                "from v_ipg_gen3_server_bug_historical"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "[tenant]",
                  ",ww",
                  ",closed_date",
                  ",[original_family]",
                  ",[family]",
                  ",priority",
                  ",[ip_supplier] ",
                  ",[release]",
                  ",[release_affected] ",
                  ", [tag]",
                  ",[status]",
                  ",[status_detail]",
                  ",[project]",
                  ",[SoC Die]",
                  ",[id]",
                  ",[lineage]",
                  ",[original_lineage]",
                  ",[title]",
                  ", [ww_submitted_date]",
                  ",[submitted_date]",
                  ",[updated_date]",
                  ",ww_updated_date",
                  ",[bugeco.env_found] ",
                  ",[bugeco.team_found]",
                  ",[bug_category]",
                  ",[bugeco.bug_class]",
                  ",from_tenant",
                  ", from_subject",
                  ",[bugeco.type]",
                  ",component",
                  ",url",
                  ",[ccb_change_scope]",
                  ",[ccb_eta]",
                  ",[ccb_order]",
                  "--,[ccb_por]",
                  ",[ccb_prq_gating]",
                  "--,[ccb_questionnaire]",
                  ",[ccb_status]",
                  ",[ccb_wontfix_action]",
                  ",[ccb_wontfix_reason]",
                  ",[ccb_workaround]",
                  ",[ccb_proposal]",
                  ",[ccb_mode]",
                  ",[ccb_disposition_type]",
                  ",[ww_defined_date]",
                  ",[ww_approved_date]",
                  ",ww_predrop_closure_date_sdg",
                  ",[currentww]",
                  ",[currentmonth]",
                  ",[currentyear]",
                  ",[subip_family]",
                  ",[subip_supplier]",
                  ",[bugeco.release_found]",
                  ", supplier_org",
                  ",[is_PreSiPostSi]",
                  ",[org_is_found_bySoc]",
                  ", IsCount ",
                  ",[lineage_final]",
                  ",IsSubIP",
                  ",[sub_bugcategory]",
                  ",retro_status",
                  ",retro_ip_escape",
                  ",retro_global_learning",
                  ",retro_global_action",
                  ",retro_analysis",
                  ",retro_learnings",
                  ",[owner]",
                  ",[ww_closed_date]",
                  ",[ww_repo_modified_date]",
                  ",[BugFixedDoneDate]",
                  ",[generation]",
                  ", IsRealBug",
                  ",milestone",
                  ",[ww_sla_response_date] ",
                  ",[ww_sla_resolution_date]",
                  ",[sla_response_date]",
                  ",[sla_resolution_date]",
                  ",[sla_response_met] ",
                  " ,[sla_resolution_met]",
                  ", submitted_by",
                  ", updated_by",
                  ",[ingredient]",
                  ",[ww_future_date]",
                  ",[predrop_ww]",
                  ",[ccb_meeting]",
                  ",[gate]",
                  ",[reason]",
                  ",open_age ",
                  ",unvalidated_age",
                  ",validator",
                  ",[repo_modified_date]",
                  "from v_ipg_gen3_server_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_gen3_server_bug_historical"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryBugGen3"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_gen3_server_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryBugsfip",
        "columns": [
          {
            "name": "tenant",
            "dataType": "string",
            "sourceColumn": "tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "closed_date",
            "dataType": "dateTime",
            "sourceColumn": "closed_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "original_family",
            "dataType": "string",
            "sourceColumn": "original_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "family",
            "dataType": "string",
            "sourceColumn": "family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ip_supplier",
            "dataType": "string",
            "sourceColumn": "ip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release",
            "dataType": "string",
            "sourceColumn": "release",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release_affected",
            "dataType": "string",
            "sourceColumn": "release_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "tag",
            "dataType": "string",
            "sourceColumn": "tag",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status_detail",
            "dataType": "string",
            "sourceColumn": "status_detail",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "project",
            "dataType": "string",
            "sourceColumn": "project",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SoC Die",
            "dataType": "string",
            "sourceColumn": "SoC Die",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "lineage",
            "dataType": "int64",
            "sourceColumn": "lineage",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "original_lineage",
            "dataType": "string",
            "sourceColumn": "original_lineage",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "title",
            "dataType": "string",
            "sourceColumn": "title",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_submitted_date",
            "dataType": "string",
            "sourceColumn": "ww_submitted_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_date",
            "dataType": "dateTime",
            "sourceColumn": "submitted_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "updated_date",
            "dataType": "dateTime",
            "sourceColumn": "updated_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ww_updated_date",
            "dataType": "int64",
            "sourceColumn": "ww_updated_date",
            "sourceProviderType": "Integer"
          },
          {
            "name": "bugeco.env_found",
            "dataType": "string",
            "sourceColumn": "bugeco.env_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.team_found",
            "dataType": "string",
            "sourceColumn": "bugeco.team_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bug_category",
            "dataType": "string",
            "sourceColumn": "bug_category",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.bug_class",
            "dataType": "string",
            "sourceColumn": "bugeco.bug_class",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_tenant",
            "dataType": "string",
            "sourceColumn": "from_tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_subject",
            "dataType": "string",
            "sourceColumn": "from_subject",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.type",
            "dataType": "string",
            "sourceColumn": "bugeco.type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "component",
            "dataType": "string",
            "sourceColumn": "component",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "url",
            "dataType": "string",
            "sourceColumn": "url",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_change_scope",
            "dataType": "string",
            "sourceColumn": "ccb_change_scope",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_eta",
            "dataType": "string",
            "sourceColumn": "ccb_eta",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_order",
            "dataType": "string",
            "sourceColumn": "ccb_order",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_prq_gating",
            "dataType": "string",
            "sourceColumn": "ccb_prq_gating",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_status",
            "dataType": "string",
            "sourceColumn": "ccb_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_action",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_reason",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_reason",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_workaround",
            "dataType": "string",
            "sourceColumn": "ccb_workaround",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_proposal",
            "dataType": "string",
            "sourceColumn": "ccb_proposal",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_mode",
            "dataType": "string",
            "sourceColumn": "ccb_mode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_disposition_type",
            "dataType": "string",
            "sourceColumn": "ccb_disposition_type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_defined_date",
            "dataType": "string",
            "sourceColumn": "ww_defined_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_approved_date",
            "dataType": "string",
            "sourceColumn": "ww_approved_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_predrop_closure_date_sdg",
            "dataType": "string",
            "sourceColumn": "ww_predrop_closure_date_sdg",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "currentww",
            "dataType": "int64",
            "sourceColumn": "currentww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentmonth",
            "dataType": "int64",
            "sourceColumn": "currentmonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentyear",
            "dataType": "int64",
            "sourceColumn": "currentyear",
            "sourceProviderType": "Integer"
          },
          {
            "name": "subip_family",
            "dataType": "string",
            "sourceColumn": "subip_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "subip_supplier",
            "dataType": "string",
            "sourceColumn": "subip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.release_found",
            "dataType": "string",
            "sourceColumn": "bugeco.release_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "supplier_org",
            "dataType": "string",
            "sourceColumn": "supplier_org",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "sourceColumn": "is_PreSiPostSi",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "org_is_found_bySoc",
            "dataType": "string",
            "sourceColumn": "org_is_found_bySoc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsCount",
            "dataType": "int64",
            "sourceColumn": "IsCount",
            "sourceProviderType": "Integer"
          },
          {
            "name": "lineage_final",
            "dataType": "int64",
            "sourceColumn": "lineage_final",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "IsSubIP",
            "dataType": "string",
            "sourceColumn": "IsSubIP",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sub_bugcategory",
            "dataType": "string",
            "sourceColumn": "sub_bugcategory",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_status",
            "dataType": "string",
            "sourceColumn": "retro_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_ip_escape",
            "dataType": "string",
            "sourceColumn": "retro_ip_escape",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_learning",
            "dataType": "string",
            "sourceColumn": "retro_global_learning",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_action",
            "dataType": "string",
            "sourceColumn": "retro_global_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_analysis",
            "dataType": "string",
            "sourceColumn": "retro_analysis",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_learnings",
            "dataType": "string",
            "sourceColumn": "retro_learnings",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "owner",
            "dataType": "string",
            "sourceColumn": "owner",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_closed_date",
            "dataType": "int64",
            "sourceColumn": "ww_closed_date",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ww_repo_modified_date",
            "dataType": "string",
            "sourceColumn": "ww_repo_modified_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BugFixedDoneDate",
            "dataType": "string",
            "sourceColumn": "BugFixedDoneDate",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "generation",
            "dataType": "string",
            "sourceColumn": "generation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsRealBug",
            "dataType": "int64",
            "sourceColumn": "IsRealBug",
            "sourceProviderType": "Integer"
          },
          {
            "name": "milestone",
            "dataType": "string",
            "sourceColumn": "milestone",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_response_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_response_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_resolution_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_resolution_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_response_date",
            "dataType": "string",
            "sourceColumn": "sla_response_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_resolution_date",
            "dataType": "string",
            "sourceColumn": "sla_resolution_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_response_met",
            "dataType": "string",
            "sourceColumn": "sla_response_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_resolution_met",
            "dataType": "string",
            "sourceColumn": "sla_resolution_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_by",
            "dataType": "string",
            "sourceColumn": "submitted_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "updated_by",
            "dataType": "string",
            "sourceColumn": "updated_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ingredient",
            "dataType": "string",
            "sourceColumn": "ingredient",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_future_date",
            "dataType": "string",
            "sourceColumn": "ww_future_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "predrop_ww",
            "dataType": "string",
            "sourceColumn": "predrop_ww"
          },
          {
            "name": "ccb_meeting",
            "dataType": "string",
            "sourceColumn": "ccb_meeting"
          },
          {
            "name": "gate",
            "dataType": "string",
            "sourceColumn": "gate"
          },
          {
            "name": "reason",
            "dataType": "string",
            "sourceColumn": "reason"
          },
          {
            "name": "open_age",
            "dataType": "int64",
            "sourceColumn": "open_age"
          },
          {
            "name": "unvalidated_age",
            "dataType": "int64",
            "sourceColumn": "unvalidated_age"
          },
          {
            "name": "validator",
            "dataType": "string",
            "sourceColumn": "validator"
          },
          {
            "name": "repo_modified_date",
            "dataType": "string",
            "sourceColumn": "repo_modified_date"
          },
          {
            "type": "calculated",
            "name": "max_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "MAXX(filter(QueryBugsfip, QueryBugsfip[id]=EARLIER(QueryBugsfip[id])),QueryBugsfip[ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwfamily",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugsfip[family],QueryBugsfip[id],QueryBugsfip[id],QueryBugsfip[ww], QueryBugsfip[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwrelease",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugsfip[release],QueryBugsfip[id],QueryBugsfip[id],QueryBugsfip[ww], QueryBugsfip[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwSocDie",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugsfip[SoC Die],QueryBugsfip[id],QueryBugsfip[id],QueryBugsfip[ww], QueryBugsfip[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwip_supplier",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugsfip[ip_supplier],QueryBugsfip[id],QueryBugsfip[id],QueryBugsfip[ww], QueryBugsfip[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwbug_category",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugsfip[bug_category],QueryBugsfip[id],QueryBugsfip[id],QueryBugsfip[ww], QueryBugsfip[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwsub_bugcategory",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugsfip[sub_bugcategory],QueryBugsfip[id],QueryBugsfip[id],QueryBugsfip[ww], QueryBugsfip[max_ww])"
          }
        ],
        "partitions": [
          {
            "name": "QueryBugsfip",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "[tenant]",
                ",ww",
                ",closed_date",
                ",[original_family]",
                ",[family]",
                ",priority",
                ",[ip_supplier] ",
                ",[release]",
                ",[release_affected] ",
                ", [tag]",
                ",[status]",
                ",[status_detail]",
                ",[project]",
                ",[SoC Die]",
                ",[id]",
                ",[lineage]",
                ",[original_lineage]",
                ",[title]",
                ", [ww_submitted_date]",
                ",[submitted_date]",
                ",[updated_date]",
                ",ww_updated_date",
                ",[bugeco.env_found] ",
                ",[bugeco.team_found]",
                ",[bug_category]",
                ",[bugeco.bug_class]",
                ",from_tenant",
                ", from_subject",
                ",[bugeco.type]",
                ",component",
                ",url",
                ",[ccb_change_scope]",
                ",[ccb_eta]",
                ",[ccb_order]",
                "--,[ccb_por]",
                ",[ccb_prq_gating]",
                "--,[ccb_questionnaire]",
                ",[ccb_status]",
                ",[ccb_wontfix_action]",
                ",[ccb_wontfix_reason]",
                ",[ccb_workaround]",
                ",[ccb_proposal]",
                ",[ccb_mode]",
                ",[ccb_disposition_type]",
                ",[ww_defined_date]",
                ",[ww_approved_date]",
                ",ww_predrop_closure_date_sdg",
                ",[currentww]",
                ",[currentmonth]",
                ",[currentyear]",
                ",[subip_family]",
                ",[subip_supplier]",
                ",[bugeco.release_found]",
                ", supplier_org",
                ",[is_PreSiPostSi]",
                ",[org_is_found_bySoc]",
                ", IsCount ",
                ",[lineage_final]",
                ",IsSubIP",
                ",[sub_bugcategory]",
                ",retro_status",
                ",retro_ip_escape",
                ",retro_global_learning",
                ",retro_global_action",
                ",retro_analysis",
                ",retro_learnings",
                ",[owner]",
                ",[ww_closed_date]",
                ",[ww_repo_modified_date]",
                ",[BugFixedDoneDate]",
                ",[generation]",
                ", IsRealBug",
                ",milestone",
                ",[ww_sla_response_date] ",
                ",[ww_sla_resolution_date]",
                ",[sla_response_date]",
                ",[sla_resolution_date]",
                ",[sla_response_met] ",
                " ,[sla_resolution_met]",
                ", submitted_by",
                ", updated_by",
                ",[ingredient]",
                ",[ww_future_date]",
                ",[predrop_ww]",
                ",[ccb_meeting]",
                ",[gate]",
                ",[reason]",
                ",open_age ",
                ",unvalidated_age",
                ",validator",
                ",[repo_modified_date]",
                "from v_ipg_sfip_bug_historical"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "[tenant]",
                  ",ww",
                  ",closed_date",
                  ",[original_family]",
                  ",[family]",
                  ",priority",
                  ",[ip_supplier] ",
                  ",[release]",
                  ",[release_affected] ",
                  ", [tag]",
                  ",[status]",
                  ",[status_detail]",
                  ",[project]",
                  ",[SoC Die]",
                  ",[id]",
                  ",[lineage]",
                  ",[original_lineage]",
                  ",[title]",
                  ", [ww_submitted_date]",
                  ",[submitted_date]",
                  ",[updated_date]",
                  ",ww_updated_date",
                  ",[bugeco.env_found] ",
                  ",[bugeco.team_found]",
                  ",[bug_category]",
                  ",[bugeco.bug_class]",
                  ",from_tenant",
                  ", from_subject",
                  ",[bugeco.type]",
                  ",component",
                  ",url",
                  ",[ccb_change_scope]",
                  ",[ccb_eta]",
                  ",[ccb_order]",
                  "--,[ccb_por]",
                  ",[ccb_prq_gating]",
                  "--,[ccb_questionnaire]",
                  ",[ccb_status]",
                  ",[ccb_wontfix_action]",
                  ",[ccb_wontfix_reason]",
                  ",[ccb_workaround]",
                  ",[ccb_proposal]",
                  ",[ccb_mode]",
                  ",[ccb_disposition_type]",
                  ",[ww_defined_date]",
                  ",[ww_approved_date]",
                  ",ww_predrop_closure_date_sdg",
                  ",[currentww]",
                  ",[currentmonth]",
                  ",[currentyear]",
                  ",[subip_family]",
                  ",[subip_supplier]",
                  ",[bugeco.release_found]",
                  ", supplier_org",
                  ",[is_PreSiPostSi]",
                  ",[org_is_found_bySoc]",
                  ", IsCount ",
                  ",[lineage_final]",
                  ",IsSubIP",
                  ",[sub_bugcategory]",
                  ",retro_status",
                  ",retro_ip_escape",
                  ",retro_global_learning",
                  ",retro_global_action",
                  ",retro_analysis",
                  ",retro_learnings",
                  ",[owner]",
                  ",[ww_closed_date]",
                  ",[ww_repo_modified_date]",
                  ",[BugFixedDoneDate]",
                  ",[generation]",
                  ", IsRealBug",
                  ",milestone",
                  ",[ww_sla_response_date] ",
                  ",[ww_sla_resolution_date]",
                  ",[sla_response_date]",
                  ",[sla_resolution_date]",
                  ",[sla_response_met] ",
                  " ,[sla_resolution_met]",
                  ", submitted_by",
                  ", updated_by",
                  ",[ingredient]",
                  ",[ww_future_date]",
                  ",[predrop_ww]",
                  ",[ccb_meeting]",
                  ",[gate]",
                  ",[reason]",
                  ",open_age ",
                  ",unvalidated_age",
                  ",validator",
                  ",[repo_modified_date]",
                  "from v_ipg_sfip_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_sfip_bug_historical"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryBugsfip"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_sfip_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryBugip_fw_sw",
        "columns": [
          {
            "name": "tenant",
            "dataType": "string",
            "sourceColumn": "tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "closed_date",
            "dataType": "dateTime",
            "sourceColumn": "closed_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "original_family",
            "dataType": "string",
            "sourceColumn": "original_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "family",
            "dataType": "string",
            "sourceColumn": "family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ip_supplier",
            "dataType": "string",
            "sourceColumn": "ip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release",
            "dataType": "string",
            "sourceColumn": "release",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release_affected",
            "dataType": "string",
            "sourceColumn": "release_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "tag",
            "dataType": "string",
            "sourceColumn": "tag",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status_detail",
            "dataType": "string",
            "sourceColumn": "status_detail",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "project",
            "dataType": "string",
            "sourceColumn": "project",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SoC Die",
            "dataType": "string",
            "sourceColumn": "SoC Die",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "lineage",
            "dataType": "int64",
            "sourceColumn": "lineage",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "original_lineage",
            "dataType": "string",
            "sourceColumn": "original_lineage",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "title",
            "dataType": "string",
            "sourceColumn": "title",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_submitted_date",
            "dataType": "string",
            "sourceColumn": "ww_submitted_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_date",
            "dataType": "dateTime",
            "sourceColumn": "submitted_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "updated_date",
            "dataType": "dateTime",
            "sourceColumn": "updated_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ww_updated_date",
            "dataType": "int64",
            "sourceColumn": "ww_updated_date",
            "sourceProviderType": "Integer"
          },
          {
            "name": "bugeco.env_found",
            "dataType": "string",
            "sourceColumn": "bugeco.env_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.team_found",
            "dataType": "string",
            "sourceColumn": "bugeco.team_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bug_category",
            "dataType": "string",
            "sourceColumn": "bug_category",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.bug_class",
            "dataType": "string",
            "sourceColumn": "bugeco.bug_class",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_tenant",
            "dataType": "string",
            "sourceColumn": "from_tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_subject",
            "dataType": "string",
            "sourceColumn": "from_subject",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.type",
            "dataType": "string",
            "sourceColumn": "bugeco.type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "component",
            "dataType": "string",
            "sourceColumn": "component",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "url",
            "dataType": "string",
            "sourceColumn": "url",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_change_scope",
            "dataType": "string",
            "sourceColumn": "ccb_change_scope",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_eta",
            "dataType": "string",
            "sourceColumn": "ccb_eta",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_order",
            "dataType": "string",
            "sourceColumn": "ccb_order",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_prq_gating",
            "dataType": "string",
            "sourceColumn": "ccb_prq_gating",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_status",
            "dataType": "string",
            "sourceColumn": "ccb_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_action",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_reason",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_reason",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_workaround",
            "dataType": "string",
            "sourceColumn": "ccb_workaround",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_proposal",
            "dataType": "string",
            "sourceColumn": "ccb_proposal",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_mode",
            "dataType": "string",
            "sourceColumn": "ccb_mode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_disposition_type",
            "dataType": "string",
            "sourceColumn": "ccb_disposition_type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_defined_date",
            "dataType": "string",
            "sourceColumn": "ww_defined_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_approved_date",
            "dataType": "string",
            "sourceColumn": "ww_approved_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_predrop_closure_date_sdg",
            "dataType": "string",
            "sourceColumn": "ww_predrop_closure_date_sdg",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "currentww",
            "dataType": "int64",
            "sourceColumn": "currentww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentmonth",
            "dataType": "int64",
            "sourceColumn": "currentmonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentyear",
            "dataType": "int64",
            "sourceColumn": "currentyear",
            "sourceProviderType": "Integer"
          },
          {
            "name": "subip_family",
            "dataType": "string",
            "sourceColumn": "subip_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "subip_supplier",
            "dataType": "string",
            "sourceColumn": "subip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.release_found",
            "dataType": "string",
            "sourceColumn": "bugeco.release_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "supplier_org",
            "dataType": "string",
            "sourceColumn": "supplier_org",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "sourceColumn": "is_PreSiPostSi",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "org_is_found_bySoc",
            "dataType": "string",
            "sourceColumn": "org_is_found_bySoc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsCount",
            "dataType": "int64",
            "sourceColumn": "IsCount",
            "sourceProviderType": "Integer"
          },
          {
            "name": "lineage_final",
            "dataType": "int64",
            "sourceColumn": "lineage_final",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "IsSubIP",
            "dataType": "string",
            "sourceColumn": "IsSubIP",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sub_bugcategory",
            "dataType": "string",
            "sourceColumn": "sub_bugcategory",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_status",
            "dataType": "string",
            "sourceColumn": "retro_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_ip_escape",
            "dataType": "string",
            "sourceColumn": "retro_ip_escape",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_learning",
            "dataType": "string",
            "sourceColumn": "retro_global_learning",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_action",
            "dataType": "string",
            "sourceColumn": "retro_global_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_analysis",
            "dataType": "string",
            "sourceColumn": "retro_analysis",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_learnings",
            "dataType": "string",
            "sourceColumn": "retro_learnings",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "owner",
            "dataType": "string",
            "sourceColumn": "owner",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_closed_date",
            "dataType": "string",
            "sourceColumn": "ww_closed_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_repo_modified_date",
            "dataType": "int64",
            "sourceColumn": "ww_repo_modified_date",
            "sourceProviderType": "Integer"
          },
          {
            "name": "BugFixedDoneDate",
            "dataType": "string",
            "sourceColumn": "BugFixedDoneDate",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "generation",
            "dataType": "string",
            "sourceColumn": "generation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsRealBug",
            "dataType": "int64",
            "sourceColumn": "IsRealBug",
            "sourceProviderType": "Integer"
          },
          {
            "name": "milestone",
            "dataType": "string",
            "sourceColumn": "milestone",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_response_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_response_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_resolution_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_resolution_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_response_date",
            "dataType": "string",
            "sourceColumn": "sla_response_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_resolution_date",
            "dataType": "string",
            "sourceColumn": "sla_resolution_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_response_met",
            "dataType": "string",
            "sourceColumn": "sla_response_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_resolution_met",
            "dataType": "string",
            "sourceColumn": "sla_resolution_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_by",
            "dataType": "string",
            "sourceColumn": "submitted_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "updated_by",
            "dataType": "string",
            "sourceColumn": "updated_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ingredient",
            "dataType": "string",
            "sourceColumn": "ingredient",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_future_date",
            "dataType": "string",
            "sourceColumn": "ww_future_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "predrop_ww",
            "dataType": "string",
            "sourceColumn": "predrop_ww"
          },
          {
            "name": "ccb_meeting",
            "dataType": "string",
            "sourceColumn": "ccb_meeting"
          },
          {
            "name": "gate",
            "dataType": "string",
            "sourceColumn": "gate"
          },
          {
            "name": "reason",
            "dataType": "string",
            "sourceColumn": "reason"
          },
          {
            "name": "open_age",
            "dataType": "int64",
            "sourceColumn": "open_age"
          },
          {
            "name": "unvalidated_age",
            "dataType": "int64",
            "sourceColumn": "unvalidated_age"
          },
          {
            "name": "validator",
            "dataType": "string",
            "sourceColumn": "validator"
          },
          {
            "name": "repo_modified_date",
            "dataType": "dateTime",
            "sourceColumn": "repo_modified_date"
          },
          {
            "type": "calculated",
            "name": "max_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "MAXX(filter(QueryBugip_fw_sw, QueryBugip_fw_sw[id]=EARLIER(QueryBugip_fw_sw[id])),QueryBugip_fw_sw[ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwfamily",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugip_fw_sw[family],QueryBugip_fw_sw[id],QueryBugip_fw_sw[id],QueryBugip_fw_sw[ww], QueryBugip_fw_sw[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwrelease",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugip_fw_sw[release],QueryBugip_fw_sw[id],QueryBugip_fw_sw[id],QueryBugip_fw_sw[ww], QueryBugip_fw_sw[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwSocDie",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugip_fw_sw[SoC Die],QueryBugip_fw_sw[id],QueryBugip_fw_sw[id],QueryBugip_fw_sw[ww], QueryBugip_fw_sw[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwip_supplier",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugip_fw_sw[ip_supplier],QueryBugip_fw_sw[id],QueryBugip_fw_sw[id],QueryBugip_fw_sw[ww], QueryBugip_fw_sw[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwbug_category",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugip_fw_sw[bug_category],QueryBugip_fw_sw[id],QueryBugip_fw_sw[id],QueryBugip_fw_sw[ww], QueryBugip_fw_sw[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwsub_bugcategory",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugip_fw_sw[sub_bugcategory],QueryBugip_fw_sw[id],QueryBugip_fw_sw[id],QueryBugip_fw_sw[ww], QueryBugip_fw_sw[max_ww])"
          }
        ],
        "partitions": [
          {
            "name": "QueryBugip_fw_sw",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "[tenant]",
                ",ww",
                ",closed_date",
                ",[original_family]",
                ",[family]",
                ",priority",
                ",[ip_supplier] ",
                ",[release]",
                ",[release_affected] ",
                ", [tag]",
                ",[status]",
                ",[status_detail]",
                ",[project]",
                ",[SoC Die]",
                ",[id]",
                ",[lineage]",
                ",[original_lineage]",
                ",[title]",
                ", [ww_submitted_date]",
                ",[submitted_date]",
                ",[updated_date]",
                ",ww_updated_date",
                ",[bugeco.env_found] ",
                ",[bugeco.team_found]",
                ",[bug_category]",
                ",[bugeco.bug_class]",
                ",from_tenant",
                ", from_subject",
                ",[bugeco.type]",
                ",component",
                ",url",
                ",[ccb_change_scope]",
                ",[ccb_eta]",
                ",[ccb_order]",
                "--,[ccb_por]",
                ",[ccb_prq_gating]",
                "--,[ccb_questionnaire]",
                ",[ccb_status]",
                ",[ccb_wontfix_action]",
                ",[ccb_wontfix_reason]",
                ",[ccb_workaround]",
                ",[ccb_proposal]",
                ",[ccb_mode]",
                ",[ccb_disposition_type]",
                ",[ww_defined_date]",
                ",[ww_approved_date]",
                ",ww_predrop_closure_date_sdg",
                ",[currentww]",
                ",[currentmonth]",
                ",[currentyear]",
                ",[subip_family]",
                ",[subip_supplier]",
                ",[bugeco.release_found]",
                ", supplier_org",
                ",[is_PreSiPostSi]",
                ",[org_is_found_bySoc]",
                ", IsCount ",
                ",[lineage_final]",
                ",IsSubIP",
                ",[sub_bugcategory]",
                ",retro_status",
                ",retro_ip_escape",
                ",retro_global_learning",
                ",retro_global_action",
                ",retro_analysis",
                ",retro_learnings",
                ",[owner]",
                ",[ww_closed_date]",
                ",[ww_repo_modified_date]",
                ",[BugFixedDoneDate]",
                ",[generation]",
                ", IsRealBug",
                ",milestone",
                ",[ww_sla_response_date] ",
                ",[ww_sla_resolution_date]",
                ",[sla_response_date]",
                ",[sla_resolution_date]",
                ",[sla_response_met] ",
                " ,[sla_resolution_met]",
                ", submitted_by",
                ", updated_by",
                ",[ingredient]",
                ",[ww_future_date]",
                ",[predrop_ww]",
                ",[ccb_meeting]",
                ",[gate]",
                ",[reason]",
                ",open_age ",
                ",unvalidated_age",
                ",validator",
                ",[repo_modified_date]",
                "from v_ipg_ip_fw_sw_sensing_bug_historical"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "[tenant]",
                  ",ww",
                  ",closed_date",
                  ",[original_family]",
                  ",[family]",
                  ",priority",
                  ",[ip_supplier] ",
                  ",[release]",
                  ",[release_affected] ",
                  ", [tag]",
                  ",[status]",
                  ",[status_detail]",
                  ",[project]",
                  ",[SoC Die]",
                  ",[id]",
                  ",[lineage]",
                  ",[original_lineage]",
                  ",[title]",
                  ", [ww_submitted_date]",
                  ",[submitted_date]",
                  ",[updated_date]",
                  ",ww_updated_date",
                  ",[bugeco.env_found] ",
                  ",[bugeco.team_found]",
                  ",[bug_category]",
                  ",[bugeco.bug_class]",
                  ",from_tenant",
                  ", from_subject",
                  ",[bugeco.type]",
                  ",component",
                  ",url",
                  ",[ccb_change_scope]",
                  ",[ccb_eta]",
                  ",[ccb_order]",
                  "--,[ccb_por]",
                  ",[ccb_prq_gating]",
                  "--,[ccb_questionnaire]",
                  ",[ccb_status]",
                  ",[ccb_wontfix_action]",
                  ",[ccb_wontfix_reason]",
                  ",[ccb_workaround]",
                  ",[ccb_proposal]",
                  ",[ccb_mode]",
                  ",[ccb_disposition_type]",
                  ",[ww_defined_date]",
                  ",[ww_approved_date]",
                  ",ww_predrop_closure_date_sdg",
                  ",[currentww]",
                  ",[currentmonth]",
                  ",[currentyear]",
                  ",[subip_family]",
                  ",[subip_supplier]",
                  ",[bugeco.release_found]",
                  ", supplier_org",
                  ",[is_PreSiPostSi]",
                  ",[org_is_found_bySoc]",
                  ", IsCount ",
                  ",[lineage_final]",
                  ",IsSubIP",
                  ",[sub_bugcategory]",
                  ",retro_status",
                  ",retro_ip_escape",
                  ",retro_global_learning",
                  ",retro_global_action",
                  ",retro_analysis",
                  ",retro_learnings",
                  ",[owner]",
                  ",[ww_closed_date]",
                  ",[ww_repo_modified_date]",
                  ",[BugFixedDoneDate]",
                  ",[generation]",
                  ", IsRealBug",
                  ",milestone",
                  ",[ww_sla_response_date] ",
                  ",[ww_sla_resolution_date]",
                  ",[sla_response_date]",
                  ",[sla_resolution_date]",
                  ",[sla_response_met] ",
                  " ,[sla_resolution_met]",
                  ", submitted_by",
                  ", updated_by",
                  ",[ingredient]",
                  ",[ww_future_date]",
                  ",[predrop_ww]",
                  ",[ccb_meeting]",
                  ",[gate]",
                  ",[reason]",
                  ",open_age ",
                  ",unvalidated_age",
                  ",validator",
                  ",[repo_modified_date]",
                  "from v_ipg_ip_fw_sw_sensing_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_ip_fw_sw_sensing_bug_historical"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryBugip_fw_sw"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_ip_fw_sw_sensing_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryBugheia_soc",
        "columns": [
          {
            "name": "tenant",
            "dataType": "string",
            "sourceColumn": "tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "closed_date",
            "dataType": "dateTime",
            "sourceColumn": "closed_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "original_family",
            "dataType": "string",
            "sourceColumn": "original_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "family",
            "dataType": "string",
            "sourceColumn": "family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ip_supplier",
            "dataType": "string",
            "sourceColumn": "ip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release",
            "dataType": "string",
            "sourceColumn": "release",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release_affected",
            "dataType": "string",
            "sourceColumn": "release_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "tag",
            "dataType": "string",
            "sourceColumn": "tag",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status_detail",
            "dataType": "string",
            "sourceColumn": "status_detail",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "project",
            "dataType": "string",
            "sourceColumn": "project",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SoC Die",
            "dataType": "string",
            "sourceColumn": "SoC Die",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "lineage",
            "dataType": "int64",
            "sourceColumn": "lineage",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "original_lineage",
            "dataType": "string",
            "sourceColumn": "original_lineage",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "title",
            "dataType": "string",
            "sourceColumn": "title",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_submitted_date",
            "dataType": "string",
            "sourceColumn": "ww_submitted_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_date",
            "dataType": "dateTime",
            "sourceColumn": "submitted_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "updated_date",
            "dataType": "dateTime",
            "sourceColumn": "updated_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ww_updated_date",
            "dataType": "int64",
            "sourceColumn": "ww_updated_date",
            "sourceProviderType": "Integer"
          },
          {
            "name": "bugeco.env_found",
            "dataType": "string",
            "sourceColumn": "bugeco.env_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.team_found",
            "dataType": "string",
            "sourceColumn": "bugeco.team_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bug_category",
            "dataType": "string",
            "sourceColumn": "bug_category",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.bug_class",
            "dataType": "string",
            "sourceColumn": "bugeco.bug_class",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_tenant",
            "dataType": "string",
            "sourceColumn": "from_tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_subject",
            "dataType": "string",
            "sourceColumn": "from_subject",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.type",
            "dataType": "string",
            "sourceColumn": "bugeco.type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "component",
            "dataType": "string",
            "sourceColumn": "component",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "url",
            "dataType": "string",
            "sourceColumn": "url",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_change_scope",
            "dataType": "string",
            "sourceColumn": "ccb_change_scope",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_eta",
            "dataType": "dateTime",
            "sourceColumn": "ccb_eta",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ccb_order",
            "dataType": "int64",
            "sourceColumn": "ccb_order",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ccb_prq_gating",
            "dataType": "string",
            "sourceColumn": "ccb_prq_gating",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_status",
            "dataType": "string",
            "sourceColumn": "ccb_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_action",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_reason",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_reason",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_workaround",
            "dataType": "string",
            "sourceColumn": "ccb_workaround",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_proposal",
            "dataType": "string",
            "sourceColumn": "ccb_proposal",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_mode",
            "dataType": "string",
            "sourceColumn": "ccb_mode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_disposition_type",
            "dataType": "string",
            "sourceColumn": "ccb_disposition_type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_defined_date",
            "dataType": "string",
            "sourceColumn": "ww_defined_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_approved_date",
            "dataType": "string",
            "sourceColumn": "ww_approved_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_predrop_closure_date_sdg",
            "dataType": "string",
            "sourceColumn": "ww_predrop_closure_date_sdg",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "currentww",
            "dataType": "int64",
            "sourceColumn": "currentww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentmonth",
            "dataType": "int64",
            "sourceColumn": "currentmonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentyear",
            "dataType": "int64",
            "sourceColumn": "currentyear",
            "sourceProviderType": "Integer"
          },
          {
            "name": "subip_family",
            "dataType": "string",
            "sourceColumn": "subip_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "subip_supplier",
            "dataType": "string",
            "sourceColumn": "subip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.release_found",
            "dataType": "string",
            "sourceColumn": "bugeco.release_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "supplier_org",
            "dataType": "string",
            "sourceColumn": "supplier_org",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "sourceColumn": "is_PreSiPostSi",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "org_is_found_bySoc",
            "dataType": "string",
            "sourceColumn": "org_is_found_bySoc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsCount",
            "dataType": "int64",
            "sourceColumn": "IsCount",
            "sourceProviderType": "Integer"
          },
          {
            "name": "lineage_final",
            "dataType": "int64",
            "sourceColumn": "lineage_final",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "IsSubIP",
            "dataType": "string",
            "sourceColumn": "IsSubIP",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sub_bugcategory",
            "dataType": "string",
            "sourceColumn": "sub_bugcategory",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_status",
            "dataType": "string",
            "sourceColumn": "retro_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_ip_escape",
            "dataType": "string",
            "sourceColumn": "retro_ip_escape",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_learning",
            "dataType": "string",
            "sourceColumn": "retro_global_learning",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_action",
            "dataType": "string",
            "sourceColumn": "retro_global_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_analysis",
            "dataType": "string",
            "sourceColumn": "retro_analysis",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_learnings",
            "dataType": "string",
            "sourceColumn": "retro_learnings",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "owner",
            "dataType": "string",
            "sourceColumn": "owner",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_closed_date",
            "dataType": "string",
            "sourceColumn": "ww_closed_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_repo_modified_date",
            "dataType": "string",
            "sourceColumn": "ww_repo_modified_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BugFixedDoneDate",
            "dataType": "string",
            "sourceColumn": "BugFixedDoneDate",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "generation",
            "dataType": "string",
            "sourceColumn": "generation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsRealBug",
            "dataType": "int64",
            "sourceColumn": "IsRealBug",
            "sourceProviderType": "Integer"
          },
          {
            "name": "milestone",
            "dataType": "string",
            "sourceColumn": "milestone",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_response_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_response_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_resolution_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_resolution_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_response_date",
            "dataType": "string",
            "sourceColumn": "sla_response_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_resolution_date",
            "dataType": "string",
            "sourceColumn": "sla_resolution_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_response_met",
            "dataType": "string",
            "sourceColumn": "sla_response_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_resolution_met",
            "dataType": "string",
            "sourceColumn": "sla_resolution_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_by",
            "dataType": "string",
            "sourceColumn": "submitted_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "updated_by",
            "dataType": "string",
            "sourceColumn": "updated_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ingredient",
            "dataType": "string",
            "sourceColumn": "ingredient",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_future_date",
            "dataType": "string",
            "sourceColumn": "ww_future_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "predrop_ww",
            "dataType": "string",
            "sourceColumn": "predrop_ww"
          },
          {
            "name": "ccb_meeting",
            "dataType": "string",
            "sourceColumn": "ccb_meeting"
          },
          {
            "name": "gate",
            "dataType": "string",
            "sourceColumn": "gate"
          },
          {
            "name": "reason",
            "dataType": "string",
            "sourceColumn": "reason"
          },
          {
            "name": "open_age",
            "dataType": "int64",
            "sourceColumn": "open_age"
          },
          {
            "name": "unvalidated_age",
            "dataType": "double",
            "sourceColumn": "unvalidated_age"
          },
          {
            "name": "validator",
            "dataType": "string",
            "sourceColumn": "validator"
          },
          {
            "name": "repo_modified_date",
            "dataType": "dateTime",
            "sourceColumn": "repo_modified_date"
          },
          {
            "type": "calculated",
            "name": "max_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "MAXX(filter(QueryBugheia_soc, QueryBugheia_soc[id]=EARLIER(QueryBugheia_soc[id])),QueryBugheia_soc[ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwfamily",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugheia_soc[family],QueryBugheia_soc[id],QueryBugheia_soc[id],QueryBugheia_soc[ww], QueryBugheia_soc[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwrelease",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugheia_soc[release],QueryBugheia_soc[id],QueryBugheia_soc[id],QueryBugheia_soc[ww], QueryBugheia_soc[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwSocDie",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugheia_soc[SoC Die],QueryBugheia_soc[id],QueryBugheia_soc[id],QueryBugheia_soc[ww], QueryBugheia_soc[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwip_supplier",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugheia_soc[ip_supplier],QueryBugheia_soc[id],QueryBugheia_soc[id],QueryBugheia_soc[ww], QueryBugheia_soc[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwbug_category",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugheia_soc[bug_category],QueryBugheia_soc[id],QueryBugheia_soc[id],QueryBugheia_soc[ww], QueryBugheia_soc[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwsub_bugcategory",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugheia_soc[sub_bugcategory],QueryBugheia_soc[id],QueryBugheia_soc[id],QueryBugheia_soc[ww], QueryBugheia_soc[max_ww])"
          }
        ],
        "partitions": [
          {
            "name": "QueryBugheia_soc",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "[tenant]",
                ",ww",
                ",closed_date",
                ",[original_family]",
                ",[family]",
                ",priority",
                ",[ip_supplier] ",
                ",[release]",
                ",[release_affected] ",
                ", [tag]",
                ",[status]",
                ",[status_detail]",
                ",[project]",
                ",[SoC Die]",
                ",[id]",
                ",[lineage]",
                ",[original_lineage]",
                ",[title]",
                ", [ww_submitted_date]",
                ",[submitted_date]",
                ",[updated_date]",
                ",ww_updated_date",
                ",[bugeco.env_found] ",
                ",[bugeco.team_found]",
                ",[bug_category]",
                ",[bugeco.bug_class]",
                ",from_tenant",
                ", from_subject",
                ",[bugeco.type]",
                ",component",
                ",url",
                ",[ccb_change_scope]",
                ",[ccb_eta]",
                ",[ccb_order]",
                "--,[ccb_por]",
                ",[ccb_prq_gating]",
                "--,[ccb_questionnaire]",
                ",[ccb_status]",
                ",[ccb_wontfix_action]",
                ",[ccb_wontfix_reason]",
                ",[ccb_workaround]",
                ",[ccb_proposal]",
                ",[ccb_mode]",
                ",[ccb_disposition_type]",
                ",[ww_defined_date]",
                ",[ww_approved_date]",
                ",ww_predrop_closure_date_sdg",
                ",[currentww]",
                ",[currentmonth]",
                ",[currentyear]",
                ",[subip_family]",
                ",[subip_supplier]",
                ",[bugeco.release_found]",
                ", supplier_org",
                ",[is_PreSiPostSi]",
                ",[org_is_found_bySoc]",
                ", IsCount ",
                ",[lineage_final]",
                ",IsSubIP",
                ",[sub_bugcategory]",
                ",retro_status",
                ",retro_ip_escape",
                ",retro_global_learning",
                ",retro_global_action",
                ",retro_analysis",
                ",retro_learnings",
                ",[owner]",
                ",[ww_closed_date]",
                ",[ww_repo_modified_date]",
                ",[BugFixedDoneDate]",
                ",[generation]",
                ", IsRealBug",
                ",milestone",
                ",[ww_sla_response_date] ",
                ",[ww_sla_resolution_date]",
                ",[sla_response_date]",
                ",[sla_resolution_date]",
                ",[sla_response_met] ",
                " ,[sla_resolution_met]",
                ", submitted_by",
                ", updated_by",
                ",[ingredient]",
                ",[ww_future_date]",
                ",[predrop_ww]",
                ",[ccb_meeting]",
                ",[gate]",
                ",[reason]",
                ",open_age ",
                ",unvalidated_age",
                ",validator",
                ",[repo_modified_date]",
                "",
                "from v_ipg_heia_soc_icelake_bug_historical",
                "",
                "UNION ALL",
                "select ",
                "[tenant]",
                ",ww",
                ",closed_date",
                ",[original_family]",
                ",[family]",
                ",priority",
                ",[ip_supplier] ",
                ",[release]",
                ",[release_affected] ",
                ", [tag]",
                ",[status]",
                ",[status_detail]",
                ",[project]",
                ",[SoC Die]",
                ",[id]",
                ",[lineage]",
                ",[original_lineage]",
                ",[title]",
                ", [ww_submitted_date]",
                ",[submitted_date]",
                ",[updated_date]",
                ",ww_updated_date",
                ",[bugeco.env_found] ",
                ",[bugeco.team_found]",
                ",[bug_category]",
                ",[bugeco.bug_class]",
                ",from_tenant",
                ", from_subject",
                ",[bugeco.type]",
                ",component",
                ",url",
                ",[ccb_change_scope]",
                ",[ccb_eta]",
                ",[ccb_order]",
                "--,[ccb_por]",
                ",[ccb_prq_gating]",
                "--,[ccb_questionnaire]",
                ",[ccb_status]",
                ",[ccb_wontfix_action]",
                ",[ccb_wontfix_reason]",
                ",[ccb_workaround]",
                ",[ccb_proposal]",
                ",[ccb_mode]",
                ",[ccb_disposition_type]",
                ",[ww_defined_date]",
                ",[ww_approved_date]",
                ",ww_predrop_closure_date_sdg",
                ",[currentww]",
                ",[currentmonth]",
                ",[currentyear]",
                ",[subip_family]",
                ",[subip_supplier]",
                ",[bugeco.release_found]",
                ", supplier_org",
                ",[is_PreSiPostSi]",
                ",[org_is_found_bySoc]",
                ", IsCount ",
                ",[lineage_final]",
                ",IsSubIP",
                ",[sub_bugcategory]",
                ",retro_status",
                ",retro_ip_escape",
                ",retro_global_learning",
                ",retro_global_action",
                ",retro_analysis",
                ",retro_learnings",
                ",[owner]",
                ",[ww_closed_date]",
                ",[ww_repo_modified_date]",
                ",[BugFixedDoneDate]",
                ",[generation]",
                ", IsRealBug",
                ",milestone",
                ",[ww_sla_response_date] ",
                ",[ww_sla_resolution_date]",
                ",[sla_response_date]",
                ",[sla_resolution_date]",
                ",[sla_response_met] ",
                " ,[sla_resolution_met]",
                ", submitted_by",
                ", updated_by",
                ",[ingredient]",
                ",[ww_future_date]",
                ",[predrop_ww]",
                ",[ccb_meeting]",
                ",[gate]",
                ",[reason]",
                ",open_age ",
                ",unvalidated_age",
                ",validator",
                ",[repo_modified_date]",
                "from v_ipg_heia_soc_tigerlake_bug_historical"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "[tenant]",
                  ",ww",
                  ",closed_date",
                  ",[original_family]",
                  ",[family]",
                  ",priority",
                  ",[ip_supplier] ",
                  ",[release]",
                  ",[release_affected] ",
                  ", [tag]",
                  ",[status]",
                  ",[status_detail]",
                  ",[project]",
                  ",[SoC Die]",
                  ",[id]",
                  ",[lineage]",
                  ",[original_lineage]",
                  ",[title]",
                  ", [ww_submitted_date]",
                  ",[submitted_date]",
                  ",[updated_date]",
                  ",ww_updated_date",
                  ",[bugeco.env_found] ",
                  ",[bugeco.team_found]",
                  ",[bug_category]",
                  ",[bugeco.bug_class]",
                  ",from_tenant",
                  ", from_subject",
                  ",[bugeco.type]",
                  ",component",
                  ",url",
                  ",[ccb_change_scope]",
                  ",[ccb_eta]",
                  ",[ccb_order]",
                  "--,[ccb_por]",
                  ",[ccb_prq_gating]",
                  "--,[ccb_questionnaire]",
                  ",[ccb_status]",
                  ",[ccb_wontfix_action]",
                  ",[ccb_wontfix_reason]",
                  ",[ccb_workaround]",
                  ",[ccb_proposal]",
                  ",[ccb_mode]",
                  ",[ccb_disposition_type]",
                  ",[ww_defined_date]",
                  ",[ww_approved_date]",
                  ",ww_predrop_closure_date_sdg",
                  ",[currentww]",
                  ",[currentmonth]",
                  ",[currentyear]",
                  ",[subip_family]",
                  ",[subip_supplier]",
                  ",[bugeco.release_found]",
                  ", supplier_org",
                  ",[is_PreSiPostSi]",
                  ",[org_is_found_bySoc]",
                  ", IsCount ",
                  ",[lineage_final]",
                  ",IsSubIP",
                  ",[sub_bugcategory]",
                  ",retro_status",
                  ",retro_ip_escape",
                  ",retro_global_learning",
                  ",retro_global_action",
                  ",retro_analysis",
                  ",retro_learnings",
                  ",[owner]",
                  ",[ww_closed_date]",
                  ",[ww_repo_modified_date]",
                  ",[BugFixedDoneDate]",
                  ",[generation]",
                  ", IsRealBug",
                  ",milestone",
                  ",[ww_sla_response_date] ",
                  ",[ww_sla_resolution_date]",
                  ",[sla_response_date]",
                  ",[sla_resolution_date]",
                  ",[sla_response_met] ",
                  " ,[sla_resolution_met]",
                  ", submitted_by",
                  ", updated_by",
                  ",[ingredient]",
                  ",[ww_future_date]",
                  ",[predrop_ww]",
                  ",[ccb_meeting]",
                  ",[gate]",
                  ",[reason]",
                  ",open_age ",
                  ",unvalidated_age",
                  ",validator",
                  ",[repo_modified_date]",
                  "",
                  "from v_ipg_heia_soc_icelake_bug_historical",
                  "",
                  "UNION ALL",
                  "select ",
                  "[tenant]",
                  ",ww",
                  ",closed_date",
                  ",[original_family]",
                  ",[family]",
                  ",priority",
                  ",[ip_supplier] ",
                  ",[release]",
                  ",[release_affected] ",
                  ", [tag]",
                  ",[status]",
                  ",[status_detail]",
                  ",[project]",
                  ",[SoC Die]",
                  ",[id]",
                  ",[lineage]",
                  ",[original_lineage]",
                  ",[title]",
                  ", [ww_submitted_date]",
                  ",[submitted_date]",
                  ",[updated_date]",
                  ",ww_updated_date",
                  ",[bugeco.env_found] ",
                  ",[bugeco.team_found]",
                  ",[bug_category]",
                  ",[bugeco.bug_class]",
                  ",from_tenant",
                  ", from_subject",
                  ",[bugeco.type]",
                  ",component",
                  ",url",
                  ",[ccb_change_scope]",
                  ",[ccb_eta]",
                  ",[ccb_order]",
                  "--,[ccb_por]",
                  ",[ccb_prq_gating]",
                  "--,[ccb_questionnaire]",
                  ",[ccb_status]",
                  ",[ccb_wontfix_action]",
                  ",[ccb_wontfix_reason]",
                  ",[ccb_workaround]",
                  ",[ccb_proposal]",
                  ",[ccb_mode]",
                  ",[ccb_disposition_type]",
                  ",[ww_defined_date]",
                  ",[ww_approved_date]",
                  ",ww_predrop_closure_date_sdg",
                  ",[currentww]",
                  ",[currentmonth]",
                  ",[currentyear]",
                  ",[subip_family]",
                  ",[subip_supplier]",
                  ",[bugeco.release_found]",
                  ", supplier_org",
                  ",[is_PreSiPostSi]",
                  ",[org_is_found_bySoc]",
                  ", IsCount ",
                  ",[lineage_final]",
                  ",IsSubIP",
                  ",[sub_bugcategory]",
                  ",retro_status",
                  ",retro_ip_escape",
                  ",retro_global_learning",
                  ",retro_global_action",
                  ",retro_analysis",
                  ",retro_learnings",
                  ",[owner]",
                  ",[ww_closed_date]",
                  ",[ww_repo_modified_date]",
                  ",[BugFixedDoneDate]",
                  ",[generation]",
                  ", IsRealBug",
                  ",milestone",
                  ",[ww_sla_response_date] ",
                  ",[ww_sla_resolution_date]",
                  ",[sla_response_date]",
                  ",[sla_resolution_date]",
                  ",[sla_response_met] ",
                  " ,[sla_resolution_met]",
                  ", submitted_by",
                  ", updated_by",
                  ",[ingredient]",
                  ",[ww_future_date]",
                  ",[predrop_ww]",
                  ",[ccb_meeting]",
                  ",[gate]",
                  ",[reason]",
                  ",open_age ",
                  ",unvalidated_age",
                  ",validator",
                  ",[repo_modified_date]",
                  "from v_ipg_heia_soc_tigerlake_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "",
              "from v_ipg_heia_soc_icelake_bug_historical",
              "",
              "UNION ALL",
              "select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_heia_soc_tigerlake_bug_historical"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryBugheia_soc"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "",
              "from v_ipg_heia_soc_icelake_bug_historical",
              "",
              "UNION ALL",
              "select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_heia_soc_tigerlake_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryBugFWSWSDG",
        "columns": [
          {
            "name": "tenant",
            "dataType": "string",
            "sourceColumn": "tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "closed_date",
            "dataType": "dateTime",
            "sourceColumn": "closed_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "original_family",
            "dataType": "string",
            "sourceColumn": "original_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "family",
            "dataType": "string",
            "sourceColumn": "family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ip_supplier",
            "dataType": "string",
            "sourceColumn": "ip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release",
            "dataType": "string",
            "sourceColumn": "release",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release_affected",
            "dataType": "string",
            "sourceColumn": "release_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "tag",
            "dataType": "string",
            "sourceColumn": "tag",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status_detail",
            "dataType": "string",
            "sourceColumn": "status_detail",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "project",
            "dataType": "string",
            "sourceColumn": "project",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SoC Die",
            "dataType": "string",
            "sourceColumn": "SoC Die",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "lineage",
            "dataType": "int64",
            "sourceColumn": "lineage",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "original_lineage",
            "dataType": "string",
            "sourceColumn": "original_lineage",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "title",
            "dataType": "string",
            "sourceColumn": "title",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_submitted_date",
            "dataType": "string",
            "sourceColumn": "ww_submitted_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_date",
            "dataType": "dateTime",
            "sourceColumn": "submitted_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "updated_date",
            "dataType": "dateTime",
            "sourceColumn": "updated_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ww_updated_date",
            "dataType": "int64",
            "sourceColumn": "ww_updated_date",
            "sourceProviderType": "Integer"
          },
          {
            "name": "bugeco.env_found",
            "dataType": "string",
            "sourceColumn": "bugeco.env_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.team_found",
            "dataType": "string",
            "sourceColumn": "bugeco.team_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bug_category",
            "dataType": "string",
            "sourceColumn": "bug_category",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.bug_class",
            "dataType": "string",
            "sourceColumn": "bugeco.bug_class",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_tenant",
            "dataType": "string",
            "sourceColumn": "from_tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_subject",
            "dataType": "string",
            "sourceColumn": "from_subject",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.type",
            "dataType": "string",
            "sourceColumn": "bugeco.type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "component",
            "dataType": "string",
            "sourceColumn": "component",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "url",
            "dataType": "string",
            "sourceColumn": "url",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_change_scope",
            "dataType": "string",
            "sourceColumn": "ccb_change_scope",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_eta",
            "dataType": "dateTime",
            "sourceColumn": "ccb_eta",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ccb_order",
            "dataType": "int64",
            "sourceColumn": "ccb_order",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ccb_prq_gating",
            "dataType": "string",
            "sourceColumn": "ccb_prq_gating",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_status",
            "dataType": "string",
            "sourceColumn": "ccb_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_action",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_wontfix_reason",
            "dataType": "string",
            "sourceColumn": "ccb_wontfix_reason",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_workaround",
            "dataType": "string",
            "sourceColumn": "ccb_workaround",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_proposal",
            "dataType": "string",
            "sourceColumn": "ccb_proposal",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_mode",
            "dataType": "string",
            "sourceColumn": "ccb_mode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_disposition_type",
            "dataType": "string",
            "sourceColumn": "ccb_disposition_type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_defined_date",
            "dataType": "string",
            "sourceColumn": "ww_defined_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_approved_date",
            "dataType": "string",
            "sourceColumn": "ww_approved_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_predrop_closure_date_sdg",
            "dataType": "string",
            "sourceColumn": "ww_predrop_closure_date_sdg",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "currentww",
            "dataType": "int64",
            "sourceColumn": "currentww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentmonth",
            "dataType": "int64",
            "sourceColumn": "currentmonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentyear",
            "dataType": "int64",
            "sourceColumn": "currentyear",
            "sourceProviderType": "Integer"
          },
          {
            "name": "subip_family",
            "dataType": "string",
            "sourceColumn": "subip_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "subip_supplier",
            "dataType": "string",
            "sourceColumn": "subip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.release_found",
            "dataType": "string",
            "sourceColumn": "bugeco.release_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "supplier_org",
            "dataType": "string",
            "sourceColumn": "supplier_org",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "sourceColumn": "is_PreSiPostSi",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "org_is_found_bySoc",
            "dataType": "string",
            "sourceColumn": "org_is_found_bySoc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsCount",
            "dataType": "int64",
            "sourceColumn": "IsCount",
            "sourceProviderType": "Integer"
          },
          {
            "name": "lineage_final",
            "dataType": "int64",
            "sourceColumn": "lineage_final",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "IsSubIP",
            "dataType": "string",
            "sourceColumn": "IsSubIP",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sub_bugcategory",
            "dataType": "string",
            "sourceColumn": "sub_bugcategory",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_status",
            "dataType": "string",
            "sourceColumn": "retro_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_ip_escape",
            "dataType": "string",
            "sourceColumn": "retro_ip_escape",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_learning",
            "dataType": "string",
            "sourceColumn": "retro_global_learning",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_action",
            "dataType": "string",
            "sourceColumn": "retro_global_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_analysis",
            "dataType": "string",
            "sourceColumn": "retro_analysis",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_learnings",
            "dataType": "string",
            "sourceColumn": "retro_learnings",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "owner",
            "dataType": "string",
            "sourceColumn": "owner",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_closed_date",
            "dataType": "string",
            "sourceColumn": "ww_closed_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_repo_modified_date",
            "dataType": "string",
            "sourceColumn": "ww_repo_modified_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "BugFixedDoneDate",
            "dataType": "string",
            "sourceColumn": "BugFixedDoneDate",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "generation",
            "dataType": "string",
            "sourceColumn": "generation",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsRealBug",
            "dataType": "int64",
            "sourceColumn": "IsRealBug",
            "sourceProviderType": "Integer"
          },
          {
            "name": "milestone",
            "dataType": "string",
            "sourceColumn": "milestone",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_response_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_response_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_sla_resolution_date",
            "dataType": "string",
            "sourceColumn": "ww_sla_resolution_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_response_date",
            "dataType": "dateTime",
            "sourceColumn": "sla_response_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "sla_resolution_date",
            "dataType": "dateTime",
            "sourceColumn": "sla_resolution_date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "sla_response_met",
            "dataType": "string",
            "sourceColumn": "sla_response_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sla_resolution_met",
            "dataType": "string",
            "sourceColumn": "sla_resolution_met",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "submitted_by",
            "dataType": "string",
            "sourceColumn": "submitted_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "updated_by",
            "dataType": "string",
            "sourceColumn": "updated_by",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ingredient",
            "dataType": "string",
            "sourceColumn": "ingredient",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_future_date",
            "dataType": "string",
            "sourceColumn": "ww_future_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "predrop_ww",
            "dataType": "int64",
            "sourceColumn": "predrop_ww"
          },
          {
            "name": "ccb_meeting",
            "dataType": "string",
            "sourceColumn": "ccb_meeting"
          },
          {
            "name": "gate",
            "dataType": "string",
            "sourceColumn": "gate"
          },
          {
            "name": "reason",
            "dataType": "string",
            "sourceColumn": "reason"
          },
          {
            "name": "open_age",
            "dataType": "double",
            "sourceColumn": "open_age"
          },
          {
            "name": "unvalidated_age",
            "dataType": "double",
            "sourceColumn": "unvalidated_age"
          },
          {
            "name": "validator",
            "dataType": "string",
            "sourceColumn": "validator"
          },
          {
            "name": "repo_modified_date",
            "dataType": "dateTime",
            "sourceColumn": "repo_modified_date"
          },
          {
            "type": "calculated",
            "name": "max_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "MAXX(filter(QueryBugFWSWSDG, QueryBugFWSWSDG[id]=EARLIER(QueryBugFWSWSDG[id])),QueryBugFWSWSDG[ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwfamily",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugFWSWSDG[family],QueryBugFWSWSDG[id],QueryBugFWSWSDG[id],QueryBugFWSWSDG[ww], QueryBugFWSWSDG[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwrelease",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugFWSWSDG[release],QueryBugFWSWSDG[id],QueryBugFWSWSDG[id],QueryBugFWSWSDG[ww], QueryBugFWSWSDG[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwSoCDie",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugFWSWSDG[SoC Die],QueryBugFWSWSDG[id],QueryBugFWSWSDG[id],QueryBugFWSWSDG[ww], QueryBugFWSWSDG[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwip_supplier",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugFWSWSDG[ip_supplier],QueryBugFWSWSDG[id],QueryBugFWSWSDG[id],QueryBugFWSWSDG[ww], QueryBugFWSWSDG[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwbug_category",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugFWSWSDG[bug_category],QueryBugFWSWSDG[id],QueryBugFWSWSDG[id],QueryBugFWSWSDG[ww], QueryBugFWSWSDG[max_ww])"
          },
          {
            "type": "calculated",
            "name": "currentwwsub_bugcategory",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "lookupvalue(QueryBugFWSWSDG[sub_bugcategory],QueryBugFWSWSDG[id],QueryBugFWSWSDG[id],QueryBugFWSWSDG[ww], QueryBugFWSWSDG[max_ww])"
          }
        ],
        "partitions": [
          {
            "name": "QueryFWSWSDG",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select ",
                "[tenant]",
                ",ww",
                ",closed_date",
                ",[original_family]",
                ",[family]",
                ",priority",
                ",[ip_supplier] ",
                ",[release]",
                ",[release_affected] ",
                ", [tag]",
                ",[status]",
                ",[status_detail]",
                ",[project]",
                ",[SoC Die]",
                ",[id]",
                ",[lineage]",
                ",[original_lineage]",
                ",[title]",
                ", [ww_submitted_date]",
                ",[submitted_date]",
                ",[updated_date]",
                ",ww_updated_date",
                ",[bugeco.env_found] ",
                ",[bugeco.team_found]",
                ",[bug_category]",
                ",[bugeco.bug_class]",
                ",from_tenant",
                ", from_subject",
                ",[bugeco.type]",
                ",component",
                ",url",
                ",[ccb_change_scope]",
                ",[ccb_eta]",
                ",[ccb_order]",
                "--,[ccb_por]",
                ",[ccb_prq_gating]",
                "--,[ccb_questionnaire]",
                ",[ccb_status]",
                ",[ccb_wontfix_action]",
                ",[ccb_wontfix_reason]",
                ",[ccb_workaround]",
                ",[ccb_proposal]",
                ",[ccb_mode]",
                ",[ccb_disposition_type]",
                ",[ww_defined_date]",
                ",[ww_approved_date]",
                ",ww_predrop_closure_date_sdg",
                ",[currentww]",
                ",[currentmonth]",
                ",[currentyear]",
                ",[subip_family]",
                ",[subip_supplier]",
                ",[bugeco.release_found]",
                ", supplier_org",
                ",[is_PreSiPostSi]",
                ",[org_is_found_bySoc]",
                ", IsCount ",
                ",[lineage_final]",
                ",IsSubIP",
                ",[sub_bugcategory]",
                ",retro_status",
                ",retro_ip_escape",
                ",retro_global_learning",
                ",retro_global_action",
                ",retro_analysis",
                ",retro_learnings",
                ",[owner]",
                ",[ww_closed_date]",
                ",[ww_repo_modified_date]",
                ",[BugFixedDoneDate]",
                ",[generation]",
                ", IsRealBug",
                ",milestone",
                ",[ww_sla_response_date] ",
                ",[ww_sla_resolution_date]",
                ",[sla_response_date]",
                ",[sla_resolution_date]",
                ",[sla_response_met] ",
                " ,[sla_resolution_met]",
                ", submitted_by",
                ", updated_by",
                ",[ingredient]",
                ",[ww_future_date]",
                ",[predrop_ww]",
                ",[ccb_meeting]",
                ",[gate]",
                ",[reason]",
                ",open_age ",
                ",unvalidated_age",
                ",validator",
                ",[repo_modified_date]",
                "from v_ipg_wave3_sdg_server_bug_historical"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  "[tenant]",
                  ",ww",
                  ",closed_date",
                  ",[original_family]",
                  ",[family]",
                  ",priority",
                  ",[ip_supplier] ",
                  ",[release]",
                  ",[release_affected] ",
                  ", [tag]",
                  ",[status]",
                  ",[status_detail]",
                  ",[project]",
                  ",[SoC Die]",
                  ",[id]",
                  ",[lineage]",
                  ",[original_lineage]",
                  ",[title]",
                  ", [ww_submitted_date]",
                  ",[submitted_date]",
                  ",[updated_date]",
                  ",ww_updated_date",
                  ",[bugeco.env_found] ",
                  ",[bugeco.team_found]",
                  ",[bug_category]",
                  ",[bugeco.bug_class]",
                  ",from_tenant",
                  ", from_subject",
                  ",[bugeco.type]",
                  ",component",
                  ",url",
                  ",[ccb_change_scope]",
                  ",[ccb_eta]",
                  ",[ccb_order]",
                  "--,[ccb_por]",
                  ",[ccb_prq_gating]",
                  "--,[ccb_questionnaire]",
                  ",[ccb_status]",
                  ",[ccb_wontfix_action]",
                  ",[ccb_wontfix_reason]",
                  ",[ccb_workaround]",
                  ",[ccb_proposal]",
                  ",[ccb_mode]",
                  ",[ccb_disposition_type]",
                  ",[ww_defined_date]",
                  ",[ww_approved_date]",
                  ",ww_predrop_closure_date_sdg",
                  ",[currentww]",
                  ",[currentmonth]",
                  ",[currentyear]",
                  ",[subip_family]",
                  ",[subip_supplier]",
                  ",[bugeco.release_found]",
                  ", supplier_org",
                  ",[is_PreSiPostSi]",
                  ",[org_is_found_bySoc]",
                  ", IsCount ",
                  ",[lineage_final]",
                  ",IsSubIP",
                  ",[sub_bugcategory]",
                  ",retro_status",
                  ",retro_ip_escape",
                  ",retro_global_learning",
                  ",retro_global_action",
                  ",retro_analysis",
                  ",retro_learnings",
                  ",[owner]",
                  ",[ww_closed_date]",
                  ",[ww_repo_modified_date]",
                  ",[BugFixedDoneDate]",
                  ",[generation]",
                  ", IsRealBug",
                  ",milestone",
                  ",[ww_sla_response_date] ",
                  ",[ww_sla_resolution_date]",
                  ",[sla_response_date]",
                  ",[sla_resolution_date]",
                  ",[sla_response_met] ",
                  " ,[sla_resolution_met]",
                  ", submitted_by",
                  ", updated_by",
                  ",[ingredient]",
                  ",[ww_future_date]",
                  ",[predrop_ww]",
                  ",[ccb_meeting]",
                  ",[gate]",
                  ",[reason]",
                  ",open_age ",
                  ",unvalidated_age",
                  ",validator",
                  ",[repo_modified_date]",
                  "from v_ipg_wave3_sdg_server_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_wave3_sdg_server_bug_historical"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryFWSWSDG"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              "[tenant]",
              ",ww",
              ",closed_date",
              ",[original_family]",
              ",[family]",
              ",priority",
              ",[ip_supplier] ",
              ",[release]",
              ",[release_affected] ",
              ", [tag]",
              ",[status]",
              ",[status_detail]",
              ",[project]",
              ",[SoC Die]",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ", [ww_submitted_date]",
              ",[submitted_date]",
              ",[updated_date]",
              ",ww_updated_date",
              ",[bugeco.env_found] ",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[bugeco.bug_class]",
              ",from_tenant",
              ", from_subject",
              ",[bugeco.type]",
              ",component",
              ",url",
              ",[ccb_change_scope]",
              ",[ccb_eta]",
              ",[ccb_order]",
              "--,[ccb_por]",
              ",[ccb_prq_gating]",
              "--,[ccb_questionnaire]",
              ",[ccb_status]",
              ",[ccb_wontfix_action]",
              ",[ccb_wontfix_reason]",
              ",[ccb_workaround]",
              ",[ccb_proposal]",
              ",[ccb_mode]",
              ",[ccb_disposition_type]",
              ",[ww_defined_date]",
              ",[ww_approved_date]",
              ",ww_predrop_closure_date_sdg",
              ",[currentww]",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ", supplier_org",
              ",[is_PreSiPostSi]",
              ",[org_is_found_bySoc]",
              ", IsCount ",
              ",[lineage_final]",
              ",IsSubIP",
              ",[sub_bugcategory]",
              ",retro_status",
              ",retro_ip_escape",
              ",retro_global_learning",
              ",retro_global_action",
              ",retro_analysis",
              ",retro_learnings",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[BugFixedDoneDate]",
              ",[generation]",
              ", IsRealBug",
              ",milestone",
              ",[ww_sla_response_date] ",
              ",[ww_sla_resolution_date]",
              ",[sla_response_date]",
              ",[sla_resolution_date]",
              ",[sla_response_met] ",
              " ,[sla_resolution_met]",
              ", submitted_by",
              ", updated_by",
              ",[ingredient]",
              ",[ww_future_date]",
              ",[predrop_ww]",
              ",[ccb_meeting]",
              ",[gate]",
              ",[reason]",
              ",open_age ",
              ",unvalidated_age",
              ",validator",
              ",[repo_modified_date]",
              "from v_ipg_wave3_sdg_server_bug_historical</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryBugHistorical",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "tenant",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[tenant]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": false,
            "sourceColumn": "[ww]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "family",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[family]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ip_supplier",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ip_supplier]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "release",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[release]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "release_affected",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[release_affected]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "tag",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[tag]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "status",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[status]",
            "sortByColumn": "status_order"
          },
          {
            "type": "calculatedTableColumn",
            "name": "status_detail",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[status_detail]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SoC Die",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[SoC Die]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "id",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[id]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "lineage",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[lineage]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "title",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[title]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_submitted_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ww_submitted_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "submitted_date",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[submitted_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "updated_date",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[updated_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_updated_date",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ww_updated_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "bugeco.env_found",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[bugeco.env_found]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "bugeco.team_found",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[bugeco.team_found]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "bug_category",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[bug_category]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "from_tenant",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[from_tenant]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "from_subject",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[from_subject]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "bugeco.type",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[bugeco.type]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "component",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[component]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "url",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[url]",
            "dataCategory": "WebUrl"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_change_scope",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ccb_change_scope]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_eta",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ccb_eta]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_order",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ccb_order]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_prq_gating",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ccb_prq_gating]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_status",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ccb_status]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_wontfix_action",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ccb_wontfix_action]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_wontfix_reason",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ccb_wontfix_reason]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_workaround",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ccb_workaround]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_proposal",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ccb_proposal]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_mode",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ccb_mode]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_disposition_type",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ccb_disposition_type]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_defined_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ww_defined_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_approved_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ww_approved_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_predrop_closure_date_sdg",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ww_predrop_closure_date_sdg]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "currentww",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[currentww]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "currentmonth",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[currentmonth]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "currentyear",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[currentyear]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "subip_family",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[subip_family]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "subip_supplier",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[subip_supplier]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "bugeco.release_found",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[bugeco.release_found]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "supplier_org",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[supplier_org]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[is_PreSiPostSi]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "org_is_found_bySoc",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[org_is_found_bySoc]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "sub_bugcategory",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[sub_bugcategory]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "retro_status",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[retro_status]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "retro_ip_escape",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[retro_ip_escape]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "retro_global_learning",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[retro_global_learning]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "retro_global_action",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[retro_global_action]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "retro_analysis",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[retro_analysis]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "retro_learnings",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[retro_learnings]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "owner",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[owner]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_closed_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ww_closed_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_repo_modified_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ww_repo_modified_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "generation",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[generation]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_sla_response_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ww_sla_response_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_sla_resolution_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ww_sla_resolution_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "sla_response_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[sla_response_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "sla_resolution_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[sla_resolution_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "sla_response_met",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[sla_response_met]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "predrop_ww",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[predrop_ww]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ccb_meeting",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ccb_meeting]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "gate",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[gate]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "reason",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[reason]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "open_age",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[open_age]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "unvalidated_age",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[unvalidated_age]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "validator",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[validator]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "submitted_by",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[submitted_by]"
          },
          {
            "type": "calculated",
            "name": "closed_in_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if([ww]  = value(LEFT(QueryBugHistorical[ww_closed_date], 4) & RIGHT(QueryBugHistorical[ww_closed_date], 2)), 1, 0)"
          },
          {
            "type": "calculated",
            "name": "apprv_or_repo_in_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if(ISBLANK([ww_approved_date]), IF([ww] = value(LEFT([ww_repo_modified_date], 4) & RIGHT([ww_repo_modified_date], 2)), 1, 0), IF([ww] = VALUE(LEFT([ww_approved_date], 4) & RIGHT([ww_approved_date],2 )), 1, 0))"
          },
          {
            "type": "calculated",
            "name": "DCCB_status",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF([status] = \"future\", \"Future\", [ccb_disposition_type])",
              "",
              "",
              "// OLD WAY saved 2023ww02",
              "",
              "// if([ccb_disposition_type] = \"Driver\", \"Driver\", if([ccb_disposition_type] = \"Passenger_No_Driver\", \"Passenger No Driver\", if([ccb_disposition_type] = \"Passenger_With_Driver\", \"Passenger With Driver\", if([status] = \"rejected\" && [reason] = \"future_product\", \"Rejected Future Product\", if([status] = \"rejected\" && [reason] = \"future_stepping\", \"Rejected Future Step\", if([status] = \"rejected\" && [reason] = \"wont_fix\", \"Rejected Won't Fix\", if([status] = \"rejected\", \"Rejected Non DCCB\", \"Non DCCB\")))))))"
            ]
          },
          {
            "type": "calculated",
            "name": "dccb_dispositioned_in_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if( ([apprv_or_repo_in_ww] = 1 && [ccb_disposition_type] in {\"Driver\",\"Passenger_With_Driver\",\"Passenger_No_Driver\"} ) || ([closed_in_ww] = 1 && [status] = \"rejected\"), 1, 0)"
          },
          {
            "type": "calculated",
            "name": "submitted_in_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF([ww] = VALUE(LEFT([ww_submitted_date], 4) & RIGHT([ww_submitted_date], 2)), 1, 0)"
          },
          {
            "type": "calculatedTableColumn",
            "name": "priority",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[priority]"
          },
          {
            "type": "calculated",
            "name": "dccb_status_prq",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[DCCB_status] & \" : \" & [ccb_prq_gating]"
          },
          {
            "type": "calculated",
            "name": "latest",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "if([ww] = max([ww]), \"latest\", [ww]&\"\")"
          },
          {
            "type": "calculated",
            "name": "defined_in_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF([ww] = value(left([ww_defined_date], 4) & RIGHT([ww_defined_date], 2)), 1, 0)"
          },
          {
            "type": "calculated",
            "name": "workaround_group",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "if([DCCB_status] <> \"Non DCCB\",if([ccb_workaround]=\"\",\"NoWorkaround\",if(iferror(search(\",\",[ccb_workaround]),0)<>0,\"MultipleWorkarounds\",[ccb_workaround])),\"*Non DCCB\")"
          },
          {
            "type": "calculated",
            "name": "dccb_pending",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if(or([status]=\"open\",[status]=\"change_defined\"),1,0)"
          },
          {
            "type": "calculated",
            "name": "is_prq",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if([ccb_prq_gating]=\"gating\",1,0)"
          },
          {
            "type": "calculated",
            "name": "tbd_prq_gating",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if([DCCB_status] <> \"Non DCCB\" && [ccb_prq_gating] in {\"tbd\", \"\", blank()},1,0)"
          },
          {
            "type": "calculated",
            "name": "isLatestWW",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if(QueryBugHistorical[ww]=QueryBugHistorical[currentww], 1, 0)"
          },
          {
            "type": "calculated",
            "name": "isLast6WWs",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "If(QueryBugHistorical[ww]>QueryBugHistorical[currentww]-6, 1, 0)"
          },
          {
            "type": "calculated",
            "name": "WWText",
            "dataType": "string",
            "isDataTypeInferred": false,
            "expression": "[ww]"
          },
          {
            "type": "calculated",
            "name": "WW_id",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[ww]&\"_\"&[id]"
          },
          {
            "type": "calculated",
            "name": "waiting_in_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if([status] = \"change_defined\", [ww], blank())"
          },
          {
            "type": "calculated",
            "name": "defined_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF([ww] = value(left([ww_defined_date], 4) & RIGHT([ww_defined_date], 2)), [ww], blank())"
          },
          {
            "type": "calculated",
            "name": "dispositioned_in_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if( ([apprv_or_repo_in_ww] = 1 && [ccb_disposition_type] in {\"Driver\",\"Passenger_With_Driver\",\"Passenger_No_Driver\"} ) || ([closed_in_ww] = 1 && [status] = \"rejected\"), [ww], BLANK())"
          },
          {
            "type": "calculated",
            "name": "ww_submitted_nbr",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "Value(Left(QueryBugHistorical[ww_submitted_date], 4)&Right(QueryBugHistorical[ww_submitted_date],2))"
          },
          {
            "type": "calculated",
            "name": "ww_closed_nbr",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "Value(Left(QueryBugHistorical[ww_closed_date], 4)&Right(QueryBugHistorical[ww_closed_date],2))"
          },
          {
            "type": "calculated",
            "name": "ww_repo_modified_nbr",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "Value(Left(QueryBugHistorical[ww_repo_modified_date], 4)&Right(QueryBugHistorical[ww_repo_modified_date],2))"
          },
          {
            "type": "calculatedTableColumn",
            "name": "repo_modified_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[repo_modified_date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "project",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[project]"
          },
          {
            "type": "calculated",
            "name": "configuration",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[release]"
          },
          {
            "type": "calculated",
            "name": "IsHIPSIPType",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " RELATED(QueryProcess[HIP/SIP])"
          },
          {
            "type": "calculated",
            "name": "Process",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "RELATED(QueryProcess[process])"
          },
          {
            "type": "calculated",
            "name": "IsTestChip",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if(ISBLANK(RELATED(QueryTestChip[IsTestChip])), 0, 1)"
          },
          {
            "type": "calculatedTableColumn",
            "name": "milestone",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[milestone]"
          },
          {
            "type": "calculated",
            "name": "project_step1",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "SUBSTITUTE(SUBSTITUTE([project],\"_\",\" \"),\"-\",\" \")"
          },
          {
            "type": "calculated",
            "name": "project_step2",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "LEFT([project_step1],",
              "FIND(\" \",[project_step1],",
              "FIND(\" \",[project_step1],1,1)+1,LEN([project_step1]))",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Platform",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF(RIGHT([project_step2],1) = \" \",",
              "LEFT([project_step2],len([project_step2])-1),",
              "[project_step2])"
            ]
          },
          {
            "type": "calculated",
            "name": "IsBlankRTL1p0Date",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "RELATED(QueryRTL1p0[IsBlankTrendDate])"
          },
          {
            "type": "calculated",
            "name": "IsPIC",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "If(ISBLANK(RELATED(QueryRTL1p0[Category])), \"NotMatch\", RELATED(QueryRTL1p0[Category]))"
          },
          {
            "type": "calculated",
            "name": "RTL1p0Date",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "RELATED(QueryRTL1p0[TrendYYYYWW])"
          },
          {
            "type": "calculated",
            "name": "RTL1p0DateSeqNbr",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "LOOKUPVALUE(QueryIntelWW[WWSeqNbr],QueryIntelWW[Intel Year-Work Week],[RTL1p0Date])"
          },
          {
            "type": "calculated",
            "name": "WWSubmittedSeqNbr",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "LOOKUPVALUE(QueryIntelWW[WWSeqNbr], QueryIntelWW[Intel Year-Work Week], [ww_submitted_nbr])"
          },
          {
            "type": "calculated",
            "name": "RTL1p0Milestone",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "if([IsPIC]=\"NotMatch\", \"NotMatchRelease/Config\", ",
              "    if([IsBlankRTL1p0Date]=1, \"NoRTL1p0Date\", ",
              "        if([tenant]=\"server\", \"N/A\", ",
              "            if([IsPIC]=\"NonPIC\"&&[WWSubmittedSeqNbr]>=[RTL1p0DateSeqNbr], \"PostRTL1p0\", ",
              "                if([IsPIC]=\"NonPIC\"&&[WWSubmittedSeqNbr]<[RTL1p0DateSeqNbr], \"PreRTL1p0\", ",
              "                    if([IsPIC]=\"PIC\"&&[tenant] in {\"sip\", \"dft_services\"}&&[milestone] in {\"RTL1p0\", \"RTL1p1\", \"Post RTL1P0\"}, \"PostRTL1p0\",",
              "                        if([IsPIC]=\"PIC\"&&[tenant] in {\"sip\", \"dft_services\"}&&[milestone] in {\"RTL0p0\", \"RTL0p5\", \"RTL0p8\"}, \"PreRTL1p0\", ",
              "                            if([IsPIC]=\"PIC\"&&[tenant] in {\"server\", \"dft_services\"}, \"N/A\", \"tbd\" ))))))))"
            ]
          },
          {
            "type": "calculated",
            "name": "DEG_TapeIn",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "RELATED(QueryTapein[Tapein])"
          },
          {
            "type": "calculated",
            "name": "DEG_TapeIn_SeqNbr",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "LOOKUPVALUE(",
              "QueryIntelWW[WWSeqNbr],",
              "QueryIntelWW[Intel Year-Work Week],",
              "INT([DEG_TapeIn]))"
            ]
          },
          {
            "type": "calculated",
            "name": "TapeInMilestone",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF(ISBLANK([DEG_TapeIn_SeqNbr])",
              "\t,\"No Tapein\"",
              "\t,IF([WWSubmittedSeqNbr] >= [DEG_TapeIn_SeqNbr]",
              "\t \t,\"Post Tapein\"",
              "\t \t,\"Pre Tapein\"",
              "\t)",
              ")"
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "lineage_final",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[lineage_final]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "IsRealBug",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[IsRealBug]"
          },
          {
            "type": "calculated",
            "name": "IsTrackingorSupport",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if([bug_category] in {\"tracking\", \"support\"}, 1, 0)"
          },
          {
            "type": "calculated",
            "name": "IsBugTicket",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " if([IsRealBug] =1 && [IsTrackingorSupport] = 0, 1, 0)"
          },
          {
            "type": "calculated",
            "name": "Lineage_ID_Unique",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " if([tenant]=\"heia_soc\"&&ISBLANK([lineage]), [id], if([tenant]=\"heia_soc\", [lineage], if(ISBLANK([lineage_final]), [id], [lineage_final])))"
          },
          {
            "type": "calculated",
            "name": "IPFamily",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "if(ISBLANK(RELATED(QueryGladius[Family]))||RELATED(QueryGladius[Family]) in{\"tbd\", \"multi\"}, [family], RELATED(QueryGladius[Family]))"
          },
          {
            "type": "calculated",
            "name": "MinSetIDFutureStepping",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "if([tenant]=\"server\"",
              ", minx(FILTER(QueryBugHistorical",
              ",QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "&&QueryBugHistorical[generation]=EARLIER(QueryBugHistorical[generation])",
              "&&QueryBugHistorical[WWSubmittedSeqNbr]=EARLIER(QueryBugHistorical[WWSubmittedSeqNbr])",
              "&&QueryBugHistorical[bugeco.type]=\"bug\"&&QueryBugHistorical[IsRealBug]=1",
              "&&QueryBugHistorical[IsTestChip]=0",
              "&&QueryBugHistorical[status]=\"rejected\"",
              "&&QueryBugHistorical[status_detail] in{\"future_stepping\", \"rejected.future_stepping\"}",
              "&&QueryBugHistorical[IsTrackingorSupport]=0)",
              ",QueryBugHistorical[id])",
              "\t, minx(FILTER(QueryBugHistorical",
              "\t,QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "\t&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "\t&&QueryBugHistorical[WWSubmittedSeqNbr]=EARLIER(QueryBugHistorical[WWSubmittedSeqNbr])",
              "\t&&QueryBugHistorical[bugeco.type]=\"bug\"&&QueryBugHistorical[IsRealBug]=1",
              "\t&&QueryBugHistorical[IsTestChip]=0&&QueryBugHistorical[status]=\"rejected\"",
              "\t&&QueryBugHistorical[status_detail] in{\"future_stepping\", \"rejected.future_stepping\"}",
              "\t&&QueryBugHistorical[IsTrackingorSupport]=0)",
              "\t,QueryBugHistorical[id])",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "isfuturestepping",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "If([status]=\"rejected\"&&[status_detail] in {\"future_stepping\", \"rejected.future_stepping\"},1, 0)"
          },
          {
            "type": "calculated",
            "name": "ww_future_stepping",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "if([tenant]=\"server\"",
              ", minx(filter(QueryBugHistorical",
              ", QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "&&QueryBugHistorical[generation]=EARLIER(QueryBugHistorical[generation])",
              "&&QueryBugHistorical[bugeco.type]=\"bug\"",
              "&&QueryBugHistorical[IsRealBug]=1",
              "&&QueryBugHistorical[IsTestChip]=0",
              "&&[id]=[MinSetIDFutureStepping]",
              "&&[IsFuturestepping]=1",
              "&&QueryBugHistorical[IsTrackingorSupport]=0)",
              ",QueryBugHistorical[ww_submitted_nbr])",
              "\t, minx(filter(QueryBugHistorical",
              "\t, QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "\t&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "\t&&QueryBugHistorical[bugeco.type]=\"bug\"",
              "\t&&QueryBugHistorical[IsRealBug]=1",
              "\t&&QueryBugHistorical[IsTestChip]=0",
              "\t&&[id]=[MinSetIDFutureStepping]",
              "\t&&[IsFuturestepping]=1",
              "\t&&QueryBugHistorical[IsTrackingorSupport]=0)",
              "\t,QueryBugHistorical[ww_submitted_nbr])",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "unique_ww_submitted_nbr",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "if([tenant]=\"server\"",
              ", minx(",
              "filter(QueryBugHistorical",
              ", QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "&&QueryBugHistorical[generation]=EARLIER(QueryBugHistorical[generation])",
              "&&QueryBugHistorical[bugeco.type]=\"bug\"",
              "&&QueryBugHistorical[IsRealBug]=1",
              "&&QueryBugHistorical[IsTestChip]=0",
              "&&QueryBugHistorical[IsTrackingorSupport]=0)",
              ",QueryBugHistorical[ww_submitted_nbr])",
              "\t, minx(filter(QueryBugHistorical",
              "\t, QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "\t&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "\t&&QueryBugHistorical[bugeco.type]=\"bug\"",
              "\t&&QueryBugHistorical[IsRealBug]=1",
              "\t&&QueryBugHistorical[IsTestChip]=0",
              "\t&&QueryBugHistorical[IsTrackingorSupport]=0)",
              "\t,QueryBugHistorical[ww_submitted_nbr])",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "unique_ww_submitted_nbr 1",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "if([tenant]=\"server\"",
              ", minx(",
              "filter(QueryBugHistorical",
              ", QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "&&QueryBugHistorical[generation]=EARLIER(QueryBugHistorical[generation])",
              "&&QueryBugHistorical[bugeco.type]=\"bug\"",
              "&&QueryBugHistorical[IsRealBug]=1",
              "&&QueryBugHistorical[IsTestChip]=0",
              "&&QueryBugHistorical[IsTrackingorSupport]=0)",
              ",QueryBugHistorical[ww_submitted_nbr])",
              "\t, minx(filter(QueryBugHistorical",
              "\t, QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "\t&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "\t&&QueryBugHistorical[bugeco.type]=\"bug\"",
              "\t&&QueryBugHistorical[IsRealBug]=1",
              "\t&&QueryBugHistorical[IsTestChip]=0",
              "\t&&QueryBugHistorical[IsTrackingorSupport]=0)",
              "\t,QueryBugHistorical[ww_submitted_nbr])",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "MinSetIDNotFutureStepping",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "if([tenant]=\"server\"",
              ", minx(FILTER(QueryBugHistorical,QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "&&QueryBugHistorical[generation]=EARLIER(QueryBugHistorical[generation])",
              "&&QueryBugHistorical[WWSubmittedSeqNbr]=EARLIER(QueryBugHistorical[WWSubmittedSeqNbr])",
              "&&QueryBugHistorical[bugeco.type]=\"bug\"",
              "&&QueryBugHistorical[IsRealBug]=1",
              "&&QueryBugHistorical[IsTestChip]=0",
              "&&QueryBugHistorical[IsFuturestepping]=0",
              "&&QueryBugHistorical[IsTrackingorSupport]=0)",
              ",QueryBugHistorical[id])",
              "\t, minx(FILTER(QueryBugHistorical",
              "\t,QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "\t&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "\t&&QueryBugHistorical[WWSubmittedSeqNbr]=EARLIER(QueryBugHistorical[WWSubmittedSeqNbr])",
              "\t&&QueryBugHistorical[bugeco.type]=\"bug\"",
              "\t&&QueryBugHistorical[IsRealBug]=1",
              "\t&&QueryBugHistorical[IsTestChip]=0",
              "\t&&QueryBugHistorical[IsFuturestepping]=0",
              "\t&&QueryBugHistorical[IsTrackingorSupport]=0)",
              "\t,QueryBugHistorical[id])",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ww_not_future_stepping",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "if([tenant]=\"server\"",
              ", minx(filter(QueryBugHistorical, QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "&&QueryBugHistorical[generation]=EARLIER(QueryBugHistorical[generation])",
              "&&QueryBugHistorical[bugeco.type]=\"bug\"",
              "&&QueryBugHistorical[IsRealBug]=1",
              "&&QueryBugHistorical[IsTestChip]=0&&[id]=[MinSetIDNotFutureStepping]",
              "&&[IsFuturestepping]=0",
              "&&QueryBugHistorical[IsTrackingorSupport]=0)",
              ",QueryBugHistorical[ww_submitted_nbr])",
              "\t, minx(filter(QueryBugHistorical",
              "\t, QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "\t&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "\t&&QueryBugHistorical[bugeco.type]=\"bug\"",
              "\t&&QueryBugHistorical[IsRealBug]=1",
              "\t&&QueryBugHistorical[IsTestChip]=0",
              "\t&&[id]=[MinSetIDNotFutureStepping]",
              "\t&&[IsFuturestepping]=0",
              "\t&&QueryBugHistorical[IsTrackingorSupport]=0)",
              "\t,QueryBugHistorical[ww_submitted_nbr])",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "final_ww_future_stepping",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "if(ISBLANK([ww_not_future_stepping]), [ww_future_stepping], [ww_not_future_stepping])"
          },
          {
            "type": "calculated",
            "name": "final_unique_ww_submitted_nbr",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "if(ISBLANK([final_ww_future_stepping]), [unique_ww_submitted_nbr], [final_ww_future_stepping])"
          },
          {
            "type": "calculated",
            "name": "MinSetID",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "if([tenant]=\"server\"",
              ", minx(",
              "FILTER(QueryBugHistorical",
              ",QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "&&QueryBugHistorical[generation]=EARLIER(QueryBugHistorical[generation])",
              "&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "&&QueryBugHistorical[WWSubmittedSeqNbr]=EARLIER(QueryBugHistorical[WWSubmittedSeqNbr])&&QueryBugHistorical[bugeco.type]=\"bug\"",
              "&&QueryBugHistorical[IsRealBug]=1",
              "&&QueryBugHistorical[IsTestChip]=0",
              "&&QueryBugHistorical[IsTrackingorSupport]=0",
              ")",
              ",QueryBugHistorical[id])",
              "\t, minx(",
              "\tFILTER(QueryBugHistorical",
              "\t,QueryBugHistorical[Lineage_ID_Unique]=EARLIER(QueryBugHistorical[Lineage_ID_Unique])",
              "\t&&QueryBugHistorical[IPFamily]=EARLIER(QueryBugHistorical[IPFamily])",
              "\t&&QueryBugHistorical[WWSubmittedSeqNbr]=EARLIER(QueryBugHistorical[WWSubmittedSeqNbr])",
              "\t&&QueryBugHistorical[bugeco.type]=\"bug\"",
              "\t&&QueryBugHistorical[IsRealBug]=1",
              "\t&&QueryBugHistorical[IsTestChip]=0",
              "\t&&QueryBugHistorical[IsTrackingorSupport]=0",
              "\t)",
              "\t,QueryBugHistorical[id])",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "FinalMinSetIDFutureStepping",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if(ISBLANK([MinSetIDNotFutureStepping]), [MinSetIDFutureStepping], [MinSetIDNotFutureStepping])"
          },
          {
            "type": "calculated",
            "name": "MinSetIDFinal",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if(ISBLANK(QueryBugHistorical[MinSetIDFutureStepping]), [MinSetID], [FinalMinSetIDFutureStepping])"
          },
          {
            "type": "calculated",
            "name": "IsUnique",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if([ww_submitted_nbr]=[final_unique_ww_submitted_nbr]&&[id]=[MinSetIDFinal], 1, 0)"
          },
          {
            "type": "calculated",
            "name": "IsActiveIP",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if(ISBLANK(RELATED(QueryCIGActiveIP[IsActiveIP])), 1, RELATED(QueryCIGActiveIP[IsActiveIP]))"
          },
          {
            "type": "calculated",
            "name": "Internal vs. SOC Filter",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "IF(CALCULATE(COUNT(QueryBugHistorical[id]),",
              "QueryBugHistorical[IsRealBug]=1,",
              "QueryBugHistorical[bugeco.type]=\"bug\", ",
              "QueryBugHistorical[IsUnique]=1,",
              "QueryBugHistorical[IsActiveIP]=1, ",
              "QueryBugHistorical[org_is_found_bySoc] in {\"HW PreSiBug Found by IP\",\"SW/FW PreSiBug Found by IP\",\"SW/FW PostSiBug Found by IP\",\"HW PostSiBug Found by TestChip\",",
              "    \"HW PreSiBug Found by TestChip\",\t\"SW/FW PostSiBug Found by TestChip\",\"SW/FW PreSiBug Found by TestChip\"",
              "}",
              ",QueryBugHistorical[IsTrackingorSupport]=0) > 0, 1, 0)"
            ]
          },
          {
            "type": "calculated",
            "name": "suborg",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " RELATED(QueryGladius[devsuborg])"
          },
          {
            "type": "calculated",
            "name": "Calculated Column 1",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "if([org_is_found_bySoc] in { \"HW PreSiBug Found by IP\", \"SW/FW PreSiBug Found by IP\",\"SW/FW PostSiBug Found by IP\"}, \"IP\", [Soc Die])"
          },
          {
            "type": "calculated",
            "name": "repo_mod_in_ww",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF([ww] = value(left([ww_repo_modified_date], 4) & RIGHT([ww_repo_modified_date], 2)), [ww], blank())"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_future_date",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ww_future_date]"
          },
          {
            "type": "calculated",
            "name": "future_in_ww",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "expression": "IFERROR( VALUE( LEFT([ww_future_date], 4) & RIGHT([ww_future_date], 2)), blank())",
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "status_order",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "RELATED(status_order[status_order])"
          },
          {
            "type": "calculated",
            "name": "ccb_prq_status",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(ISBLANK([ccb_prq_gating]) || len([ccb_prq_gating]) < 1, \"tbd\", [ccb_prq_gating])"
          },
          {
            "type": "calculated",
            "name": "ww_future_date_nbr",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "expression": "IFERROR(value(LEFT([ww_future_date], 4)&RIGHT([ww_future_date], 2)), blank())",
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "ww_uncoded_nbr",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "IF(ISBLANK(QueryBugHistorical[ww_repo_modified_nbr]), [ww_closed_nbr], [ww_repo_modified_nbr]) // if the repo_mod is blank then take the closed date, else take repo_mod date"
          },
          {
            "type": "calculated",
            "name": "Bug_id",
            "dataType": "string",
            "isDataTypeInferred": false,
            "expression": "[id]"
          },
          {
            "type": "calculated",
            "name": "ww_text",
            "dataType": "string",
            "isDataTypeInferred": false,
            "expression": "[ww]"
          },
          {
            "type": "calculated",
            "name": "ww_updated_date_text",
            "dataType": "string",
            "isDataTypeInferred": false,
            "expression": "[ww_updated_date]"
          },
          {
            "type": "calculated",
            "name": "ccb_approved_ww",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(NOT(ISBLANK([ww_approved_date])), [ww_approved_date], IF(NOT(ISBLANK([ww_repo_modified_date])), [ww_repo_modified_date], IF(NOT(ISBLANK([ww_closed_date])), [ww_closed_date], blank())))"
          },
          {
            "type": "calculated",
            "name": "ccb_rejected_ww",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(NOT(ISBLANK([ww_closed_date])), [ww_closed_date], IF(NOT(ISBLANK([ww_future_date])), [ww_future_date], blank()))"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 3",
            "source": {
              "type": "calculated",
              "expression": [
                "UNION(",
                "\tSELECTCOLUMNS(",
                "\t\tQueryBugSIP",
                "\t\t,\"tenant\",QueryBugSIP[tenant]",
                "        ,\"project\",QueryBugSIP[project]",
                "        ,\"milestone\",QueryBugSIP[milestone]",
                "        ,\"lineage_final\",QueryBugSIP[lineage_final]",
                "        ,\"IsRealBug\",QueryBugSIP[IsRealBug]",
                "\t\t,\"ww\",QueryBugSIP[ww]",
                "\t\t,\"ww_future_date\",QueryBugSIP[ww_future_date]",
                "\t\t,\"family\",QueryBugSIP[currentwwfamily]",
                "\t\t,\"ip_supplier\",QueryBugSIP[currentwwip_supplier]",
                "\t\t,\"release\",QueryBugSIP[currentwwrelease]",
                "\t\t,\"release_affected\",QueryBugSIP[release_affected]",
                "\t\t,\"tag\",QueryBugSIP[tag]",
                "\t\t,\"status\",QueryBugSIP[status]",
                "\t\t,\"status_detail\",QueryBugSIP[status_detail]",
                "\t\t,\"SoC Die\",QueryBugSIP[currentwwSoCDie]",
                "\t\t,\"id\",QueryBugSIP[id]",
                "\t\t,\"lineage\",QueryBugSIP[lineage]",
                "\t\t,\"title\",QueryBugSIP[title]",
                "\t\t,\"ww_submitted_date\",QueryBugSIP[ww_submitted_date]",
                "\t\t,\"submitted_date\",QueryBugSIP[submitted_date]",
                "\t\t,\"updated_date\",QueryBugSIP[updated_date]",
                "\t\t,\"ww_updated_date\",QueryBugSIP[ww_updated_date]",
                "\t\t,\"bugeco.env_found\",QueryBugSIP[bugeco.env_found]",
                "\t\t,\"bugeco.team_found\",QueryBugSIP[bugeco.team_found]",
                "\t\t,\"bug_category\",QueryBugSIP[currentwwbug_category]",
                "\t\t,\"from_tenant\",QueryBugSIP[from_tenant]",
                "\t\t,\"from_subject\",QueryBugSIP[from_subject]",
                "\t\t,\"bugeco.type\",QueryBugSIP[bugeco.type]",
                "\t\t,\"component\",QueryBugSIP[component]",
                "\t\t,\"url\",QueryBugSIP[url]",
                "\t\t,\"ccb_change_scope\",QueryBugSIP[ccb_change_scope]",
                "\t\t,\"ccb_eta\",QueryBugSIP[ccb_eta]",
                "\t\t,\"ccb_order\",QueryBugSIP[ccb_order]",
                "\t\t,\"ccb_prq_gating\",QueryBugSIP[ccb_prq_gating]",
                "\t\t,\"ccb_status\",QueryBugSIP[ccb_status]",
                "\t\t,\"ccb_wontfix_action\",QueryBugSIP[ccb_wontfix_action]",
                "\t\t,\"ccb_wontfix_reason\",QueryBugSIP[ccb_wontfix_reason]\t\t",
                "                ,\"ccb_workaround\",QueryBugSIP[ccb_workaround]",
                "\t\t,\"ccb_proposal\",QueryBugSIP[ccb_proposal]",
                "\t\t,\"ccb_mode\",QueryBugSIP[ccb_mode]",
                "\t\t,\"ccb_disposition_type\",QueryBugSIP[ccb_disposition_type]",
                "\t\t,\"ww_defined_date\",QueryBugSIP[ww_defined_date]",
                "\t\t,\"ww_approved_date\",QueryBugSIP[ww_approved_date]",
                "\t\t,\"ww_predrop_closure_date_sdg\",QueryBugSIP[ww_predrop_closure_date_sdg]",
                "\t\t,\"currentww\",QueryBugSIP[currentww]",
                "\t\t,\"currentmonth\",QueryBugSIP[currentmonth]",
                "\t\t,\"currentyear\",QueryBugSIP[currentyear]",
                "\t\t,\"subip_family\",QueryBugSIP[subip_family]",
                "\t\t,\"subip_supplier\",QueryBugSIP[subip_supplier]",
                "\t\t,\"bugeco.release_found\",QueryBugSIP[bugeco.release_found]",
                "\t\t,\"supplier_org\",QueryBugSIP[supplier_org]",
                "\t\t,\"is_PreSiPostSi\",QueryBugSIP[is_PreSiPostSi]",
                "\t\t,\"org_is_found_bySoc\",QueryBugSIP[org_is_found_bySoc]",
                "\t\t,\"sub_bugcategory\",QueryBugSIP[currentwwsub_bugcategory]",
                "\t\t,\"retro_status\",QueryBugSIP[retro_status]",
                "\t\t,\"retro_ip_escape\",QueryBugSIP[retro_ip_escape]",
                "\t\t,\"retro_global_learning\",QueryBugSIP[retro_global_learning]",
                "\t\t,\"retro_global_action\",QueryBugSIP[retro_global_action]\t\t",
                "\t\t,\"retro_analysis\",QueryBugSIP[retro_analysis]",
                "\t\t,\"retro_learnings\",QueryBugSIP[retro_learnings]",
                "\t\t,\"owner\",QueryBugSIP[owner]",
                "\t\t,\"ww_closed_date\",QueryBugSIP[ww_closed_date]",
                "\t\t,\"ww_repo_modified_date\",QueryBugSIP[ww_repo_modified_date]",
                "\t\t,\"generation\",QueryBugSIP[generation]",
                "\t\t,\"ww_sla_response_date\",QueryBugSIP[ww_sla_response_date]",
                "\t\t,\"ww_sla_resolution_date\",QueryBugSIP[ww_sla_resolution_date]",
                "\t\t,\"sla_response_date\",QueryBugSIP[sla_response_date]",
                "\t\t,\"sla_resolution_date\",QueryBugSIP[sla_resolution_date]",
                "\t\t,\"sla_response_met\",QueryBugSIP[sla_response_met]",
                "\t\t,\"predrop_ww\",QueryBugSIP[predrop_ww]",
                "\t\t,\"ccb_meeting\",QueryBugSIP[ccb_meeting]",
                "\t\t,\"gate\",QueryBugSIP[gate]",
                "\t\t,\"reason\",QueryBugSIP[reason]",
                "\t\t,\"open_age\",QueryBugSIP[open_age]",
                "\t\t,\"unvalidated_age\",QueryBugSIP[unvalidated_age]",
                "\t\t,\"validator\",QueryBugSIP[validator]",
                "\t\t,\"submitted_by\",QueryBugSIP[submitted_by]",
                "        , \"priority\", QueryBugSIP[priority]",
                "        , \"repo_modified_date\", QueryBugSIP[repo_modified_date]",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\tQueryBugHIP",
                "\t\t,\"tenant\",QueryBugHIP[tenant]",
                "        ,\"project\",QueryBugHIP[project]",
                "        ,\"milestone\",QueryBugHIP[milestone]",
                "        ,\"lineage_final\",QueryBugHIP[lineage_final]",
                "        ,\"IsRealBug\",QueryBugHIP[IsRealBug]",
                "\t\t,\"ww\",QueryBugHIP[ww]",
                "\t\t,\"ww_future_date\",QueryBugHIP[ww_future_date]",
                "\t\t,\"family\",QueryBugHIP[currentwwfamily]",
                "\t\t,\"ip_supplier\",QueryBugHIP[currentwwip_supplier]",
                "\t\t,\"release\",QueryBugHIP[currentwwrelease]",
                "\t\t,\"release_affected\",QueryBugHIP[release_affected]",
                "\t\t,\"tag\",QueryBugHIP[tag]",
                "\t\t,\"status\",QueryBugHIP[status]",
                "\t\t,\"status_detail\",QueryBugHIP[status_detail]",
                "\t\t,\"SoC Die\",QueryBugHIP[currentwwSoCDie]",
                "",
                "\t\t,\"id\",QueryBugHIP[id]",
                "\t\t,\"lineage\",QueryBugHIP[lineage]",
                "\t\t,\"title\",QueryBugHIP[title]",
                "\t\t,\"ww_submitted_date\",QueryBugHIP[ww_submitted_date]",
                "\t\t,\"submitted_date\",QueryBugHIP[submitted_date]",
                "\t\t,\"updated_date\",QueryBugHIP[updated_date]",
                "\t\t,\"ww_updated_date\",QueryBugHIP[ww_updated_date]",
                "\t\t,\"bugeco.env_found\",QueryBugHIP[bugeco.env_found]",
                "\t\t,\"bugeco.team_found\",QueryBugHIP[bugeco.team_found]",
                "\t\t,\"bug_category\",QueryBugHIP[currentwwbug_category]",
                "\t\t,\"from_tenant\",QueryBugHIP[from_tenant]",
                "\t\t,\"from_subject\",QueryBugHIP[from_subject]",
                "\t\t,\"bugeco.type\",QueryBugHIP[bugeco.type]",
                "\t\t,\"component\",QueryBugHIP[component]",
                "\t\t,\"url\",QueryBugHIP[url]",
                "\t\t,\"ccb_change_scope\",QueryBugHIP[ccb_change_scope]",
                "\t\t,\"ccb_eta\",QueryBugHIP[ccb_eta]",
                "\t\t,\"ccb_order\",QueryBugHIP[ccb_order]",
                "\t\t,\"ccb_prq_gating\",QueryBugHIP[ccb_prq_gating]",
                "\t\t,\"ccb_status\",QueryBugHIP[ccb_status]",
                "\t\t,\"ccb_wontfix_action\",QueryBugHIP[ccb_wontfix_action]",
                "\t\t,\"ccb_wontfix_reason\",QueryBugHIP[ccb_wontfix_reason]\t\t",
                "",
                "                ,\"ccb_workaround\",QueryBugHIP[ccb_workaround]",
                "\t\t,\"ccb_proposal\",QueryBugHIP[ccb_proposal]",
                "\t\t,\"ccb_mode\",QueryBugHIP[ccb_mode]",
                "\t\t,\"ccb_disposition_type\",QueryBugHIP[ccb_disposition_type]",
                "\t\t,\"ww_defined_date\",QueryBugHIP[ww_defined_date]",
                "\t\t,\"ww_approved_date\",QueryBugHIP[ww_approved_date]",
                "\t\t,\"ww_predrop_closure_date_sdg\",QueryBugHIP[ww_predrop_closure_date_sdg]",
                "",
                "\t\t,\"currentww\",QueryBugHIP[currentww]",
                "\t\t,\"currentmonth\",QueryBugHIP[currentmonth]",
                "\t\t,\"currentyear\",QueryBugHIP[currentyear]",
                "\t\t,\"subip_family\",QueryBugHIP[subip_family]",
                "\t\t,\"subip_supplier\",QueryBugHIP[subip_supplier]",
                "\t\t,\"bugeco.release_found\",QueryBugHIP[bugeco.release_found]",
                "\t\t,\"supplier_org\",QueryBugHIP[supplier_org]",
                "\t\t,\"is_PreHIPostSi\",QueryBugHIP[is_PreSiPostSi]",
                "\t\t,\"org_is_found_bySoc\",QueryBugHIP[org_is_found_bySoc]",
                "\t\t,\"sub_bugcategory\",QueryBugHIP[currentwwsub_bugcategory]",
                "\t\t,\"retro_status\",QueryBugHIP[retro_status]",
                "\t\t,\"retro_ip_escape\",QueryBugHIP[retro_ip_escape]",
                "\t\t,\"retro_global_learning\",QueryBugHIP[retro_global_learning]",
                "\t\t,\"retro_global_action\",QueryBugHIP[retro_global_action]\t\t",
                "",
                "\t\t,\"retro_analysis\",QueryBugHIP[retro_analysis]",
                "\t\t,\"retro_learnings\",QueryBugHIP[retro_learnings]",
                "\t\t,\"owner\",QueryBugHIP[owner]",
                "\t\t,\"ww_closed_date\",QueryBugHIP[ww_closed_date]",
                "\t\t,\"ww_repo_modified_date\",QueryBugHIP[ww_repo_modified_date]",
                "\t\t,\"generation\",QueryBugHIP[generation]",
                "\t\t,\"ww_sla_response_date\",QueryBugHIP[ww_sla_response_date]",
                "\t\t,\"ww_sla_resolution_date\",QueryBugHIP[ww_sla_resolution_date]",
                "\t\t,\"sla_response_date\",QueryBugHIP[sla_response_date]",
                "\t\t,\"sla_resolution_date\",QueryBugHIP[sla_resolution_date]",
                "\t\t,\"sla_response_met\",QueryBugHIP[sla_response_met]",
                "\t\t,\"predrop_ww\",QueryBugHIP[predrop_ww]",
                "\t\t,\"ccb_meeting\",QueryBugHIP[ccb_meeting]",
                "\t\t,\"gate\",QueryBugHIP[gate]",
                "\t\t,\"reason\",QueryBugHIP[reason]",
                "\t\t,\"open_age\",QueryBugHIP[open_age]",
                "\t\t,\"unvalidated_age\",QueryBugHIP[unvalidated_age]",
                "\t\t,\"validator\",QueryBugHIP[validator]",
                "\t\t,\"submitted_by\",QueryBugHIP[submitted_by]",
                "        , \"priority\", QueryBugHIP[priority]",
                "        , \"repo_modified_date\", QueryBugHIP[repo_modified_date]",
                "",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\tQueryBugGen3",
                "\t\t,\"tenant\",QueryBugGen3[tenant]",
                "        ,\"project\",QueryBugGen3[project]",
                "        ,\"milestone\",QueryBugGen3[milestone]",
                "        ,\"lineage_final\",QueryBugGen3[lineage_final]",
                "        ,\"IsRealBug\",QueryBugGen3[IsRealBug]",
                "\t\t,\"ww\",QueryBugGen3[ww]",
                "\t\t,\"ww_future_date\",QueryBugGen3[ww_future_date]",
                "\t\t,\"family\",QueryBugGen3[currentwwfamily]",
                "\t\t,\"ip_supplier\",QueryBugGen3[currentwwip_supplier]",
                "\t\t,\"release\",QueryBugGen3[currentwwrelease]",
                "\t\t,\"release_affected\",QueryBugGen3[release_affected]",
                "\t\t,\"tag\",QueryBugGen3[tag]",
                "\t\t,\"status\",QueryBugGen3[status]",
                "\t\t,\"status_detail\",QueryBugGen3[status_detail]",
                "\t\t,\"SoC Die\",QueryBugGen3[currentwwSoCDie]",
                "",
                "\t\t,\"id\",QueryBugGen3[id]",
                "\t\t,\"lineage\",QueryBugGen3[lineage]",
                "\t\t,\"title\",QueryBugGen3[title]",
                "\t\t,\"ww_submitted_date\",QueryBugGen3[ww_submitted_date]",
                "\t\t,\"submitted_date\",QueryBugGen3[submitted_date]",
                "\t\t,\"updated_date\",QueryBugGen3[updated_date]",
                "\t\t,\"ww_updated_date\",QueryBugGen3[ww_updated_date]",
                "\t\t,\"bugeco.env_found\",QueryBugGen3[bugeco.env_found]",
                "\t\t,\"bugeco.team_found\",QueryBugGen3[bugeco.team_found]",
                "\t\t,\"bug_category\",QueryBugGen3[currentwwbug_category]",
                "\t\t,\"from_tenant\",QueryBugGen3[from_tenant]",
                "\t\t,\"from_subject\",QueryBugGen3[from_subject]",
                "\t\t,\"bugeco.type\",QueryBugGen3[bugeco.type]",
                "\t\t,\"component\",QueryBugGen3[component]",
                "\t\t,\"url\",QueryBugGen3[url]",
                "\t\t,\"ccb_change_scope\",QueryBugGen3[ccb_change_scope]",
                "\t\t,\"ccb_eta\",QueryBugGen3[ccb_eta]",
                "\t\t,\"ccb_order\",QueryBugGen3[ccb_order]",
                "\t\t,\"ccb_prq_gating\",QueryBugGen3[ccb_prq_gating]",
                "\t\t,\"ccb_status\",QueryBugGen3[ccb_status]",
                "\t\t,\"ccb_wontfix_action\",QueryBugGen3[ccb_wontfix_action]",
                "\t\t,\"ccb_wontfix_reason\",QueryBugGen3[ccb_wontfix_reason]\t\t",
                "",
                "                ,\"ccb_workaround\",QueryBugGen3[ccb_workaround]",
                "\t\t,\"ccb_proposal\",QueryBugGen3[ccb_proposal]",
                "\t\t,\"ccb_mode\",QueryBugGen3[ccb_mode]",
                "\t\t,\"ccb_disposition_type\",QueryBugGen3[ccb_disposition_type]",
                "\t\t,\"ww_defined_date\",QueryBugGen3[ww_defined_date]",
                "\t\t,\"ww_approved_date\",QueryBugGen3[ww_approved_date]",
                "\t\t,\"ww_predrop_closure_date_sdg\",QueryBugGen3[ww_predrop_closure_date_sdg]",
                "",
                "\t\t,\"currentww\",QueryBugGen3[currentww]",
                "\t\t,\"currentmonth\",QueryBugGen3[currentmonth]",
                "\t\t,\"currentyear\",QueryBugGen3[currentyear]",
                "\t\t,\"subip_family\",QueryBugGen3[subip_family]",
                "\t\t,\"subip_supplier\",QueryBugGen3[subip_supplier]",
                "\t\t,\"bugeco.release_found\",QueryBugGen3[bugeco.release_found]",
                "\t\t,\"supplier_org\",QueryBugGen3[supplier_org]",
                "\t\t,\"is_PreHIPostSi\",QueryBugGen3[is_PreSiPostSi]",
                "\t\t,\"org_is_found_bySoc\",QueryBugGen3[org_is_found_bySoc]",
                "\t\t,\"sub_bugcategory\",QueryBugGen3[currentwwsub_bugcategory]",
                "\t\t,\"retro_status\",QueryBugGen3[retro_status]",
                "\t\t,\"retro_ip_escape\",QueryBugGen3[retro_ip_escape]",
                "\t\t,\"retro_global_learning\",QueryBugGen3[retro_global_learning]",
                "\t\t,\"retro_global_action\",QueryBugGen3[retro_global_action]\t\t",
                "",
                "\t\t,\"retro_analysis\",QueryBugGen3[retro_analysis]",
                "\t\t,\"retro_learnings\",QueryBugGen3[retro_learnings]",
                "\t\t,\"owner\",QueryBugGen3[owner]",
                "\t\t,\"ww_closed_date\",QueryBugGen3[ww_closed_date]",
                "\t\t,\"ww_repo_modified_date\",QueryBugGen3[ww_repo_modified_date]",
                "\t\t,\"generation\",QueryBugGen3[generation]",
                "\t\t,\"ww_sla_response_date\",QueryBugGen3[ww_sla_response_date]",
                "\t\t,\"ww_sla_resolution_date\",QueryBugGen3[ww_sla_resolution_date]",
                "\t\t,\"sla_response_date\",QueryBugGen3[sla_response_date]",
                "\t\t,\"sla_resolution_date\",QueryBugGen3[sla_resolution_date]",
                "\t\t,\"sla_response_met\",QueryBugGen3[sla_response_met]",
                "\t\t,\"predrop_ww\",QueryBugGen3[predrop_ww]",
                "\t\t,\"ccb_meeting\",QueryBugGen3[ccb_meeting]",
                "\t\t,\"gate\",QueryBugGen3[gate]",
                "\t\t,\"reason\",QueryBugGen3[reason]",
                "\t\t,\"open_age\",QueryBugGen3[open_age]",
                "\t\t,\"unvalidated_age\",QueryBugGen3[unvalidated_age]",
                "\t\t,\"validator\",QueryBugGen3[validator]",
                "\t\t,\"submitted_by\",QueryBugGen3[submitted_by]",
                "        , \"priority\", QueryBugGen3[priority]",
                "        , \"repo_modified_date\", QueryBugGen3[repo_modified_date]",
                "",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\tQueryBugWave1and2",
                "\t\t,\"tenant\",QueryBugWave1and2[tenant]",
                "        ,\"project\",QueryBugWave1and2[project]",
                "        ,\"milestone\",QueryBugWave1and2[milestone]",
                "        ,\"lineage_final\",QueryBugWave1and2[lineage_final]",
                "        ,\"IsRealBug\",QueryBugWave1and2[IsRealBug]",
                "\t\t,\"ww\",QueryBugWave1and2[ww]",
                "\t\t,\"ww_future_date\",QueryBugWave1and2[ww_future_date]",
                "\t\t,\"family\",QueryBugWave1and2[currentwwfamily]",
                "\t\t,\"ip_supplier\",QueryBugWave1and2[currentwwip_supplier]",
                "\t\t,\"release\",QueryBugWave1and2[currentwwrelease]",
                "\t\t,\"release_affected\",QueryBugWave1and2[release_affected]",
                "\t\t,\"tag\",QueryBugWave1and2[tag]",
                "\t\t,\"status\",QueryBugWave1and2[status]",
                "\t\t,\"status_detail\",QueryBugWave1and2[status_detail]",
                "\t\t,\"SoC Die\",QueryBugWave1and2[currentwwSoCDie]",
                "",
                "\t\t,\"id\",QueryBugWave1and2[id]",
                "\t\t,\"lineage\",QueryBugWave1and2[lineage]",
                "\t\t,\"title\",QueryBugWave1and2[title]",
                "\t\t,\"ww_submitted_date\",QueryBugWave1and2[ww_submitted_date]",
                "\t\t,\"submitted_date\",QueryBugWave1and2[submitted_date]",
                "\t\t,\"updated_date\",QueryBugWave1and2[updated_date]",
                "\t\t,\"ww_updated_date\",QueryBugWave1and2[ww_updated_date]",
                "\t\t,\"bugeco.env_found\",QueryBugWave1and2[bugeco.env_found]",
                "\t\t,\"bugeco.team_found\",QueryBugWave1and2[bugeco.team_found]",
                "\t\t,\"bug_category\",QueryBugWave1and2[currentwwbug_category]",
                "\t\t,\"from_tenant\",QueryBugWave1and2[from_tenant]",
                "\t\t,\"from_subject\",QueryBugWave1and2[from_subject]",
                "\t\t,\"bugeco.type\",QueryBugWave1and2[bugeco.type]",
                "\t\t,\"component\",QueryBugWave1and2[component]",
                "\t\t,\"url\",QueryBugWave1and2[url]",
                "\t\t,\"ccb_change_scope\",QueryBugWave1and2[ccb_change_scope]",
                "\t\t,\"ccb_eta\",QueryBugWave1and2[ccb_eta]",
                "\t\t,\"ccb_order\",QueryBugWave1and2[ccb_order]",
                "\t\t,\"ccb_prq_gating\",QueryBugWave1and2[ccb_prq_gating]",
                "\t\t,\"ccb_status\",QueryBugWave1and2[ccb_status]",
                "\t\t,\"ccb_wontfix_action\",QueryBugWave1and2[ccb_wontfix_action]",
                "\t\t,\"ccb_wontfix_reason\",QueryBugWave1and2[ccb_wontfix_reason]\t\t",
                "",
                "                ,\"ccb_workaround\",QueryBugWave1and2[ccb_workaround]",
                "\t\t,\"ccb_proposal\",QueryBugWave1and2[ccb_proposal]",
                "\t\t,\"ccb_mode\",QueryBugWave1and2[ccb_mode]",
                "\t\t,\"ccb_disposition_type\",QueryBugWave1and2[ccb_disposition_type]",
                "\t\t,\"ww_defined_date\",QueryBugWave1and2[ww_defined_date]",
                "\t\t,\"ww_approved_date\",QueryBugWave1and2[ww_approved_date]",
                "\t\t,\"ww_predrop_closure_date_sdg\",QueryBugWave1and2[ww_predrop_closure_date_sdg]",
                "",
                "\t\t,\"currentww\",QueryBugWave1and2[currentww]",
                "\t\t,\"currentmonth\",QueryBugWave1and2[currentmonth]",
                "\t\t,\"currentyear\",QueryBugWave1and2[currentyear]",
                "\t\t,\"subip_family\",QueryBugWave1and2[subip_family]",
                "\t\t,\"subip_supplier\",QueryBugWave1and2[subip_supplier]",
                "\t\t,\"bugeco.release_found\",QueryBugWave1and2[bugeco.release_found]",
                "\t\t,\"supplier_org\",QueryBugWave1and2[supplier_org]",
                "\t\t,\"is_PreHIPostSi\",QueryBugWave1and2[is_PreSiPostSi]",
                "\t\t,\"org_is_found_bySoc\",QueryBugWave1and2[org_is_found_bySoc]",
                "\t\t,\"sub_bugcategory\",QueryBugWave1and2[currentwwsub_bugcategory]",
                "\t\t,\"retro_status\",QueryBugWave1and2[retro_status]",
                "\t\t,\"retro_ip_escape\",QueryBugWave1and2[retro_ip_escape]",
                "\t\t,\"retro_global_learning\",QueryBugWave1and2[retro_global_learning]",
                "\t\t,\"retro_global_action\",QueryBugWave1and2[retro_global_action]\t\t",
                "",
                "\t\t,\"retro_analysis\",QueryBugWave1and2[retro_analysis]",
                "\t\t,\"retro_learnings\",QueryBugWave1and2[retro_learnings]",
                "\t\t,\"owner\",QueryBugWave1and2[owner]",
                "\t\t,\"ww_closed_date\",QueryBugWave1and2[ww_closed_date]",
                "\t\t,\"ww_repo_modified_date\",QueryBugWave1and2[ww_repo_modified_date]",
                "\t\t,\"generation\",QueryBugWave1and2[generation]",
                "\t\t,\"ww_sla_response_date\",QueryBugWave1and2[ww_sla_response_date]",
                "\t\t,\"ww_sla_resolution_date\",QueryBugWave1and2[ww_sla_resolution_date]",
                "\t\t,\"sla_response_date\",QueryBugWave1and2[sla_response_date]",
                "\t\t,\"sla_resolution_date\",QueryBugWave1and2[sla_resolution_date]",
                "\t\t,\"sla_response_met\",QueryBugWave1and2[sla_response_met]",
                "\t\t,\"predrop_ww\",QueryBugWave1and2[predrop_ww]",
                "\t\t,\"ccb_meeting\",QueryBugWave1and2[ccb_meeting]",
                "\t\t,\"gate\",QueryBugWave1and2[gate]",
                "\t\t,\"reason\",QueryBugWave1and2[reason]",
                "\t\t,\"open_age\",QueryBugWave1and2[open_age]",
                "\t\t,\"unvalidated_age\",QueryBugWave1and2[unvalidated_age]",
                "\t\t,\"validator\",QueryBugWave1and2[validator]",
                "\t\t,\"submitted_by\",QueryBugWave1and2[submitted_by]",
                "        , \"priority\", QueryBugWave1and2[priority]",
                "        , \"repo_modified_date\", QueryBugWave1and2[repo_modified_date]",
                "",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\tQueryBugWave3HW",
                "\t\t,\"tenant\",QueryBugWave3HW[tenant]",
                "\t\t,\"project\",QueryBugWave3HW[project]",
                "\t\t,\"milestone\",QueryBugWave3HW[milestone]",
                "\t\t,\"lineage_final\",QueryBugWave3HW[lineage_final]",
                "\t\t,\"IsRealBug\",QueryBugWave3HW[IsRealBug]",
                "\t\t,\"ww\",QueryBugWave3HW[ww]",
                "\t\t,\"ww_future_date\",QueryBugWave3HW[ww_future_date]",
                "\t\t,\"family\",QueryBugWave3HW[currentwwfamily]",
                "\t\t,\"ip_supplier\",QueryBugWave3HW[currentwwip_supplier]",
                "\t\t,\"release\",QueryBugWave3HW[currentwwrelease]",
                "\t\t,\"release_affected\",QueryBugWave3HW[release_affected]",
                "\t\t,\"tag\",QueryBugWave3HW[tag]",
                "\t\t,\"status\",QueryBugWave3HW[status]",
                "\t\t,\"status_detail\",QueryBugWave3HW[status_detail]",
                "\t\t,\"SoC Die\",QueryBugWave3HW[currentwwSoCDie]",
                "",
                "\t\t,\"id\",QueryBugWave3HW[id]",
                "\t\t,\"lineage\",QueryBugWave3HW[lineage]",
                "\t\t,\"title\",QueryBugWave3HW[title]",
                "\t\t,\"ww_submitted_date\",QueryBugWave3HW[ww_submitted_date]",
                "\t\t,\"submitted_date\",QueryBugWave3HW[submitted_date]",
                "\t\t,\"updated_date\",QueryBugWave3HW[updated_date]",
                "\t\t,\"ww_updated_date\",QueryBugWave3HW[ww_updated_date]",
                "\t\t,\"bugeco.env_found\",QueryBugWave3HW[bugeco.env_found]",
                "\t\t,\"bugeco.team_found\",QueryBugWave3HW[bugeco.team_found]",
                "\t\t,\"bug_category\",QueryBugWave3HW[currentwwbug_category]",
                "\t\t,\"from_tenant\",QueryBugWave3HW[from_tenant]",
                "\t\t,\"from_subject\",QueryBugWave3HW[from_subject]",
                "\t\t,\"bugeco.type\",QueryBugWave3HW[bugeco.type]",
                "\t\t,\"component\",QueryBugWave3HW[component]",
                "\t\t,\"url\",QueryBugWave3HW[url]",
                "\t\t,\"ccb_change_scope\",QueryBugWave3HW[ccb_change_scope]",
                "\t\t,\"ccb_eta\",QueryBugWave3HW[ccb_eta]",
                "\t\t,\"ccb_order\",QueryBugWave3HW[ccb_order]",
                "\t\t,\"ccb_prq_gating\",QueryBugWave3HW[ccb_prq_gating]",
                "\t\t,\"ccb_status\",QueryBugWave3HW[ccb_status]",
                "\t\t,\"ccb_wontfix_action\",QueryBugWave3HW[ccb_wontfix_action]",
                "\t\t,\"ccb_wontfix_reason\",QueryBugWave3HW[ccb_wontfix_reason]\t\t",
                "",
                "                ,\"ccb_workaround\",QueryBugWave3HW[ccb_workaround]",
                "\t\t,\"ccb_proposal\",QueryBugWave3HW[ccb_proposal]",
                "\t\t,\"ccb_mode\",QueryBugWave3HW[ccb_mode]",
                "\t\t,\"ccb_disposition_type\",QueryBugWave3HW[ccb_disposition_type]",
                "\t\t,\"ww_defined_date\",QueryBugWave3HW[ww_defined_date]",
                "\t\t,\"ww_approved_date\",QueryBugWave3HW[ww_approved_date]",
                "\t\t,\"ww_predrop_closure_date_sdg\",QueryBugWave3HW[ww_predrop_closure_date_sdg]",
                "",
                "\t\t,\"currentww\",QueryBugWave3HW[currentww]",
                "\t\t,\"currentmonth\",QueryBugWave3HW[currentmonth]",
                "\t\t,\"currentyear\",QueryBugWave3HW[currentyear]",
                "\t\t,\"subip_family\",QueryBugWave3HW[subip_family]",
                "\t\t,\"subip_supplier\",QueryBugWave3HW[subip_supplier]",
                "\t\t,\"bugeco.release_found\",QueryBugWave3HW[bugeco.release_found]",
                "\t\t,\"supplier_org\",QueryBugWave3HW[supplier_org]",
                "\t\t,\"is_PreHIPostSi\",QueryBugWave3HW[is_PreSiPostSi]",
                "\t\t,\"org_is_found_bySoc\",QueryBugWave3HW[org_is_found_bySoc]",
                "\t\t,\"sub_bugcategory\",QueryBugWave3HW[currentwwsub_bugcategory]",
                "\t\t,\"retro_status\",QueryBugWave3HW[retro_status]",
                "\t\t,\"retro_ip_escape\",QueryBugWave3HW[retro_ip_escape]",
                "\t\t,\"retro_global_learning\",QueryBugWave3HW[retro_global_learning]",
                "\t\t,\"retro_global_action\",QueryBugWave3HW[retro_global_action]\t\t",
                "",
                "\t\t,\"retro_analysis\",QueryBugWave3HW[retro_analysis]",
                "\t\t,\"retro_learnings\",QueryBugWave3HW[retro_learnings]",
                "\t\t,\"owner\",QueryBugWave3HW[owner]",
                "\t\t,\"ww_closed_date\",QueryBugWave3HW[ww_closed_date]",
                "\t\t,\"ww_repo_modified_date\",QueryBugWave3HW[ww_repo_modified_date]",
                "\t\t,\"generation\",QueryBugWave3HW[generation]",
                "\t\t,\"ww_sla_response_date\",QueryBugWave3HW[ww_sla_response_date]",
                "\t\t,\"ww_sla_resolution_date\",QueryBugWave3HW[ww_sla_resolution_date]",
                "\t\t,\"sla_response_date\",QueryBugWave3HW[sla_response_date]",
                "\t\t,\"sla_resolution_date\",QueryBugWave3HW[sla_resolution_date]",
                "\t\t,\"sla_response_met\",QueryBugWave3HW[sla_response_met]",
                "\t\t,\"predrop_ww\",QueryBugWave3HW[predrop_ww]",
                "\t\t,\"ccb_meeting\",QueryBugWave3HW[ccb_meeting]",
                "\t\t,\"gate\",QueryBugWave3HW[gate]",
                "\t\t,\"reason\",QueryBugWave3HW[reason]",
                "\t\t,\"open_age\",QueryBugWave3HW[open_age]",
                "\t\t,\"unvalidated_age\",QueryBugWave3HW[unvalidated_age]",
                "\t\t,\"validator\",QueryBugWave3HW[validator]",
                "\t\t,\"submitted_by\",QueryBugWave3HW[submitted_by]",
                "        , \"priority\", QueryBugWave3HW[priority]",
                "        , \"repo_modified_date\", QueryBugWave3HW[repo_modified_date]",
                "",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\tQueryBugip_fw_sw",
                "\t\t,\"tenant\",QueryBugip_fw_sw[tenant]",
                "\t\t,\"project\",QueryBugip_fw_sw[project]",
                "\t\t,\"milestone\",QueryBugip_fw_sw[milestone]",
                "\t\t,\"lineage_final\",QueryBugip_fw_sw[lineage_final]",
                "\t\t,\"IsRealBug\",QueryBugip_fw_sw[IsRealBug]",
                "\t\t,\"ww\",QueryBugip_fw_sw[ww]",
                "\t\t,\"ww_future_date\",QueryBugip_fw_sw[ww_future_date]",
                "\t\t,\"family\",QueryBugip_fw_sw[currentwwfamily]",
                "\t\t,\"ip_supplier\",QueryBugip_fw_sw[currentwwip_supplier]",
                "\t\t,\"release\",QueryBugip_fw_sw[currentwwrelease]",
                "\t\t,\"release_affected\",QueryBugip_fw_sw[release_affected]",
                "\t\t,\"tag\",QueryBugip_fw_sw[tag]",
                "\t\t,\"status\",QueryBugip_fw_sw[status]",
                "\t\t,\"status_detail\",QueryBugip_fw_sw[status_detail]",
                "\t\t,\"SoC Die\",QueryBugip_fw_sw[currentwwSoCDie]",
                "",
                "\t\t,\"id\",QueryBugip_fw_sw[id]",
                "\t\t,\"lineage\",QueryBugip_fw_sw[lineage]",
                "\t\t,\"title\",QueryBugip_fw_sw[title]",
                "\t\t,\"ww_submitted_date\",QueryBugip_fw_sw[ww_submitted_date]",
                "\t\t,\"submitted_date\",QueryBugip_fw_sw[submitted_date]",
                "\t\t,\"updated_date\",QueryBugip_fw_sw[updated_date]",
                "\t\t,\"ww_updated_date\",QueryBugip_fw_sw[ww_updated_date]",
                "\t\t,\"bugeco.env_found\",QueryBugip_fw_sw[bugeco.env_found]",
                "\t\t,\"bugeco.team_found\",QueryBugip_fw_sw[bugeco.team_found]",
                "\t\t,\"bug_category\",QueryBugip_fw_sw[currentwwbug_category]",
                "\t\t,\"from_tenant\",QueryBugip_fw_sw[from_tenant]",
                "\t\t,\"from_subject\",QueryBugip_fw_sw[from_subject]",
                "\t\t,\"bugeco.type\",QueryBugip_fw_sw[bugeco.type]",
                "\t\t,\"component\",QueryBugip_fw_sw[component]",
                "\t\t,\"url\",QueryBugip_fw_sw[url]",
                "\t\t,\"ccb_change_scope\",QueryBugip_fw_sw[ccb_change_scope]",
                "\t\t,\"ccb_eta\",QueryBugip_fw_sw[ccb_eta]",
                "\t\t,\"ccb_order\",QueryBugip_fw_sw[ccb_order]",
                "\t\t,\"ccb_prq_gating\",QueryBugip_fw_sw[ccb_prq_gating]",
                "\t\t,\"ccb_status\",QueryBugip_fw_sw[ccb_status]",
                "\t\t,\"ccb_wontfix_action\",QueryBugip_fw_sw[ccb_wontfix_action]",
                "\t\t,\"ccb_wontfix_reason\",QueryBugip_fw_sw[ccb_wontfix_reason]\t\t",
                "",
                "                ,\"ccb_workaround\",QueryBugip_fw_sw[ccb_workaround]",
                "\t\t,\"ccb_proposal\",QueryBugip_fw_sw[ccb_proposal]",
                "\t\t,\"ccb_mode\",QueryBugip_fw_sw[ccb_mode]",
                "\t\t,\"ccb_disposition_type\",QueryBugip_fw_sw[ccb_disposition_type]",
                "\t\t,\"ww_defined_date\",QueryBugip_fw_sw[ww_defined_date]",
                "\t\t,\"ww_approved_date\",QueryBugip_fw_sw[ww_approved_date]",
                "\t\t,\"ww_predrop_closure_date_sdg\",QueryBugip_fw_sw[ww_predrop_closure_date_sdg]",
                "",
                "\t\t,\"currentww\",QueryBugip_fw_sw[currentww]",
                "\t\t,\"currentmonth\",QueryBugip_fw_sw[currentmonth]",
                "\t\t,\"currentyear\",QueryBugip_fw_sw[currentyear]",
                "\t\t,\"subip_family\",QueryBugip_fw_sw[subip_family]",
                "\t\t,\"subip_supplier\",QueryBugip_fw_sw[subip_supplier]",
                "\t\t,\"bugeco.release_found\",QueryBugip_fw_sw[bugeco.release_found]",
                "\t\t,\"supplier_org\",QueryBugip_fw_sw[supplier_org]",
                "\t\t,\"is_PreHIPostSi\",QueryBugip_fw_sw[is_PreSiPostSi]",
                "\t\t,\"org_is_found_bySoc\",QueryBugip_fw_sw[org_is_found_bySoc]",
                "\t\t,\"sub_bugcategory\",QueryBugip_fw_sw[currentwwsub_bugcategory]",
                "\t\t,\"retro_status\",QueryBugip_fw_sw[retro_status]",
                "\t\t,\"retro_ip_escape\",QueryBugip_fw_sw[retro_ip_escape]",
                "\t\t,\"retro_global_learning\",QueryBugip_fw_sw[retro_global_learning]",
                "\t\t,\"retro_global_action\",QueryBugip_fw_sw[retro_global_action]\t\t",
                "",
                "\t\t,\"retro_analysis\",QueryBugip_fw_sw[retro_analysis]",
                "\t\t,\"retro_learnings\",QueryBugip_fw_sw[retro_learnings]",
                "\t\t,\"owner\",QueryBugip_fw_sw[owner]",
                "\t\t,\"ww_closed_date\",QueryBugip_fw_sw[ww_closed_date]",
                "\t\t,\"ww_repo_modified_date\",QueryBugip_fw_sw[ww_repo_modified_date]",
                "\t\t,\"generation\",QueryBugip_fw_sw[generation]",
                "\t\t,\"ww_sla_response_date\",QueryBugip_fw_sw[ww_sla_response_date]",
                "\t\t,\"ww_sla_resolution_date\",QueryBugip_fw_sw[ww_sla_resolution_date]",
                "\t\t,\"sla_response_date\",QueryBugip_fw_sw[sla_response_date]",
                "\t\t,\"sla_resolution_date\",QueryBugip_fw_sw[sla_resolution_date]",
                "\t\t,\"sla_response_met\",QueryBugip_fw_sw[sla_response_met]",
                "\t\t,\"predrop_ww\",QueryBugip_fw_sw[predrop_ww]",
                "\t\t,\"ccb_meeting\",QueryBugip_fw_sw[ccb_meeting]",
                "\t\t,\"gate\",QueryBugip_fw_sw[gate]",
                "\t\t,\"reason\",QueryBugip_fw_sw[reason]",
                "\t\t,\"open_age\",QueryBugip_fw_sw[open_age]",
                "\t\t,\"unvalidated_age\",QueryBugip_fw_sw[unvalidated_age]",
                "\t\t,\"validator\",QueryBugip_fw_sw[validator]",
                "\t\t,\"submitted_by\",QueryBugip_fw_sw[submitted_by]",
                "        , \"priority\", QueryBugip_fw_sw[priority]",
                "        , \"repo_modified_date\", QueryBugip_fw_sw[repo_modified_date]",
                "",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\tQueryBugheia_soc",
                "\t\t,\"tenant\",QueryBugheia_soc[tenant]",
                "\t\t,\"project\",QueryBugheia_soc[project]",
                "\t\t,\"milestone\",QueryBugheia_soc[milestone]",
                "\t\t,\"lineage_final\",QueryBugheia_soc[lineage_final]",
                "\t\t,\"IsRealBug\",QueryBugheia_soc[IsRealBug]",
                "\t\t,\"ww\",QueryBugheia_soc[ww]",
                "\t\t,\"ww_future_date\",QueryBugheia_soc[ww_future_date]",
                "\t\t,\"family\",QueryBugheia_soc[currentwwfamily]",
                "\t\t,\"ip_supplier\",QueryBugheia_soc[currentwwip_supplier]",
                "\t\t,\"release\",QueryBugheia_soc[currentwwrelease]",
                "\t\t,\"release_affected\",QueryBugheia_soc[release_affected]",
                "\t\t,\"tag\",QueryBugheia_soc[tag]",
                "\t\t,\"status\",QueryBugheia_soc[status]",
                "\t\t,\"status_detail\",QueryBugheia_soc[status_detail]",
                "\t\t,\"SoC Die\",QueryBugheia_soc[currentwwSoCDie]",
                "",
                "\t\t,\"id\",QueryBugheia_soc[id]",
                "\t\t,\"lineage\",QueryBugheia_soc[lineage]",
                "\t\t,\"title\",QueryBugheia_soc[title]",
                "\t\t,\"ww_submitted_date\",QueryBugheia_soc[ww_submitted_date]",
                "\t\t,\"submitted_date\",QueryBugheia_soc[submitted_date]",
                "\t\t,\"updated_date\",QueryBugheia_soc[updated_date]",
                "\t\t,\"ww_updated_date\",QueryBugheia_soc[ww_updated_date]",
                "\t\t,\"bugeco.env_found\",QueryBugheia_soc[bugeco.env_found]",
                "\t\t,\"bugeco.team_found\",QueryBugheia_soc[bugeco.team_found]",
                "\t\t,\"bug_category\",QueryBugheia_soc[currentwwbug_category]",
                "\t\t,\"from_tenant\",QueryBugheia_soc[from_tenant]",
                "\t\t,\"from_subject\",QueryBugheia_soc[from_subject]",
                "\t\t,\"bugeco.type\",QueryBugheia_soc[bugeco.type]",
                "\t\t,\"component\",QueryBugheia_soc[component]",
                "\t\t,\"url\",QueryBugheia_soc[url]",
                "\t\t,\"ccb_change_scope\",QueryBugheia_soc[ccb_change_scope]",
                "\t\t,\"ccb_eta\",QueryBugheia_soc[ccb_eta]",
                "\t\t,\"ccb_order\",QueryBugheia_soc[ccb_order]",
                "\t\t,\"ccb_prq_gating\",QueryBugheia_soc[ccb_prq_gating]",
                "\t\t,\"ccb_status\",QueryBugheia_soc[ccb_status]",
                "\t\t,\"ccb_wontfix_action\",QueryBugheia_soc[ccb_wontfix_action]",
                "\t\t,\"ccb_wontfix_reason\",QueryBugheia_soc[ccb_wontfix_reason]\t\t",
                "",
                "                ,\"ccb_workaround\",QueryBugheia_soc[ccb_workaround]",
                "\t\t,\"ccb_proposal\",QueryBugheia_soc[ccb_proposal]",
                "\t\t,\"ccb_mode\",QueryBugheia_soc[ccb_mode]",
                "\t\t,\"ccb_disposition_type\",QueryBugheia_soc[ccb_disposition_type]",
                "\t\t,\"ww_defined_date\",QueryBugheia_soc[ww_defined_date]",
                "\t\t,\"ww_approved_date\",QueryBugheia_soc[ww_approved_date]",
                "\t\t,\"ww_predrop_closure_date_sdg\",QueryBugheia_soc[ww_predrop_closure_date_sdg]",
                "",
                "\t\t,\"currentww\",QueryBugheia_soc[currentww]",
                "\t\t,\"currentmonth\",QueryBugheia_soc[currentmonth]",
                "\t\t,\"currentyear\",QueryBugheia_soc[currentyear]",
                "\t\t,\"subip_family\",QueryBugheia_soc[subip_family]",
                "\t\t,\"subip_supplier\",QueryBugheia_soc[subip_supplier]",
                "\t\t,\"bugeco.release_found\",QueryBugheia_soc[bugeco.release_found]",
                "\t\t,\"supplier_org\",QueryBugheia_soc[supplier_org]",
                "\t\t,\"is_PreHIPostSi\",QueryBugheia_soc[is_PreSiPostSi]",
                "\t\t,\"org_is_found_bySoc\",QueryBugheia_soc[org_is_found_bySoc]",
                "\t\t,\"sub_bugcategory\",QueryBugheia_soc[currentwwsub_bugcategory]",
                "\t\t,\"retro_status\",QueryBugheia_soc[retro_status]",
                "\t\t,\"retro_ip_escape\",QueryBugheia_soc[retro_ip_escape]",
                "\t\t,\"retro_global_learning\",QueryBugheia_soc[retro_global_learning]",
                "\t\t,\"retro_global_action\",QueryBugheia_soc[retro_global_action]\t\t",
                "",
                "\t\t,\"retro_analysis\",QueryBugheia_soc[retro_analysis]",
                "\t\t,\"retro_learnings\",QueryBugheia_soc[retro_learnings]",
                "\t\t,\"owner\",QueryBugheia_soc[owner]",
                "\t\t,\"ww_closed_date\",QueryBugheia_soc[ww_closed_date]",
                "\t\t,\"ww_repo_modified_date\",QueryBugheia_soc[ww_repo_modified_date]",
                "\t\t,\"generation\",QueryBugheia_soc[generation]",
                "\t\t,\"ww_sla_response_date\",QueryBugheia_soc[ww_sla_response_date]",
                "\t\t,\"ww_sla_resolution_date\",QueryBugheia_soc[ww_sla_resolution_date]",
                "\t\t,\"sla_response_date\",QueryBugheia_soc[sla_response_date]",
                "\t\t,\"sla_resolution_date\",QueryBugheia_soc[sla_resolution_date]",
                "\t\t,\"sla_response_met\",QueryBugheia_soc[sla_response_met]",
                "\t\t,\"predrop_ww\",QueryBugheia_soc[predrop_ww]",
                "\t\t,\"ccb_meeting\",QueryBugheia_soc[ccb_meeting]",
                "\t\t,\"gate\",QueryBugheia_soc[gate]",
                "\t\t,\"reason\",QueryBugheia_soc[reason]",
                "\t\t,\"open_age\",QueryBugheia_soc[open_age]",
                "\t\t,\"unvalidated_age\",QueryBugheia_soc[unvalidated_age]",
                "\t\t,\"validator\",QueryBugheia_soc[validator]",
                "\t\t,\"submitted_by\",QueryBugheia_soc[submitted_by]",
                "        , \"priority\", QueryBugheia_soc[priority]",
                "        , \"repo_modified_date\", QueryBugheia_soc[repo_modified_date]",
                "",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\tQueryBugFWSWSDG",
                "\t\t,\"tenant\",QueryBugFWSWSDG[tenant]",
                "\t\t,\"project\",QueryBugFWSWSDG[project]",
                "\t\t,\"milestone\",QueryBugFWSWSDG[milestone]",
                "\t\t,\"lineage_final\",QueryBugFWSWSDG[lineage_final]",
                "\t\t,\"IsRealBug\",QueryBugFWSWSDG[IsRealBug]",
                "\t\t,\"ww\",QueryBugFWSWSDG[ww]",
                "\t\t,\"ww_future_date\",QueryBugFWSWSDG[ww_future_date]",
                "\t\t,\"family\",QueryBugFWSWSDG[currentwwfamily]",
                "\t\t,\"ip_supplier\",QueryBugFWSWSDG[currentwwip_supplier]",
                "\t\t,\"release\",QueryBugFWSWSDG[currentwwrelease]",
                "\t\t,\"release_affected\",QueryBugFWSWSDG[release_affected]",
                "\t\t,\"tag\",QueryBugFWSWSDG[tag]",
                "\t\t,\"status\",QueryBugFWSWSDG[status]",
                "\t\t,\"status_detail\",QueryBugFWSWSDG[status_detail]",
                "\t\t,\"SoC Die\",QueryBugFWSWSDG[currentwwSoCDie]",
                "",
                "\t\t,\"id\",QueryBugFWSWSDG[id]",
                "\t\t,\"lineage\",QueryBugFWSWSDG[lineage]",
                "\t\t,\"title\",QueryBugFWSWSDG[title]",
                "\t\t,\"ww_submitted_date\",QueryBugFWSWSDG[ww_submitted_date]",
                "\t\t,\"submitted_date\",QueryBugFWSWSDG[submitted_date]",
                "\t\t,\"updated_date\",QueryBugFWSWSDG[updated_date]",
                "\t\t,\"ww_updated_date\",QueryBugFWSWSDG[ww_updated_date]",
                "\t\t,\"bugeco.env_found\",QueryBugFWSWSDG[bugeco.env_found]",
                "\t\t,\"bugeco.team_found\",QueryBugFWSWSDG[bugeco.team_found]",
                "\t\t,\"bug_category\",QueryBugFWSWSDG[currentwwbug_category]",
                "\t\t,\"from_tenant\",QueryBugFWSWSDG[from_tenant]",
                "\t\t,\"from_subject\",QueryBugFWSWSDG[from_subject]",
                "\t\t,\"bugeco.type\",QueryBugFWSWSDG[bugeco.type]",
                "\t\t,\"component\",QueryBugFWSWSDG[component]",
                "\t\t,\"url\",QueryBugFWSWSDG[url]",
                "\t\t,\"ccb_change_scope\",QueryBugFWSWSDG[ccb_change_scope]",
                "\t\t,\"ccb_eta\",QueryBugFWSWSDG[ccb_eta]",
                "\t\t,\"ccb_order\",QueryBugFWSWSDG[ccb_order]",
                "\t\t,\"ccb_prq_gating\",QueryBugFWSWSDG[ccb_prq_gating]",
                "\t\t,\"ccb_status\",QueryBugFWSWSDG[ccb_status]",
                "\t\t,\"ccb_wontfix_action\",QueryBugFWSWSDG[ccb_wontfix_action]",
                "\t\t,\"ccb_wontfix_reason\",QueryBugFWSWSDG[ccb_wontfix_reason]\t\t",
                "",
                "                ,\"ccb_workaround\",QueryBugFWSWSDG[ccb_workaround]",
                "\t\t,\"ccb_proposal\",QueryBugFWSWSDG[ccb_proposal]",
                "\t\t,\"ccb_mode\",QueryBugFWSWSDG[ccb_mode]",
                "\t\t,\"ccb_disposition_type\",QueryBugFWSWSDG[ccb_disposition_type]",
                "\t\t,\"ww_defined_date\",QueryBugFWSWSDG[ww_defined_date]",
                "\t\t,\"ww_approved_date\",QueryBugFWSWSDG[ww_approved_date]",
                "\t\t,\"ww_predrop_closure_date_sdg\",QueryBugFWSWSDG[ww_predrop_closure_date_sdg]",
                "",
                "\t\t,\"currentww\",QueryBugFWSWSDG[currentww]",
                "\t\t,\"currentmonth\",QueryBugFWSWSDG[currentmonth]",
                "\t\t,\"currentyear\",QueryBugFWSWSDG[currentyear]",
                "\t\t,\"subip_family\",QueryBugFWSWSDG[subip_family]",
                "\t\t,\"subip_supplier\",QueryBugFWSWSDG[subip_supplier]",
                "\t\t,\"bugeco.release_found\",QueryBugFWSWSDG[bugeco.release_found]",
                "\t\t,\"supplier_org\",QueryBugFWSWSDG[supplier_org]",
                "\t\t,\"is_PreHIPostSi\",QueryBugFWSWSDG[is_PreSiPostSi]",
                "\t\t,\"org_is_found_bySoc\",QueryBugFWSWSDG[org_is_found_bySoc]",
                "\t\t,\"sub_bugcategory\",QueryBugFWSWSDG[currentwwsub_bugcategory]",
                "\t\t,\"retro_status\",QueryBugFWSWSDG[retro_status]",
                "\t\t,\"retro_ip_escape\",QueryBugFWSWSDG[retro_ip_escape]",
                "\t\t,\"retro_global_learning\",QueryBugFWSWSDG[retro_global_learning]",
                "\t\t,\"retro_global_action\",QueryBugFWSWSDG[retro_global_action]\t\t",
                "",
                "\t\t,\"retro_analysis\",QueryBugFWSWSDG[retro_analysis]",
                "\t\t,\"retro_learnings\",QueryBugFWSWSDG[retro_learnings]",
                "\t\t,\"owner\",QueryBugFWSWSDG[owner]",
                "\t\t,\"ww_closed_date\",QueryBugFWSWSDG[ww_closed_date]",
                "\t\t,\"ww_repo_modified_date\",QueryBugFWSWSDG[ww_repo_modified_date]",
                "\t\t,\"generation\",QueryBugFWSWSDG[generation]",
                "\t\t,\"ww_sla_response_date\",QueryBugFWSWSDG[ww_sla_response_date]",
                "\t\t,\"ww_sla_resolution_date\",QueryBugFWSWSDG[ww_sla_resolution_date]",
                "\t\t,\"sla_response_date\",QueryBugFWSWSDG[sla_response_date]",
                "\t\t,\"sla_resolution_date\",QueryBugFWSWSDG[sla_resolution_date]",
                "\t\t,\"sla_response_met\",QueryBugFWSWSDG[sla_response_met]",
                "\t\t,\"predrop_ww\",QueryBugFWSWSDG[predrop_ww]",
                "\t\t,\"ccb_meeting\",QueryBugFWSWSDG[ccb_meeting]",
                "\t\t,\"gate\",QueryBugFWSWSDG[gate]",
                "\t\t,\"reason\",QueryBugFWSWSDG[reason]",
                "\t\t,\"open_age\",QueryBugFWSWSDG[open_age]",
                "\t\t,\"unvalidated_age\",QueryBugFWSWSDG[unvalidated_age]",
                "\t\t,\"validator\",QueryBugFWSWSDG[validator]",
                "\t\t,\"submitted_by\",QueryBugFWSWSDG[submitted_by]",
                "        , \"priority\", QueryBugFWSWSDG[priority]",
                "        , \"repo_modified_date\", QueryBugFWSWSDG[repo_modified_date]",
                "",
                "\t),",
                "\tSELECTCOLUMNS(",
                "\t\tQueryBugsfip",
                "\t\t,\"tenant\",QueryBugsfip[tenant]",
                "\t\t,\"project\",QueryBugsfip[project]",
                "\t\t,\"milestone\",QueryBugsfip[milestone]",
                "\t\t,\"lineage_final\",QueryBugsfip[lineage_final]",
                "\t\t,\"IsRealBug\",QueryBugsfip[IsRealBug]",
                "\t\t,\"ww\",QueryBugsfip[ww]",
                "\t\t,\"ww_future_date\",QueryBugsfip[ww_future_date]",
                "\t\t,\"family\",QueryBugsfip[currentwwfamily]",
                "\t\t,\"ip_supplier\",QueryBugsfip[currentwwip_supplier]",
                "\t\t,\"release\",QueryBugsfip[currentwwrelease]",
                "\t\t,\"release_affected\",QueryBugsfip[release_affected]",
                "\t\t,\"tag\",QueryBugsfip[tag]",
                "\t\t,\"status\",QueryBugsfip[status]",
                "\t\t,\"status_detail\",QueryBugsfip[status_detail]",
                "\t\t,\"SoC Die\",QueryBugsfip[currentwwSoCDie]",
                "",
                "\t\t,\"id\",QueryBugsfip[id]",
                "\t\t,\"lineage\",QueryBugsfip[lineage]",
                "\t\t,\"title\",QueryBugsfip[title]",
                "\t\t,\"ww_submitted_date\",QueryBugsfip[ww_submitted_date]",
                "\t\t,\"submitted_date\",QueryBugsfip[submitted_date]",
                "\t\t,\"updated_date\",QueryBugsfip[updated_date]",
                "\t\t,\"ww_updated_date\",QueryBugsfip[ww_updated_date]",
                "\t\t,\"bugeco.env_found\",QueryBugsfip[bugeco.env_found]",
                "\t\t,\"bugeco.team_found\",QueryBugsfip[bugeco.team_found]",
                "\t\t,\"bug_category\",QueryBugsfip[currentwwbug_category]",
                "\t\t,\"from_tenant\",QueryBugsfip[from_tenant]",
                "\t\t,\"from_subject\",QueryBugsfip[from_subject]",
                "\t\t,\"bugeco.type\",QueryBugsfip[bugeco.type]",
                "\t\t,\"component\",QueryBugsfip[component]",
                "\t\t,\"url\",QueryBugsfip[url]",
                "\t\t,\"ccb_change_scope\",QueryBugsfip[ccb_change_scope]",
                "\t\t,\"ccb_eta\",QueryBugsfip[ccb_eta]",
                "\t\t,\"ccb_order\",QueryBugsfip[ccb_order]",
                "\t\t,\"ccb_prq_gating\",QueryBugsfip[ccb_prq_gating]",
                "\t\t,\"ccb_status\",QueryBugsfip[ccb_status]",
                "\t\t,\"ccb_wontfix_action\",QueryBugsfip[ccb_wontfix_action]",
                "\t\t,\"ccb_wontfix_reason\",QueryBugsfip[ccb_wontfix_reason]\t\t",
                "",
                "                ,\"ccb_workaround\",QueryBugsfip[ccb_workaround]",
                "\t\t,\"ccb_proposal\",QueryBugsfip[ccb_proposal]",
                "\t\t,\"ccb_mode\",QueryBugsfip[ccb_mode]",
                "\t\t,\"ccb_disposition_type\",QueryBugsfip[ccb_disposition_type]",
                "\t\t,\"ww_defined_date\",QueryBugsfip[ww_defined_date]",
                "\t\t,\"ww_approved_date\",QueryBugsfip[ww_approved_date]",
                "\t\t,\"ww_predrop_closure_date_sdg\",QueryBugsfip[ww_predrop_closure_date_sdg]",
                "",
                "\t\t,\"currentww\",QueryBugsfip[currentww]",
                "\t\t,\"currentmonth\",QueryBugsfip[currentmonth]",
                "\t\t,\"currentyear\",QueryBugsfip[currentyear]",
                "\t\t,\"subip_family\",QueryBugsfip[subip_family]",
                "\t\t,\"subip_supplier\",QueryBugsfip[subip_supplier]",
                "\t\t,\"bugeco.release_found\",QueryBugsfip[bugeco.release_found]",
                "\t\t,\"supplier_org\",QueryBugsfip[supplier_org]",
                "\t\t,\"is_PreHIPostSi\",QueryBugsfip[is_PreSiPostSi]",
                "\t\t,\"org_is_found_bySoc\",QueryBugsfip[org_is_found_bySoc]",
                "\t\t,\"sub_bugcategory\",QueryBugsfip[currentwwsub_bugcategory]",
                "\t\t,\"retro_status\",QueryBugsfip[retro_status]",
                "\t\t,\"retro_ip_escape\",QueryBugsfip[retro_ip_escape]",
                "\t\t,\"retro_global_learning\",QueryBugsfip[retro_global_learning]",
                "\t\t,\"retro_global_action\",QueryBugsfip[retro_global_action]\t\t",
                "",
                "\t\t,\"retro_analysis\",QueryBugsfip[retro_analysis]",
                "\t\t,\"retro_learnings\",QueryBugsfip[retro_learnings]",
                "\t\t,\"owner\",QueryBugsfip[owner]",
                "\t\t,\"ww_closed_date\",QueryBugsfip[ww_closed_date]",
                "\t\t,\"ww_repo_modified_date\",QueryBugsfip[ww_repo_modified_date]",
                "\t\t,\"generation\",QueryBugsfip[generation]",
                "\t\t,\"ww_sla_response_date\",QueryBugsfip[ww_sla_response_date]",
                "\t\t,\"ww_sla_resolution_date\",QueryBugsfip[ww_sla_resolution_date]",
                "\t\t,\"sla_response_date\",QueryBugsfip[sla_response_date]",
                "\t\t,\"sla_resolution_date\",QueryBugsfip[sla_resolution_date]",
                "\t\t,\"sla_response_met\",QueryBugsfip[sla_response_met]",
                "\t\t,\"predrop_ww\",QueryBugsfip[predrop_ww]",
                "\t\t,\"ccb_meeting\",QueryBugsfip[ccb_meeting]",
                "\t\t,\"gate\",QueryBugsfip[gate]",
                "\t\t,\"reason\",QueryBugsfip[reason]",
                "\t\t,\"open_age\",QueryBugsfip[open_age]",
                "\t\t,\"unvalidated_age\",QueryBugsfip[unvalidated_age]",
                "\t\t,\"validator\",QueryBugsfip[validator]",
                "\t\t,\"submitted_by\",QueryBugsfip[submitted_by]",
                "        , \"priority\", QueryBugsfip[priority]",
                "        , \"repo_modified_date\", QueryBugsfip[repo_modified_date]",
                "",
                "\t)",
                "",
                "",
                ")"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "TotalofID",
            "expression": "COUNTA([id])"
          },
          {
            "name": "incoming_dccb",
            "expression": "CALCULATE([TotalofDistinctID], FILTER(QueryBugHistorical, NOT(ISBLANK(QueryBugHistorical[defined_ww]))))"
          },
          {
            "name": "waiting_dccb",
            "expression": "CALCULATE([TotalofDistinctID], FILTER(QueryBugHistorical,  [status] = \"change_defined\"))"
          },
          {
            "name": "dispositioned_dccb",
            "expression": "CALCULATE([TotalofDistinctID], FILTER(QueryBugHistorical,  not(ISBLANK([dispositioned_in_ww]))))"
          },
          {
            "name": "incoming4wAvg",
            "expression": "calculate(sumx(QueryBugHistorical, [defined_in_ww])/COUNTROWS(VALUES(ww_list[ww])),FILTER(All(ww_list[ww]),ww_list[ww]<=Max(ww_list[ww])&&ww_list[ww]>max(ww_list[ww_m4])))"
          },
          {
            "name": "TimeFrameTotal",
            "expression": [
              "",
              "var currww = SelectedValue(IndependentWWBridge[WW])",
              "return",
              "CALCULATE(COUNTA([id]), QueryBugHistorical[ww] = currww)+0",
              ""
            ]
          },
          {
            "name": "TotalAllID",
            "expression": " COUNTA(QueryBugHistorical[id])"
          },
          {
            "name": "dccb_status_value",
            "expression": "IF(HASONEVALUE(dccb_state_xjoin[state]), SWITCH(LASTNONBLANK(dccb_state_xjoin[state], 1), \"Incoming\", [incoming_dccb], \"Dispositioned\", [dispositioned_dccb], [TotalofDistinctID]), [TotalofDistinctID])"
          },
          {
            "name": "TotalofDistinctID",
            "expression": "DISTINCTCOUNT(QueryBugHistorical[id])"
          },
          {
            "name": "incoming_bugs",
            "expression": [
              "CALCULATE([TotalAllID] , FILTER(QueryBugHistorical, QueryBugHistorical[ww_submitted_nbr] = max(IntelYearWW[Intel Year-Work Week])  && QueryBugHistorical[latest] = \"latest\" ))",
              "",
              "// updated ot look at latest",
              " //CALCULATE([TotalofDistinctID], FILTER(QueryBugHistorical,  VALUE(LEFT(QueryBugHistorical[ww_submitted_date], 4) & right(QueryBugHistorical[ww_submitted_date], 2)) =  QueryBugHistorical[ww]))"
            ]
          },
          {
            "name": "repo_mod_bugs",
            "expression": [
              "CALCULATE([TotalAllID] , FILTER(QueryBugHistorical, QueryBugHistorical[ww_repo_modified_nbr] = max(IntelYearWW[Intel Year-Work Week])  && QueryBugHistorical[latest] = \"latest\" ))",
              "",
              "//CALCULATE([TotalofDistinctID], FILTER(QueryBugHistorical, not(ISBLANK(QueryBugHistorical[repo_mod_in_ww]))))"
            ]
          },
          {
            "name": "closed_bugs",
            "expression": [
              "CALCULATE([TotalAllID] , FILTER(QueryBugHistorical, QueryBugHistorical[ww_closed_nbr] = max(IntelYearWW[Intel Year-Work Week])  && QueryBugHistorical[latest] = \"latest\" ))",
              "",
              "//CALCULATE([TotalofDistinctID], FILTER(QueryBugHistorical, QueryBugHistorical[closed_in_ww] = 1 ))"
            ]
          },
          {
            "name": "status_value",
            "expression": "IF(HASONEVALUE(state_xjoin[state]), SWITCH(LASTNONBLANK(state_xjoin[state], 1), \"Incoming\", [incoming_bugs], \"Closed\", [closed_bugs], \"Repo_Mod\", [repo_mod_bugs], \"Future\", [future_bugs],  [TotalofDistinctID]), [TotalofDistinctID])"
          },
          {
            "name": "future_bugs",
            "expression": [
              "CALCULATE([TotalAllID] , FILTER(QueryBugHistorical, QueryBugHistorical[ww_future_date_nbr] = max(IntelYearWW[Intel Year-Work Week])  && QueryBugHistorical[latest] = \"latest\" ))",
              "",
              "//CALCULATE([TotalofDistinctID], FILTER(QueryBugHistorical, QueryBugHistorical[future_in_ww]= MAX(QueryBugHistorical[ww])))"
            ]
          },
          {
            "name": "Total_RepoModified_4wk",
            "expression": [
              "if(CONTAINS(VALUES(line_select[Line]), [Line], \"Repo_mod 4wk Avg\"), CALCULATE([TotalAllID] / 4, FILTER(ALLSELECTED(QueryBugHistorical), QueryBugHistorical[ww_repo_modified_nbr] <= max(IntelYearWW[Intel Year-Work Week]) && QueryBugHistorical[ww_repo_modified_nbr] > max(IntelYearWW[Intel Year-Work Week]) - 4  &&  QueryBugHistorical[latest] = \"latest\")), blank())",
              "",
              "// updated to look at LATEST content, not historical ",
              " //if(CONTAINS(VALUES(line_select[Line]), [Line], \"Repo_mod 4wk Avg\"), CALCULATE([TotalAllID] / 4, FILTER(ALLSELECTED(QueryBugHistorical), QueryBugHistorical[ww] <= max(QueryBugHistorical[ww]) && QueryBugHistorical[ww] > max(QueryBugHistorical[ww]) - 4  && NOT(ISBLANK(QueryBugHistorical[repo_mod_in_ww] )) )), blank())"
            ]
          },
          {
            "name": "Total_Incoming_4wk",
            "expression": [
              "if(CONTAINS(VALUES(line_select[Line]), [Line], \"Incoming 4wk Avg\"), CALCULATE([TotalAllID] / 4, FILTER(ALLSELECTED(QueryBugHistorical), QueryBugHistorical[ww_submitted_nbr] <= max(IntelYearWW[Intel Year-Work Week]) && QueryBugHistorical[ww_submitted_nbr] > max(IntelYearWW[Intel Year-Work Week]) - 4  && QueryBugHistorical[latest] = \"latest\" )), blank())",
              "",
              "// updated to look at latest, not historical snapshot",
              " //if(CONTAINS(VALUES(line_select[Line]), [Line], \"Incoming 4wk Avg\"), CALCULATE([TotalAllID] / 4, FILTER(ALLSELECTED(QueryBugHistorical), QueryBugHistorical[ww] <= max(QueryBugHistorical[ww]) && QueryBugHistorical[ww] > max(QueryBugHistorical[ww]) - 4  && QueryBugHistorical[submitted_in_ww] = 1  )), blank())"
            ]
          },
          {
            "name": "Total_Closed_4wk",
            "expression": [
              "if(CONTAINS(VALUES(line_select[Line]), [Line], \"Closed 4wk Avg\"), CALCULATE([TotalAllID] / 4, FILTER(ALLSELECTED(QueryBugHistorical), QueryBugHistorical[ww_closed_nbr] <= max(IntelYearWW[Intel Year-Work Week]) && QueryBugHistorical[ww_closed_nbr] > max(IntelYearWW[Intel Year-Work Week]) - 4  && QueryBugHistorical[latest] = \"latest\" )), blank())",
              "",
              "",
              "//if(CONTAINS(VALUES(line_select[Line]), [Line], \"Closed 4wk Avg\"), CALCULATE([TotalAllID] / 4,  FILTER(ALLSELECTED(QueryBugHistorical), QueryBugHistorical[ww] <= max(QueryBugHistorical[ww]) && QueryBugHistorical[ww] > max(QueryBugHistorical[ww]) - 4  && QueryBugHistorical[closed_in_ww] = 1 )), blank())"
            ]
          },
          {
            "name": "Total_Future_4wk",
            "expression": [
              "if(CONTAINS(VALUES(line_select[Line]), [Line], \"Future 4wk Avg\"), CALCULATE([TotalAllID] / 4, FILTER(ALLSELECTED(QueryBugHistorical), QueryBugHistorical[ww_closed_nbr] <= max(IntelYearWW[Intel Year-Work Week]) && QueryBugHistorical[ww_closed_nbr] > max(IntelYearWW[Intel Year-Work Week]) - 4  && QueryBugHistorical[latest] = \"latest\" )), blank())",
              "",
              "",
              "",
              "//if(CONTAINS(VALUES(line_select[Line]), [Line], \"Future 4wk Avg\"), CALCULATE([TotalAllID] / 4, FILTER(ALLSELECTED(QueryBugHistorical), QueryBugHistorical[ww] <= max(QueryBugHistorical[ww]) && QueryBugHistorical[ww] > max(QueryBugHistorical[ww]) - 4  && QueryBugHistorical[future_in_ww] = QueryBugHistorical[ww])), blank() )"
            ]
          },
          {
            "name": "Pending",
            "expression": [
              "if(CONTAINS(VALUES(line_select[Line]), [Line], \"Pending\"), ",
              "CALCULATE([TotalAllID], ",
              "FILTER(QueryBugHistorical, QueryBugHistorical[latest] = \"latest\" && ",
              "(",
              "\t (",
              "\t \tQueryBugHistorical[ww_closed_nbr] > max(IntelYearWW[Intel Year-Work Week]) ||  ISBLANK(QueryBugHistorical[ww_closed_date])  ",
              "\t )   ",
              "\t && QueryBugHistorical[ww_submitted_nbr] <= MAX(IntelYearWW[Intel Year-Work Week]) ",
              "\t",
              ")",
              ")), blank())",
              "",
              "//if(CONTAINS(VALUES(line_select[Line]), [Line], \"Pending\"), CALCULATE([TotalAllID], FILTER(QueryBugHistorical, QueryBugHistorical[status] in {\"open\", \"approved\", \"change_defined\", \"repo_modified\"} )), blank()) ))"
            ]
          },
          {
            "name": "uncoded",
            "expression": [
              "if(CONTAINS(VALUES(line_select[Line]), [Line], \"Uncoded\"), ",
              "CALCULATE([TotalAllID], ",
              "FILTER(QueryBugHistorical, QueryBugHistorical[latest] = \"latest\" && ",
              "(",
              "\t (",
              "\t \tQueryBugHistorical[ww_uncoded_nbr] > max(IntelYearWW[Intel Year-Work Week])  ||  ISBLANK(QueryBugHistorical[ww_uncoded_nbr]) ",
              "\t )   ",
              "\t&& QueryBugHistorical[ww_submitted_nbr] <= MAX(IntelYearWW[Intel Year-Work Week]) ",
              ")",
              ")), blank())",
              "",
              "",
              "//if(CONTAINS(VALUES(line_select[Line]), [Line], \"Uncoded\"), CALCULATE([TotalAllID], FILTER(QueryBugHistorical, QueryBugHistorical[status] in {\"repo_modified\"} )), blank()))"
            ]
          },
          {
            "name": "column_name",
            "expression": [
              "SWITCH(LASTNONBLANK(Column_slicer[Item],1),\"Bug_id\",LASTNONBLANK(QueryBugHistorical[Bug_id],1),\"url\",LASTNONBLANK(QueryBugHistorical[url],1),",
              "\"ip_supplier\",LASTNONBLANK(QueryBugHistorical[ip_supplier],1),\"SOC Die\",LASTNONBLANK(QueryBugHistorical[SOC Die],1),\"family\",LASTNONBLANK(QueryBugHistorical[family],1),",
              "\"org_is_found_bySoc\",LASTNONBLANK(QueryBugHistorical[org_is_found_bySoc],1),\"is_PreSiPostSi\",LASTNONBLANK(QueryBugHistorical[is_PreSiPostSi],1),\"sub_bugcategory\",LASTNONBLANK(QueryBugHistorical[sub_bugcategory],1),",
              "\"submitted_date\",LASTNONBLANK(QueryBugHistorical[submitted_date],1),\"title\",LASTNONBLANK(QueryBugHistorical[title],1),",
              "\"bug_category\",LASTNONBLANK(QueryBugHistorical[bug_category],1),\"status\",LASTNONBLANK(QueryBugHistorical[status],1),\"status_detail\",LASTNONBLANK(QueryBugHistorical[status_detail],1),\"priority\",LASTNONBLANK(QueryBugHistorical[priority],1),",
              "\"owner\",LASTNONBLANK(QueryBugHistorical[owner],1),\"ccb_prq_gating\",LASTNONBLANK(QueryBugHistorical[ccb_prq_gating],1),\"retro_status\",LASTNONBLANK(QueryBugHistorical[retro_status],1),\"retro_ip_escape\",",
              "LASTNONBLANK(QueryBugHistorical[retro_ip_escape],1),\"retro_global_action\",LASTNONBLANK(QueryBugHistorical[retro_global_action],1),\"retro_analysis\",LASTNONBLANK(QueryBugHistorical[retro_analysis],1),",
              "\"retro_learnings\",LASTNONBLANK(QueryBugHistorical[retro_learnings],1),\"component\",LASTNONBLANK(QueryBugHistorical[component],1),\"Configuration\",LASTNONBLANK(QueryBugHistorical[Configuration],1),",
              "\"release_affected\",LASTNONBLANK(QueryBugHistorical[release_affected],1),\"tenant\",LASTNONBLANK(QueryBugHistorical[tenant],1),\"from_tenant\",LASTNONBLANK(QueryBugHistorical[from_tenant],1),\"submitted_by\",",
              "LASTNONBLANK(QueryBugHistorical[submitted_by],1),\"updated_date\",LASTNONBLANK(QueryBugHistorical[updated_date],1),\"sla_response_date\",LASTNONBLANK(QueryBugHistorical[sla_response_date],1),\"sla_resolution_date\",",
              "LASTNONBLANK(QueryBugHistorical[sla_resolution_date],1),\"bugeco.env_found\",LASTNONBLANK(QueryBugHistorical[bugeco.env_found],1),\"bugeco.team_found\",LASTNONBLANK(QueryBugHistorical[bugeco.team_found],1),",
              "\"bugeco.type\",LASTNONBLANK(QueryBugHistorical[bugeco.type],1),\"ww_closed_date\",LASTNONBLANK(QueryBugHistorical[ww_closed_date],1),",
              "\"closed_ww_date\",LASTNONBLANK(QueryBugHistorical[ww_closed_date],1),\"ww_submitted_date\",LASTNONBLANK(QueryBugHistorical[ww_submitted_date],1),\"updated_ww_date\",",
              "LASTNONBLANK(QueryBugHistorical[ww_updated_date_text],1),\"repo_modified_date\",LASTNONBLANK(QueryBugHistorical[repo_modified_date],1),\"repo_modified_ww_date\",",
              "LASTNONBLANK(QueryBugHistorical[ww_repo_modified_date],1),\"sla_response_met\",LASTNONBLANK(QueryBugHistorical[sla_response_met],1),\"ccb_prq_gating\",LASTNONBLANK(QueryBugHistorical[ccb_prq_gating],1)",
              ",\"release\",LASTNONBLANK(QueryBugHistorical[release],1),\"ww_sla_resolution_date\",LASTNONBLANK(QueryBugHistorical[ww_sla_resolution_date],1),\"ww_sla_response_date\",LASTNONBLANK(QueryBugHistorical[ww_sla_response_date],1)",
              ",\"ww\",LASTNONBLANK(QueryBugHistorical[ww_text],1))"
            ]
          },
          {
            "name": "BugHistoricalBugCnt",
            "expression": " CALCULATE(DISTINCTCOUNT(QueryBugHistorical[id]))"
          },
          {
            "name": "kelly_measure",
            "expression": "\"test\""
          }
        ]
      },
      {
        "name": "Querywork_public",
        "columns": [
          {
            "name": "User_Name",
            "dataType": "string",
            "sourceColumn": "User_Name",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "User_WWID",
            "dataType": "string",
            "sourceColumn": "User_WWID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "User_Idsid",
            "dataType": "string",
            "sourceColumn": "User_Idsid",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "Querywork_public",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select max([ccMailName]) as [User_Name],max([WWID]) as [User_WWID],[ShortID]as [User_Idsid]",
                "from [WORKER_PUBLIC]",
                "where [IsActive] =1",
                "and [ShortID] is not null",
                "group by [ShortID]"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select max([ccMailName]) as [User_Name],max([WWID]) as [User_WWID],[ShortID]as [User_Idsid]",
                  "from [WORKER_PUBLIC]",
                  "where [IsActive] =1",
                  "and [ShortID] is not null",
                  "group by [ShortID]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select max([ccMailName]) as [User_Name],max([WWID]) as [User_WWID],[ShortID]as [User_Idsid]",
              "from [WORKER_PUBLIC]",
              "where [IsActive] =1",
              "and [ShortID] is not null",
              "group by [ShortID]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Querywork_public"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select max([ccMailName]) as [User_Name],max([WWID]) as [User_WWID],[ShortID]as [User_Idsid]",
              "from [WORKER_PUBLIC]",
              "where [IsActive] =1",
              "and [ShortID] is not null",
              "group by [ShortID]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "ww_list",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "ww",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "QueryBugHistorical[ww]"
          },
          {
            "type": "calculated",
            "name": "ww_m4",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "expression": "if(value(RIGHT([ww]-4, 2)) > 52 || value(RIGHT([ww]-4, 2)) = 0 , LEFT([ww], 4) - 1 & RIGHT([ww], 2) + 48, [ww] - 4)&\"\""
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(QueryBugHistorical[ww])"
            }
          }
        ]
      },
      {
        "name": "UniqueID",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "id",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[id]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(SELECTCOLUMNS(QueryBugHistorical,\"id\", QueryBugHistorical[id]))"
            }
          }
        ]
      },
      {
        "name": "CalendarDate",
        "columns": [
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "category",
            "dataType": "string",
            "sourceColumn": "category",
            "sortByColumn": "category_order",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "category_order",
            "dataType": "int64",
            "sourceColumn": "category_order",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Intel Year",
            "dataType": "int64",
            "sourceColumn": "Intel Year",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Intel Quarter",
            "dataType": "string",
            "sourceColumn": "Intel Quarter",
            "sourceProviderType": "VarChar"
          },
          {
            "type": "calculated",
            "name": "WWText",
            "dataType": "string",
            "isDataTypeInferred": false,
            "expression": "CalendarDate[ww]"
          }
        ],
        "partitions": [
          {
            "name": "CalendarDate",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "/*",
                "select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
                "",
                "UNION",
                "",
                "select category, category_order, [Intel Year], [Intel Quarter], ww from",
                "(select 'Last 6ww' as category, 3 as category_order, 1 as [join]) a",
                "JOIN",
                "(select distinct [Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww, 1 as [join] from v_ipg_calendar",
                "where 1=1 ",
                "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
                "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')",
                "",
                ") b",
                "on a.join = b.join",
                "*/",
                "",
                "/*Comment above query as it was failing with ODBC LINK issues*/",
                "",
                "select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
                "",
                "UNION",
                "",
                "select distinct 'Last 6ww' as category, 3 as category_order ,[Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww from v_ipg_calendar",
                "where 1=1 ",
                "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
                "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>/*",
                  "select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
                  "",
                  "UNION",
                  "",
                  "select category, category_order, [Intel Year], [Intel Quarter], ww from",
                  "(select 'Last 6ww' as category, 3 as category_order, 1 as [join]) a",
                  "JOIN",
                  "(select distinct [Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww, 1 as [join] from v_ipg_calendar",
                  "where 1=1 ",
                  "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
                  "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')",
                  "",
                  ") b",
                  "on a.join = b.join",
                  "*/",
                  "",
                  "/*Comment above query as it was failing with ODBC LINK issues*/",
                  "",
                  "select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
                  "",
                  "UNION",
                  "",
                  "select distinct 'Last 6ww' as category, 3 as category_order ,[Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww from v_ipg_calendar",
                  "where 1=1 ",
                  "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
                  "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "/*",
              "select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
              "",
              "UNION",
              "",
              "select category, category_order, [Intel Year], [Intel Quarter], ww from",
              "(select 'Last 6ww' as category, 3 as category_order, 1 as [join]) a",
              "JOIN",
              "(select distinct [Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww, 1 as [join] from v_ipg_calendar",
              "where 1=1 ",
              "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
              "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')",
              "",
              ") b",
              "on a.join = b.join",
              "*/",
              "",
              "/*Comment above query as it was failing with ODBC LINK issues*/",
              "",
              "select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
              "",
              "UNION",
              "",
              "select distinct 'Last 6ww' as category, 3 as category_order ,[Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww from v_ipg_calendar",
              "where 1=1 ",
              "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
              "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "CalendarDate"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>/*",
              "select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
              "",
              "UNION",
              "",
              "select category, category_order, [Intel Year], [Intel Quarter], ww from",
              "(select 'Last 6ww' as category, 3 as category_order, 1 as [join]) a",
              "JOIN",
              "(select distinct [Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww, 1 as [join] from v_ipg_calendar",
              "where 1=1 ",
              "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
              "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')",
              "",
              ") b",
              "on a.join = b.join",
              "*/",
              "",
              "/*Comment above query as it was failing with ODBC LINK issues*/",
              "",
              "select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
              "",
              "UNION",
              "",
              "select distinct 'Last 6ww' as category, 3 as category_order ,[Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww from v_ipg_calendar",
              "where 1=1 ",
              "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
              "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DynamicLegend",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "LegendId",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[LegendId]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "LegendAttribute",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[LegendAttribute]",
            "sortByColumn": "SlicerOrder"
          },
          {
            "type": "calculatedTableColumn",
            "name": "LegendValue",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[LegendValue]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SlicerOrder",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[SlicerOrder]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "WWSnapshot",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": false,
            "sourceColumn": "[WWSnapshot]"
          },
          {
            "type": "calculated",
            "name": "Ordering",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "SWITCH([LegendValue],",
              "\"open\", 1,",
              "\"approved\", 2,",
              "\"in_progress\", 3,",
              "\"change_defined\", 4,",
              "\"repo_modified\", 5,",
              "\"rejected\", 6,",
              "\"complete\", 7,",
              "\"future\", 8,",
              "\"Functional\", 1,",
              "\"Physical\", 2,",
              "\"DOC\", 3,",
              "\"Arch\", 4,",
              "\"Collateral\", 5,",
              "\"VAL\", 6,",
              "\"Other\", 7,",
              "\"tbd\", 8,",
              "\"1-showstopper\", 1,",
              "\"2-high\", 2,",
              "\"3-medium\", 3,",
              "\"4-low\", 4,",
              "\"code_gen\", 1,",
              "\"simulatiion\", 2, ",
              "\"simulation\", 3, ",
              "\"logic_verif\", 4, ",
              "\"phys_verif\", 5,  ",
              "\"synthesis\", 6, ",
              "\"formal\", 7,",
              "\"fpga\", 8, ",
              "\"emulation\", 9, ",
              "\"virtual_platf\", 10,",
              "\"review\", 11, ",
              "\"integration\", 12, ",
              "\"silicon\", 13,",
              "\"null\", 21,",
              "20 ",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "LegendValueWithOrder",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "DynamicLegend[LegendValue]",
            "sortByColumn": "Ordering"
          },
          {
            "type": "calculatedTableColumn",
            "name": "WW_id",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[WW_id]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "UNION(",
                "SELECTCOLUMNS(",
                "QueryBugHistorical",
                ",\"LegendId\",QueryBugHistorical[id]",
                ",\"LegendAttribute\",\"status\"",
                ",\"LegendValue\",QueryBugHistorical[status]",
                ",\"SlicerOrder\", 3",
                ",\"WWSnapshot\", QueryBugHistorical[ww]",
                ",\"WW_id\", QueryBugHistorical[WW_id]",
                "),",
                "SELECTCOLUMNS(",
                "QueryBugHistorical",
                ",\"LegendId\",QueryBugHistorical[id]",
                ",\"LegendAttribute\",\"subbugcategory\"",
                ",\"LegendValue\",QueryBugHistorical[sub_bugcategory]",
                ",\"SlicerOrder\", 1",
                ",\"WWSnapshot\", QueryBugHistorical[ww]",
                ",\"WW_id\", QueryBugHistorical[WW_id]",
                "),",
                "SELECTCOLUMNS(",
                "QueryBugHistorical",
                ",\"LegendId\",QueryBugHistorical[id]",
                ",\"LegendAttribute\",\"priority\"",
                ",\"LegendValue\",QueryBugHistorical[priority]",
                ",\"SlicerOrder\", 7",
                ",\"WWSnapshot\", QueryBugHistorical[ww]",
                ",\"WW_id\", QueryBugHistorical[WW_id]",
                ")",
                "",
                ")",
                "",
                ""
              ]
            }
          }
        ]
      },
      {
        "name": "WWBridge",
        "columns": [
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "type": "calculated",
            "name": "WWText",
            "dataType": "string",
            "isDataTypeInferred": false,
            "expression": "WWBridge[ww]"
          }
        ],
        "partitions": [
          {
            "name": "CalendarDate",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "select distinct [Intel Year-Work Week] as ww from v_ipg_calendar",
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct [Intel Year-Work Week] as ww from v_ipg_calendar</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select distinct [Intel Year-Work Week] as ww from v_ipg_calendar"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "CalendarDate"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct [Intel Year-Work Week] as ww from v_ipg_calendar</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "IndependentCalendar",
        "columns": [
          {
            "name": "category",
            "dataType": "string",
            "sourceColumn": "category",
            "sortByColumn": "category_order",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "category_order",
            "dataType": "int64",
            "sourceColumn": "category_order",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Intel Year",
            "dataType": "int64",
            "sourceColumn": "Intel Year",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Intel Quarter",
            "dataType": "string",
            "sourceColumn": "Intel Quarter",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "type": "calculated",
            "name": "CurrentYear",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " IF( IndependentCalendar[Intel Year] <= YEAR(TODAY()), 1, 0)"
          }
        ],
        "partitions": [
          {
            "name": "IndependentCalendar",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "/*select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
                "",
                "UNION",
                "",
                "select category, category_order, [Intel Year], [Intel Quarter], ww from",
                "(select 'Last 6ww' as category, 3 as category_order, 1 as [join]) a",
                "JOIN",
                "(select distinct [Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww, 1 as [join] from v_ipg_calendar",
                "where 1=1 ",
                "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
                "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')",
                "",
                ") b",
                "on a.join = b.join",
                "*/",
                "",
                "/*Comment above query as it was failing with ODBC LINK issues*/",
                "",
                "select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
                "",
                "UNION",
                "",
                "select distinct 'Last 6ww' as category, 3 as category_order ,[Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww from v_ipg_calendar",
                "where 1=1 ",
                "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
                "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>/*select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
                  "",
                  "UNION",
                  "",
                  "select category, category_order, [Intel Year], [Intel Quarter], ww from",
                  "(select 'Last 6ww' as category, 3 as category_order, 1 as [join]) a",
                  "JOIN",
                  "(select distinct [Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww, 1 as [join] from v_ipg_calendar",
                  "where 1=1 ",
                  "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
                  "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')",
                  "",
                  ") b",
                  "on a.join = b.join",
                  "*/",
                  "",
                  "/*Comment above query as it was failing with ODBC LINK issues*/",
                  "",
                  "select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
                  "",
                  "UNION",
                  "",
                  "select distinct 'Last 6ww' as category, 3 as category_order ,[Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww from v_ipg_calendar",
                  "where 1=1 ",
                  "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
                  "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "/*select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
              "",
              "UNION",
              "",
              "select category, category_order, [Intel Year], [Intel Quarter], ww from",
              "(select 'Last 6ww' as category, 3 as category_order, 1 as [join]) a",
              "JOIN",
              "(select distinct [Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww, 1 as [join] from v_ipg_calendar",
              "where 1=1 ",
              "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
              "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')",
              "",
              ") b",
              "on a.join = b.join",
              "*/",
              "",
              "/*Comment above query as it was failing with ODBC LINK issues*/",
              "",
              "select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
              "",
              "UNION",
              "",
              "select distinct 'Last 6ww' as category, 3 as category_order ,[Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww from v_ipg_calendar",
              "where 1=1 ",
              "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
              "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "IndependentCalendar"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>/*select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
              "",
              "UNION",
              "",
              "select category, category_order, [Intel Year], [Intel Quarter], ww from",
              "(select 'Last 6ww' as category, 3 as category_order, 1 as [join]) a",
              "JOIN",
              "(select distinct [Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww, 1 as [join] from v_ipg_calendar",
              "where 1=1 ",
              "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
              "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')",
              "",
              ") b",
              "on a.join = b.join",
              "*/",
              "",
              "/*Comment above query as it was failing with ODBC LINK issues*/",
              "",
              "select distinct category, category_order, [Intel Year], [Intel Quarter],  [Intel Year-Work Week] as ww from v_ipg_calendar",
              "",
              "UNION",
              "",
              "select distinct 'Last 6ww' as category, 3 as category_order ,[Intel Year], [Intel Quarter], [Intel Year-Work Week] as ww from v_ipg_calendar",
              "where 1=1 ",
              "and [Intel Year-Work Week] > (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')-6",
              "and [Intel Year-Work Week] <= (select max([Intel Year-Work Week]) from v_ipg_calendar where category='Last 2ww')</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryIntelWW",
        "columns": [
          {
            "name": "Intel Year-Work Week",
            "dataType": "int64",
            "sourceColumn": "Intel Year-Work Week",
            "sourceProviderType": "Integer"
          },
          {
            "type": "calculated",
            "name": "WWSeqNbr",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(COUNTROWS(QueryIntelWW), QueryIntelWW[Intel Year-Work Week]<=EARLIER(QueryIntelWW[Intel Year-Work Week]))"
          }
        ],
        "partitions": [
          {
            "name": "QueryIntelWW",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select distinct [Intel Year-Work Week] from [v_time_day] ",
                "order by [Intel Year-Work Week] asc"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct [Intel Year-Work Week] from [v_time_day] ",
                  "order by [Intel Year-Work Week] asc</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct [Intel Year-Work Week] from [v_time_day] ",
              "order by [Intel Year-Work Week] asc"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryIntelWW"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct [Intel Year-Work Week] from [v_time_day] ",
              "order by [Intel Year-Work Week] asc</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Cumulative",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "id",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[id]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Type",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Type]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ww]"
          },
          {
            "type": "calculated",
            "name": "WWText",
            "dataType": "string",
            "isDataTypeInferred": false,
            "expression": "Cumulative[ww]"
          },
          {
            "type": "calculated",
            "name": "WW_Nbr",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "RIGHT(Cumulative[ww], 2)"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "UNION(",
                "SELECTCOLUMNS(Filter(QueryBugHistorical, QueryBugHistorical[ww_submitted_nbr] <> BLANK() && QueryBugHistorical[isLatestWW]=1), \"id\", [id], \"Type\", \"ww_submitted_nbr\", \"ww\", [ww_submitted_nbr]),",
                "SELECTCOLUMNS(Filter(QueryBugHistorical, QueryBugHistorical[ww_repo_modified_nbr] <> BLANK() && QueryBugHistorical[isLatestWW]=1), \"id\", [id], \"Type\", \"ww_repo_modified_nbr\", \"ww\", [ww_repo_modified_nbr]),",
                "SELECTCOLUMNS(Filter(QueryBugHistorical, QueryBugHistorical[ww_closed_nbr] <> BLANK() && QueryBugHistorical[isLatestWW]=1), \"id\", [id], \"Type\", \"ww_closed_nbr\", \"ww\", [ww_closed_nbr]),",
                "SELECTCOLUMNS(WWBridge, \"id\", -1, \"Type\", \"N/A\", \"ww\", WWBridge[ww]",
                "",
                "))"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Incoming_Cum_Bug",
            "expression": [
              " ",
              "var minwwtext = MIN(Cumulative[WWText])",
              "return",
              "IF(SelectedValue(Cumulative[ww]) in Values(WWBridge[ww]), ",
              "CALCULATE(Count(Cumulative[id]), ",
              "    Filter(ALLSELECTED(Cumulative), Cumulative[WW]<=MAX(Cumulative[WW]))",
              ", Cumulative[id] in VALUES(QueryBugHistorical[id])",
              ", Cumulative[Type] = \"ww_submitted_nbr\"",
              ") +0, -1)"
            ]
          },
          {
            "name": "Closed_Cum_Bug",
            "expression": [
              " ",
              "var minwwtext = MIN(Cumulative[WWText])",
              "return",
              "IF(SelectedValue(Cumulative[ww]) in Values(WWBridge[ww]), ",
              "CALCULATE(Count(Cumulative[id]), ",
              "    Filter(ALLSELECTED(Cumulative), Cumulative[WW]<=MAX(Cumulative[WW]))",
              ", Cumulative[id] in VALUES(QueryBugHistorical[id])",
              ", Cumulative[Type] = \"ww_closed_nbr\"",
              ") +0, -1)"
            ]
          },
          {
            "name": "Repo_Modified_Cum_Bug",
            "expression": [
              " ",
              "var minwwtext = MIN(Cumulative[WWText])",
              "return",
              "IF(SelectedValue(Cumulative[ww]) in Values(WWBridge[ww]), ",
              "CALCULATE(Count(Cumulative[id]), ",
              "    Filter(ALLSELECTED(Cumulative), Cumulative[WW]<=MAX(Cumulative[WW]))",
              ", Cumulative[id] in VALUES(QueryBugHistorical[id])",
              ", Cumulative[Type] = \"ww_repo_modified_nbr\"",
              ") +0, -1)"
            ]
          }
        ]
      },
      {
        "name": "IndependentWWBridge",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "WW",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[WW]"
          },
          {
            "type": "calculated",
            "name": "WWText",
            "dataType": "string",
            "isDataTypeInferred": false,
            "expression": "[WW]"
          },
          {
            "type": "calculated",
            "name": "IsFutureWW",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF(IndependentWWBridge[WW] <= MAX(QueryBugHistorical[ww]), 0, 1)"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "Distinct(SELECTCOLUMNS(IndependentCalendar, \"WW\", [ww]))"
            }
          }
        ]
      },
      {
        "name": "QueryProcess",
        "columns": [
          {
            "name": "Configuration",
            "dataType": "string",
            "sourceColumn": "Configuration",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Process",
            "dataType": "string",
            "sourceColumn": "Process",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IpType",
            "dataType": "string",
            "sourceColumn": "IpType",
            "sourceProviderType": "VarChar"
          },
          {
            "type": "calculated",
            "name": "HIP/SIP",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF([IpType] in {\"SIP\",\"Software\"},\"SIP\",\"HIP\")"
          }
        ],
        "partitions": [
          {
            "name": "QueryProcess",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select distinct [Configuration]",
                ",CASE WHEN CHARINDEX('.',process)>0 ",
                "           THEN SUBSTRING(process,1,CHARINDEX('.',process)-1) ",
                "           ELSE process",
                "",
                "END as [Process]",
                ",[IpType]",
                "from [v_ipg_carbon_milestone] ",
                "where [devorg] = 'ipg'"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct [Configuration]",
                  ",CASE WHEN CHARINDEX('.',process)>0 ",
                  "           THEN SUBSTRING(process,1,CHARINDEX('.',process)-1) ",
                  "           ELSE process",
                  "",
                  "END as [Process]",
                  ",[IpType]",
                  "from [v_ipg_carbon_milestone] ",
                  "where [devorg] = 'ipg'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct [Configuration]",
              ",CASE WHEN CHARINDEX('.',process)>0 ",
              "           THEN SUBSTRING(process,1,CHARINDEX('.',process)-1) ",
              "           ELSE process",
              "",
              "END as [Process]",
              ",[IpType]",
              "from [v_ipg_carbon_milestone] ",
              "where [devorg] = 'ipg'"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryProcess"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct [Configuration]",
              ",CASE WHEN CHARINDEX('.',process)>0 ",
              "           THEN SUBSTRING(process,1,CHARINDEX('.',process)-1) ",
              "           ELSE process",
              "",
              "END as [Process]",
              ",[IpType]",
              "from [v_ipg_carbon_milestone] ",
              "where [devorg] = 'ipg'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryTestChip",
        "columns": [
          {
            "name": "product",
            "dataType": "string",
            "sourceColumn": "product",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsTestChip",
            "dataType": "int64",
            "sourceColumn": "IsTestChip",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "QueryTestChip",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select distinct [product.name] as product ",
                ",1 as [IsTestChip]",
                "from [dw.release_central.product]",
                "where 1=1 ",
                "and ww = datepart(ww, getutcdate())",
                "and [product.type] = 'testchip'",
                "and [product.hsdes_tenant] in ('ip_testchip', 'server', 'client_conn_ip', 'sip', 'hip', 'dft_services')"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct [product.name] as product ",
                  ",1 as [IsTestChip]",
                  "from [dw.release_central.product]",
                  "where 1=1 ",
                  "and ww = datepart(ww, getutcdate())",
                  "and [product.type] = 'testchip'",
                  "and [product.hsdes_tenant] in ('ip_testchip', 'server', 'client_conn_ip', 'sip', 'hip', 'dft_services')</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct [product.name] as product ",
              ",1 as [IsTestChip]",
              "from [dw.release_central.product]",
              "where 1=1 ",
              "and ww = datepart(ww, getutcdate())",
              "and [product.type] = 'testchip'",
              "and [product.hsdes_tenant] in ('ip_testchip', 'server', 'client_conn_ip', 'sip', 'hip', 'dft_services')"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryTestChip"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct [product.name] as product ",
              ",1 as [IsTestChip]",
              "from [dw.release_central.product]",
              "where 1=1 ",
              "and ww = datepart(ww, getutcdate())",
              "and [product.type] = 'testchip'",
              "and [product.hsdes_tenant] in ('ip_testchip', 'server', 'client_conn_ip', 'sip', 'hip', 'dft_services')</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryRTL1p0",
        "columns": [
          {
            "name": "configuration",
            "dataType": "string",
            "sourceColumn": "configuration",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "Category",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "TrendYYYYWW",
            "dataType": "int64",
            "sourceColumn": "TrendYYYYWW",
            "sourceProviderType": "Integer"
          },
          {
            "name": "IsBlankTrendDate",
            "dataType": "int64",
            "sourceColumn": "IsBlankTrendDate",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "QueryRTL1p0",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "/*----------------------------------------------------------------------------------------------------------------------------------------",
                "2021-02-25 <TinaD> - Create v_ipg_RTL1p0date based on cig_SocFiledBug_RTL_date_cached with only NonPIC config date",
                "------------------------------------------------------------------------------------------------------------------------------------------*/",
                "select configuration",
                ",'NonPIC' as [Category]",
                ", min([TrendYYYYWW]) as [TrendYYYYWW]",
                ", 0 as [IsBlankTrendDate] ",
                "from [V_IPG_CARBON_MILESTONE] a",
                "WHERE [DevOrg] = 'IPG' ",
                "and[drop] = 'RTL1p0' ",
                "and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
                "and [DropType] in ('Standard')",
                "and  configuration not like 'IOSF PSF%' ",
                "and [TrendYYYYWW] <>''",
                "group by configuration",
                "",
                "UNION ",
                "/*To pull in IOSF confi per Punit's request On PSF, we are supposed to do 1p0 drop ",
                "and then always do 1p1 drop. As the 1p0 drop is mostly early enough and historically ",
                "seen it change from 1p0 to 1p1, so PSF team has stopped doing 1p0 standard drop (no IPDS) ",
                "and label it as early and then 1p1 they will do standard drop (with IPDS). So we pull in all droptype for this family. ",
                "On 9/3/2019,confirmed with Kristine. We will use standard drop for all rtlp0 and rtl1p1 drops*/",
                "",
                "select configuration",
                ",'NonPIC' as [Category]",
                ", min([TrendYYYYWW]) as [TrendYYYYWW]",
                ", 0 as [IsBlankTrendDate] ",
                "from [V_IPG_CARBON_MILESTONE]a",
                "WHERE [DevOrg] = 'IPG' ",
                "and[drop] in ('RTL1p0', 'RTL1p1') ",
                "and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
                "and [TrendYYYYWW] <>''",
                "and  configuration like 'IOSF PSF%'",
                "group by configuration",
                "",
                "",
                "UNION ALL",
                "/*Non PIC config has blank trenddate*/",
                "select configuration",
                ",'NonPIC' as [Category]",
                ", min([TrendYYYYWW]) as [TrendYYYYWW]",
                ", 1 as [IsBlankTrendDate] ",
                "from [V_IPG_CARBON_MILESTONE] ",
                "WHERE [DevOrg] = 'IPG' ",
                "and[drop] = 'RTL1p0' ",
                "and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
                "and [DropType] in ('Standard')",
                "and ([TrendYYYYWW] is null or[TrendYYYYWW] = '')",
                "and configuration not in (select distinct configuration",
                "      from [V_IPG_CARBON_MILESTONE] ",
                "      WHERE 1=1 ",
                "      and[drop] = 'RTL1p0' ",
                "      and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
                "      and [DropType] in ('Standard')",
                "      and [trendYYYYWW] <>'')",
                "group by configuration",
                "",
                "UNION ALL",
                "/*PIC config has trenddate*/",
                "select configuration",
                ",'PIC' as [Category]",
                ", min([TrendYYYYWW]) as [TrendYYYYWW]  /*per discussion with Kristine/Punit on 8/28/19, we will pull earliest date for RTL1p0 for PIC config as well */",
                ",0  as [IsBlankTrendDate]  ",
                "from [V_IPG_CARBON_MILESTONE]a",
                "WHERE [DevOrg] = 'IPG' ",
                "and[drop] = 'RTL1p0' ",
                "and [reuse] in ('configurable')",
                "and [DropType] in ('Standard')",
                "and [TrendYYYYWW] <>''",
                "group by configuration",
                "",
                "UNION ALL",
                "/*PIC config has blanktrenddate*/",
                "select configuration",
                ",'PIC' as [Category]",
                ", min([TrendYYYYWW]) as [TrendYYYYWW]  ",
                ",1 as [IsBlankTrendDate] ",
                "from [V_IPG_CARBON_MILESTONE]a",
                "WHERE [DevOrg] = 'IPG' ",
                "and[drop] = 'RTL1p0' ",
                "and [reuse] in ('configurable')",
                "and [DropType] in ('Standard')",
                "and ([TrendYYYYWW] is null or[TrendYYYYWW] = '')",
                " and configuration not in (select distinct configuration",
                "\t\t\t   from [V_IPG_CARBON_MILESTONE] a",
                "\t\t\t   WHERE 1=1 ",
                "\t\t\t  and [DevOrg] = 'IPG' ",
                "\t\t\t   and[drop] = 'RTL1p0' ",
                "\t\t\t   and [reuse] in ('configurable')",
                "\t\t\t   and [DropType] in ('Standard')",
                "\t\t\t   and [trendYYYYWW] <>'')",
                "group by configuration"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>/*----------------------------------------------------------------------------------------------------------------------------------------",
                  "2021-02-25 <TinaD> - Create v_ipg_RTL1p0date based on cig_SocFiledBug_RTL_date_cached with only NonPIC config date",
                  "------------------------------------------------------------------------------------------------------------------------------------------*/",
                  "select configuration",
                  ",'NonPIC' as [Category]",
                  ", min([TrendYYYYWW]) as [TrendYYYYWW]",
                  ", 0 as [IsBlankTrendDate] ",
                  "from [V_IPG_CARBON_MILESTONE] a",
                  "WHERE [DevOrg] = 'IPG' ",
                  "and[drop] = 'RTL1p0' ",
                  "and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
                  "and [DropType] in ('Standard')",
                  "and  configuration not like 'IOSF PSF%' ",
                  "and [TrendYYYYWW] <>''",
                  "group by configuration",
                  "",
                  "UNION ",
                  "/*To pull in IOSF confi per Punit's request On PSF, we are supposed to do 1p0 drop ",
                  "and then always do 1p1 drop. As the 1p0 drop is mostly early enough and historically ",
                  "seen it change from 1p0 to 1p1, so PSF team has stopped doing 1p0 standard drop (no IPDS) ",
                  "and label it as early and then 1p1 they will do standard drop (with IPDS). So we pull in all droptype for this family. ",
                  "On 9/3/2019,confirmed with Kristine. We will use standard drop for all rtlp0 and rtl1p1 drops*/",
                  "",
                  "select configuration",
                  ",'NonPIC' as [Category]",
                  ", min([TrendYYYYWW]) as [TrendYYYYWW]",
                  ", 0 as [IsBlankTrendDate] ",
                  "from [V_IPG_CARBON_MILESTONE]a",
                  "WHERE [DevOrg] = 'IPG' ",
                  "and[drop] in ('RTL1p0', 'RTL1p1') ",
                  "and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
                  "and [TrendYYYYWW] <>''",
                  "and  configuration like 'IOSF PSF%'",
                  "group by configuration",
                  "",
                  "",
                  "UNION ALL",
                  "/*Non PIC config has blank trenddate*/",
                  "select configuration",
                  ",'NonPIC' as [Category]",
                  ", min([TrendYYYYWW]) as [TrendYYYYWW]",
                  ", 1 as [IsBlankTrendDate] ",
                  "from [V_IPG_CARBON_MILESTONE] ",
                  "WHERE [DevOrg] = 'IPG' ",
                  "and[drop] = 'RTL1p0' ",
                  "and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
                  "and [DropType] in ('Standard')",
                  "and ([TrendYYYYWW] is null or[TrendYYYYWW] = '')",
                  "and configuration not in (select distinct configuration",
                  "      from [V_IPG_CARBON_MILESTONE] ",
                  "      WHERE 1=1 ",
                  "      and[drop] = 'RTL1p0' ",
                  "      and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
                  "      and [DropType] in ('Standard')",
                  "      and [trendYYYYWW] <>'')",
                  "group by configuration",
                  "",
                  "UNION ALL",
                  "/*PIC config has trenddate*/",
                  "select configuration",
                  ",'PIC' as [Category]",
                  ", min([TrendYYYYWW]) as [TrendYYYYWW]  /*per discussion with Kristine/Punit on 8/28/19, we will pull earliest date for RTL1p0 for PIC config as well */",
                  ",0  as [IsBlankTrendDate]  ",
                  "from [V_IPG_CARBON_MILESTONE]a",
                  "WHERE [DevOrg] = 'IPG' ",
                  "and[drop] = 'RTL1p0' ",
                  "and [reuse] in ('configurable')",
                  "and [DropType] in ('Standard')",
                  "and [TrendYYYYWW] <>''",
                  "group by configuration",
                  "",
                  "UNION ALL",
                  "/*PIC config has blanktrenddate*/",
                  "select configuration",
                  ",'PIC' as [Category]",
                  ", min([TrendYYYYWW]) as [TrendYYYYWW]  ",
                  ",1 as [IsBlankTrendDate] ",
                  "from [V_IPG_CARBON_MILESTONE]a",
                  "WHERE [DevOrg] = 'IPG' ",
                  "and[drop] = 'RTL1p0' ",
                  "and [reuse] in ('configurable')",
                  "and [DropType] in ('Standard')",
                  "and ([TrendYYYYWW] is null or[TrendYYYYWW] = '')",
                  " and configuration not in (select distinct configuration",
                  "\t\t\t   from [V_IPG_CARBON_MILESTONE] a",
                  "\t\t\t   WHERE 1=1 ",
                  "\t\t\t  and [DevOrg] = 'IPG' ",
                  "\t\t\t   and[drop] = 'RTL1p0' ",
                  "\t\t\t   and [reuse] in ('configurable')",
                  "\t\t\t   and [DropType] in ('Standard')",
                  "\t\t\t   and [trendYYYYWW] <>'')",
                  "group by configuration</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "/*----------------------------------------------------------------------------------------------------------------------------------------",
              "2021-02-25 <TinaD> - Create v_ipg_RTL1p0date based on cig_SocFiledBug_RTL_date_cached with only NonPIC config date",
              "------------------------------------------------------------------------------------------------------------------------------------------*/",
              "select configuration",
              ",'NonPIC' as [Category]",
              ", min([TrendYYYYWW]) as [TrendYYYYWW]",
              ", 0 as [IsBlankTrendDate] ",
              "from [V_IPG_CARBON_MILESTONE] a",
              "WHERE [DevOrg] = 'IPG' ",
              "and[drop] = 'RTL1p0' ",
              "and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
              "and [DropType] in ('Standard')",
              "and  configuration not like 'IOSF PSF%' ",
              "and [TrendYYYYWW] <>''",
              "group by configuration",
              "",
              "UNION ",
              "/*To pull in IOSF confi per Punit's request On PSF, we are supposed to do 1p0 drop ",
              "and then always do 1p1 drop. As the 1p0 drop is mostly early enough and historically ",
              "seen it change from 1p0 to 1p1, so PSF team has stopped doing 1p0 standard drop (no IPDS) ",
              "and label it as early and then 1p1 they will do standard drop (with IPDS). So we pull in all droptype for this family. ",
              "On 9/3/2019,confirmed with Kristine. We will use standard drop for all rtlp0 and rtl1p1 drops*/",
              "",
              "select configuration",
              ",'NonPIC' as [Category]",
              ", min([TrendYYYYWW]) as [TrendYYYYWW]",
              ", 0 as [IsBlankTrendDate] ",
              "from [V_IPG_CARBON_MILESTONE]a",
              "WHERE [DevOrg] = 'IPG' ",
              "and[drop] in ('RTL1p0', 'RTL1p1') ",
              "and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
              "and [TrendYYYYWW] <>''",
              "and  configuration like 'IOSF PSF%'",
              "group by configuration",
              "",
              "",
              "UNION ALL",
              "/*Non PIC config has blank trenddate*/",
              "select configuration",
              ",'NonPIC' as [Category]",
              ", min([TrendYYYYWW]) as [TrendYYYYWW]",
              ", 1 as [IsBlankTrendDate] ",
              "from [V_IPG_CARBON_MILESTONE] ",
              "WHERE [DevOrg] = 'IPG' ",
              "and[drop] = 'RTL1p0' ",
              "and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
              "and [DropType] in ('Standard')",
              "and ([TrendYYYYWW] is null or[TrendYYYYWW] = '')",
              "and configuration not in (select distinct configuration",
              "      from [V_IPG_CARBON_MILESTONE] ",
              "      WHERE 1=1 ",
              "      and[drop] = 'RTL1p0' ",
              "      and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
              "      and [DropType] in ('Standard')",
              "      and [trendYYYYWW] <>'')",
              "group by configuration",
              "",
              "UNION ALL",
              "/*PIC config has trenddate*/",
              "select configuration",
              ",'PIC' as [Category]",
              ", min([TrendYYYYWW]) as [TrendYYYYWW]  /*per discussion with Kristine/Punit on 8/28/19, we will pull earliest date for RTL1p0 for PIC config as well */",
              ",0  as [IsBlankTrendDate]  ",
              "from [V_IPG_CARBON_MILESTONE]a",
              "WHERE [DevOrg] = 'IPG' ",
              "and[drop] = 'RTL1p0' ",
              "and [reuse] in ('configurable')",
              "and [DropType] in ('Standard')",
              "and [TrendYYYYWW] <>''",
              "group by configuration",
              "",
              "UNION ALL",
              "/*PIC config has blanktrenddate*/",
              "select configuration",
              ",'PIC' as [Category]",
              ", min([TrendYYYYWW]) as [TrendYYYYWW]  ",
              ",1 as [IsBlankTrendDate] ",
              "from [V_IPG_CARBON_MILESTONE]a",
              "WHERE [DevOrg] = 'IPG' ",
              "and[drop] = 'RTL1p0' ",
              "and [reuse] in ('configurable')",
              "and [DropType] in ('Standard')",
              "and ([TrendYYYYWW] is null or[TrendYYYYWW] = '')",
              " and configuration not in (select distinct configuration",
              "\t\t\t   from [V_IPG_CARBON_MILESTONE] a",
              "\t\t\t   WHERE 1=1 ",
              "\t\t\t  and [DevOrg] = 'IPG' ",
              "\t\t\t   and[drop] = 'RTL1p0' ",
              "\t\t\t   and [reuse] in ('configurable')",
              "\t\t\t   and [DropType] in ('Standard')",
              "\t\t\t   and [trendYYYYWW] <>'')",
              "group by configuration"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryRTL1p0"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>/*----------------------------------------------------------------------------------------------------------------------------------------",
              "2021-02-25 <TinaD> - Create v_ipg_RTL1p0date based on cig_SocFiledBug_RTL_date_cached with only NonPIC config date",
              "------------------------------------------------------------------------------------------------------------------------------------------*/",
              "select configuration",
              ",'NonPIC' as [Category]",
              ", min([TrendYYYYWW]) as [TrendYYYYWW]",
              ", 0 as [IsBlankTrendDate] ",
              "from [V_IPG_CARBON_MILESTONE] a",
              "WHERE [DevOrg] = 'IPG' ",
              "and[drop] = 'RTL1p0' ",
              "and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
              "and [DropType] in ('Standard')",
              "and  configuration not like 'IOSF PSF%' ",
              "and [TrendYYYYWW] <>''",
              "group by configuration",
              "",
              "UNION ",
              "/*To pull in IOSF confi per Punit's request On PSF, we are supposed to do 1p0 drop ",
              "and then always do 1p1 drop. As the 1p0 drop is mostly early enough and historically ",
              "seen it change from 1p0 to 1p1, so PSF team has stopped doing 1p0 standard drop (no IPDS) ",
              "and label it as early and then 1p1 they will do standard drop (with IPDS). So we pull in all droptype for this family. ",
              "On 9/3/2019,confirmed with Kristine. We will use standard drop for all rtlp0 and rtl1p1 drops*/",
              "",
              "select configuration",
              ",'NonPIC' as [Category]",
              ", min([TrendYYYYWW]) as [TrendYYYYWW]",
              ", 0 as [IsBlankTrendDate] ",
              "from [V_IPG_CARBON_MILESTONE]a",
              "WHERE [DevOrg] = 'IPG' ",
              "and[drop] in ('RTL1p0', 'RTL1p1') ",
              "and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
              "and [TrendYYYYWW] <>''",
              "and  configuration like 'IOSF PSF%'",
              "group by configuration",
              "",
              "",
              "UNION ALL",
              "/*Non PIC config has blank trenddate*/",
              "select configuration",
              ",'NonPIC' as [Category]",
              ", min([TrendYYYYWW]) as [TrendYYYYWW]",
              ", 1 as [IsBlankTrendDate] ",
              "from [V_IPG_CARBON_MILESTONE] ",
              "WHERE [DevOrg] = 'IPG' ",
              "and[drop] = 'RTL1p0' ",
              "and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
              "and [DropType] in ('Standard')",
              "and ([TrendYYYYWW] is null or[TrendYYYYWW] = '')",
              "and configuration not in (select distinct configuration",
              "      from [V_IPG_CARBON_MILESTONE] ",
              "      WHERE 1=1 ",
              "      and[drop] = 'RTL1p0' ",
              "      and [reuse] in ('Baseline Development' , 'Minor Derivative', 'Major Derivative', 'Medium Derivative', 'test chip')",
              "      and [DropType] in ('Standard')",
              "      and [trendYYYYWW] <>'')",
              "group by configuration",
              "",
              "UNION ALL",
              "/*PIC config has trenddate*/",
              "select configuration",
              ",'PIC' as [Category]",
              ", min([TrendYYYYWW]) as [TrendYYYYWW]  /*per discussion with Kristine/Punit on 8/28/19, we will pull earliest date for RTL1p0 for PIC config as well */",
              ",0  as [IsBlankTrendDate]  ",
              "from [V_IPG_CARBON_MILESTONE]a",
              "WHERE [DevOrg] = 'IPG' ",
              "and[drop] = 'RTL1p0' ",
              "and [reuse] in ('configurable')",
              "and [DropType] in ('Standard')",
              "and [TrendYYYYWW] <>''",
              "group by configuration",
              "",
              "UNION ALL",
              "/*PIC config has blanktrenddate*/",
              "select configuration",
              ",'PIC' as [Category]",
              ", min([TrendYYYYWW]) as [TrendYYYYWW]  ",
              ",1 as [IsBlankTrendDate] ",
              "from [V_IPG_CARBON_MILESTONE]a",
              "WHERE [DevOrg] = 'IPG' ",
              "and[drop] = 'RTL1p0' ",
              "and [reuse] in ('configurable')",
              "and [DropType] in ('Standard')",
              "and ([TrendYYYYWW] is null or[TrendYYYYWW] = '')",
              " and configuration not in (select distinct configuration",
              "\t\t\t   from [V_IPG_CARBON_MILESTONE] a",
              "\t\t\t   WHERE 1=1 ",
              "\t\t\t  and [DevOrg] = 'IPG' ",
              "\t\t\t   and[drop] = 'RTL1p0' ",
              "\t\t\t   and [reuse] in ('configurable')",
              "\t\t\t   and [DropType] in ('Standard')",
              "\t\t\t   and [trendYYYYWW] <>'')",
              "group by configuration</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "state_xjoin",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "ww",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "ww_list[ww]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_m4",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "ww_list[ww_m4]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "state",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[state]",
            "sortByColumn": "order"
          },
          {
            "type": "calculatedTableColumn",
            "name": "order",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[order]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CROSSJOIN(ww_list, UNION(ROW(\"state\", \"Incoming\", \"order\", 1), ROW(\"state\", \"Closed\", \"order\", 3), Row(\"state\", \"Repo_Mod\", \"order\", 2), Row(\"state\", \"Future\", \"order\", 4)))"
            }
          }
        ]
      },
      {
        "name": "QueryTapein",
        "columns": [
          {
            "name": "project",
            "dataType": "string",
            "sourceColumn": "project",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Tapein",
            "dataType": "string",
            "sourceColumn": "Tapein",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "QueryTapein",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select distinct",
                "project",
                ",isnull([Actual Finish YYYYWW],[Trend YYYYWW]) as [Tapein]",
                "",
                "from [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES] ",
                "where 1=1",
                "and milestone like '%tape in%' ",
                "and trend is not null and trend <> ''",
                "and (",
                "\t[Planning State] not like '%Cancelled%' ",
                "\tand [Planning State] not like '%Completed%' ",
                "\tand [Planning State] not like '%Delete%' ",
                "\tand [Planning State] not like '%Abandoned%'",
                ")",
                "and [Stepping Name] = 'A0'",
                "",
                "UNION ALL",
                "",
                "select ",
                "a.project",
                ", min(a.Tapein)",
                "from",
                "(",
                "\tselect ",
                "\tproject",
                "\t,isnull([Actual Finish YYYYWW],[Trend YYYYWW]) as [Tapein]",
                "",
                "\tfrom [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES] ",
                "\twhere 1=1",
                "\tand milestone like '%tape in%' ",
                "\tand trend is not null and trend <> ''",
                "\tand (",
                "\t\t[Planning State] not like '%Cancelled%' ",
                "\t\tand [Planning State] not like '%Completed%' ",
                "\t\tand [Planning State] not like '%Delete%' ",
                "\t\tand [Planning State] not like '%Abandoned%'",
                "\t)",
                "\tand [Stepping Name] <> 'A0'",
                "\tand project not in ",
                "\t(",
                "\t\tselect ",
                "\t\tproject",
                "\t\tfrom [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES] ",
                "\t\twhere 1=1",
                "\t\tand milestone like '%tape in%' ",
                "\t\tand trend is not null and trend <> ''",
                "\t\tand (",
                "\t\t\t[Planning State] not like '%Cancelled%' ",
                "\t\t\tand [Planning State] not like '%Completed%' ",
                "\t\t\tand [Planning State] not like '%Delete%' ",
                "\t\t\tand [Planning State] not like '%Abandoned%'",
                "\t\t)",
                "\t\tand [Stepping Name] = 'A0'",
                "\t)",
                ") a",
                "group by a.project"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct",
                  "project",
                  ",isnull([Actual Finish YYYYWW],[Trend YYYYWW]) as [Tapein]",
                  "",
                  "from [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES] ",
                  "where 1=1",
                  "and milestone like '%tape in%' ",
                  "and trend is not null and trend <> ''",
                  "and (",
                  "\t[Planning State] not like '%Cancelled%' ",
                  "\tand [Planning State] not like '%Completed%' ",
                  "\tand [Planning State] not like '%Delete%' ",
                  "\tand [Planning State] not like '%Abandoned%'",
                  ")",
                  "and [Stepping Name] = 'A0'",
                  "",
                  "UNION ALL",
                  "",
                  "select ",
                  "a.project",
                  ", min(a.Tapein)",
                  "from",
                  "(",
                  "\tselect ",
                  "\tproject",
                  "\t,isnull([Actual Finish YYYYWW],[Trend YYYYWW]) as [Tapein]",
                  "",
                  "\tfrom [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES] ",
                  "\twhere 1=1",
                  "\tand milestone like '%tape in%' ",
                  "\tand trend is not null and trend <> ''",
                  "\tand (",
                  "\t\t[Planning State] not like '%Cancelled%' ",
                  "\t\tand [Planning State] not like '%Completed%' ",
                  "\t\tand [Planning State] not like '%Delete%' ",
                  "\t\tand [Planning State] not like '%Abandoned%'",
                  "\t)",
                  "\tand [Stepping Name] <> 'A0'",
                  "\tand project not in ",
                  "\t(",
                  "\t\tselect ",
                  "\t\tproject",
                  "\t\tfrom [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES] ",
                  "\t\twhere 1=1",
                  "\t\tand milestone like '%tape in%' ",
                  "\t\tand trend is not null and trend <> ''",
                  "\t\tand (",
                  "\t\t\t[Planning State] not like '%Cancelled%' ",
                  "\t\t\tand [Planning State] not like '%Completed%' ",
                  "\t\t\tand [Planning State] not like '%Delete%' ",
                  "\t\t\tand [Planning State] not like '%Abandoned%'",
                  "\t\t)",
                  "\t\tand [Stepping Name] = 'A0'",
                  "\t)",
                  ") a",
                  "group by a.project</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct",
              "project",
              ",isnull([Actual Finish YYYYWW],[Trend YYYYWW]) as [Tapein]",
              "",
              "from [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES] ",
              "where 1=1",
              "and milestone like '%tape in%' ",
              "and trend is not null and trend <> ''",
              "and (",
              "\t[Planning State] not like '%Cancelled%' ",
              "\tand [Planning State] not like '%Completed%' ",
              "\tand [Planning State] not like '%Delete%' ",
              "\tand [Planning State] not like '%Abandoned%'",
              ")",
              "and [Stepping Name] = 'A0'",
              "",
              "UNION ALL",
              "",
              "select ",
              "a.project",
              ", min(a.Tapein)",
              "from",
              "(",
              "\tselect ",
              "\tproject",
              "\t,isnull([Actual Finish YYYYWW],[Trend YYYYWW]) as [Tapein]",
              "",
              "\tfrom [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES] ",
              "\twhere 1=1",
              "\tand milestone like '%tape in%' ",
              "\tand trend is not null and trend <> ''",
              "\tand (",
              "\t\t[Planning State] not like '%Cancelled%' ",
              "\t\tand [Planning State] not like '%Completed%' ",
              "\t\tand [Planning State] not like '%Delete%' ",
              "\t\tand [Planning State] not like '%Abandoned%'",
              "\t)",
              "\tand [Stepping Name] <> 'A0'",
              "\tand project not in ",
              "\t(",
              "\t\tselect ",
              "\t\tproject",
              "\t\tfrom [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES] ",
              "\t\twhere 1=1",
              "\t\tand milestone like '%tape in%' ",
              "\t\tand trend is not null and trend <> ''",
              "\t\tand (",
              "\t\t\t[Planning State] not like '%Cancelled%' ",
              "\t\t\tand [Planning State] not like '%Completed%' ",
              "\t\t\tand [Planning State] not like '%Delete%' ",
              "\t\t\tand [Planning State] not like '%Abandoned%'",
              "\t\t)",
              "\t\tand [Stepping Name] = 'A0'",
              "\t)",
              ") a",
              "group by a.project"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryTapein"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct",
              "project",
              ",isnull([Actual Finish YYYYWW],[Trend YYYYWW]) as [Tapein]",
              "",
              "from [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES] ",
              "where 1=1",
              "and milestone like '%tape in%' ",
              "and trend is not null and trend <> ''",
              "and (",
              "\t[Planning State] not like '%Cancelled%' ",
              "\tand [Planning State] not like '%Completed%' ",
              "\tand [Planning State] not like '%Delete%' ",
              "\tand [Planning State] not like '%Abandoned%'",
              ")",
              "and [Stepping Name] = 'A0'",
              "",
              "UNION ALL",
              "",
              "select ",
              "a.project",
              ", min(a.Tapein)",
              "from",
              "(",
              "\tselect ",
              "\tproject",
              "\t,isnull([Actual Finish YYYYWW],[Trend YYYYWW]) as [Tapein]",
              "",
              "\tfrom [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES] ",
              "\twhere 1=1",
              "\tand milestone like '%tape in%' ",
              "\tand trend is not null and trend <> ''",
              "\tand (",
              "\t\t[Planning State] not like '%Cancelled%' ",
              "\t\tand [Planning State] not like '%Completed%' ",
              "\t\tand [Planning State] not like '%Delete%' ",
              "\t\tand [Planning State] not like '%Abandoned%'",
              "\t)",
              "\tand [Stepping Name] <> 'A0'",
              "\tand project not in ",
              "\t(",
              "\t\tselect ",
              "\t\tproject",
              "\t\tfrom [V_ATLAS_PRODUCT_MILESTONES_WITH_PROPERTIES] ",
              "\t\twhere 1=1",
              "\t\tand milestone like '%tape in%' ",
              "\t\tand trend is not null and trend <> ''",
              "\t\tand (",
              "\t\t\t[Planning State] not like '%Cancelled%' ",
              "\t\t\tand [Planning State] not like '%Completed%' ",
              "\t\t\tand [Planning State] not like '%Delete%' ",
              "\t\t\tand [Planning State] not like '%Abandoned%'",
              "\t\t)",
              "\t\tand [Stepping Name] = 'A0'",
              "\t)",
              ") a",
              "group by a.project</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "QueryGladius",
        "columns": [
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "IpFamilyId",
            "dataType": "int64",
            "sourceColumn": "IpFamilyId",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "old_family",
            "dataType": "string",
            "sourceColumn": "old_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Family",
            "dataType": "string",
            "sourceColumn": "Family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Gladius",
            "dataType": "string",
            "sourceColumn": "Gladius",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "suborg_supplier",
            "dataType": "string",
            "sourceColumn": "suborg_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "supplier.sub_org",
            "dataType": "string",
            "sourceColumn": "supplier.sub_org",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "devsuborg",
            "dataType": "string",
            "sourceColumn": "devsuborg",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ip_supplier",
            "dataType": "string",
            "sourceColumn": "ip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "old_supplier",
            "dataType": "string",
            "sourceColumn": "old_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Dev_Lead",
            "dataType": "string",
            "sourceColumn": "Dev_Lead",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Execution_Lead",
            "dataType": "string",
            "sourceColumn": "Execution_Lead",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Product_Owner",
            "dataType": "string",
            "sourceColumn": "Product_Owner",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Support_Lead",
            "dataType": "string",
            "sourceColumn": "Support_Lead",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Architecture_Lead",
            "dataType": "string",
            "sourceColumn": "Architecture_Lead",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Program_Manager",
            "dataType": "string",
            "sourceColumn": "Program_Manager",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "reason_other",
            "dataType": "string",
            "sourceColumn": "reason_other",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "siip_tracked",
            "dataType": "string",
            "sourceColumn": "siip_tracked",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "QueryGladius",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "select * from [v_ipg_family_gladius]",
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select * from [v_ipg_family_gladius]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select * from [v_ipg_family_gladius]"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryGladius"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select * from [v_ipg_family_gladius]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "QueryCIGActiveIP",
        "columns": [
          {
            "name": "family.name",
            "dataType": "string",
            "sourceColumn": "family.name",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsActiveIP",
            "dataType": "int64",
            "sourceColumn": "IsActiveIP",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "QueryCIGActiveIP",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select distinct  [family.name]",
                ",CASE WHEN [family.name] in ('PSTH', 'SATA3 Controller', 'PES P2SB', 'PES ITSS', 'PES RTC', 'PES LPC', 'PES SMB') THEN 0 ELSE 1 END as IsActiveIP",
                "  from [DW.release_central.family] where ",
                "ww = datepart(ww, getutcdate())",
                "and [family.hsdes_tenant] in ('sip', 'client_conn_ip') and [family.visibility] = 'show'"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct  [family.name]",
                  ",CASE WHEN [family.name] in ('PSTH', 'SATA3 Controller', 'PES P2SB', 'PES ITSS', 'PES RTC', 'PES LPC', 'PES SMB') THEN 0 ELSE 1 END as IsActiveIP",
                  "  from [DW.release_central.family] where ",
                  "ww = datepart(ww, getutcdate())",
                  "and [family.hsdes_tenant] in ('sip', 'client_conn_ip') and [family.visibility] = 'show'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct  [family.name]",
              ",CASE WHEN [family.name] in ('PSTH', 'SATA3 Controller', 'PES P2SB', 'PES ITSS', 'PES RTC', 'PES LPC', 'PES SMB') THEN 0 ELSE 1 END as IsActiveIP",
              "  from [DW.release_central.family] where ",
              "ww = datepart(ww, getutcdate())",
              "and [family.hsdes_tenant] in ('sip', 'client_conn_ip') and [family.visibility] = 'show'"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryCIGActiveIP"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct  [family.name]",
              ",CASE WHEN [family.name] in ('PSTH', 'SATA3 Controller', 'PES P2SB', 'PES ITSS', 'PES RTC', 'PES LPC', 'PES SMB') THEN 0 ELSE 1 END as IsActiveIP",
              "  from [DW.release_central.family] where ",
              "ww = datepart(ww, getutcdate())",
              "and [family.hsdes_tenant] in ('sip', 'client_conn_ip') and [family.visibility] = 'show'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "IntelYearWW",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Intel Year-Work Week",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "QueryIntelWW[Intel Year-Work Week]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "WWSeqNbr",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "QueryIntelWW[WWSeqNbr]"
          },
          {
            "type": "calculated",
            "name": "year",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "left([Intel Year-Work Week], 4)"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(QueryIntelWW, FILTER(QueryIntelWW, QueryIntelWW[Intel Year-Work Week] <= MAX(QueryBugHistorical[currentww])))"
            }
          }
        ]
      },
      {
        "name": "QueryProjectAffected",
        "columns": [
          {
            "name": "project",
            "dataType": "string",
            "sourceColumn": "project",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "project_affected",
            "dataType": "string",
            "sourceColumn": "project_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "tenant",
            "dataType": "string",
            "sourceColumn": "tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww",
            "dataType": "int64",
            "sourceColumn": "ww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "original_family",
            "dataType": "string",
            "sourceColumn": "original_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "family",
            "dataType": "string",
            "sourceColumn": "family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ip_supplier",
            "dataType": "string",
            "sourceColumn": "ip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release",
            "dataType": "string",
            "sourceColumn": "release",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "release_affected",
            "dataType": "string",
            "sourceColumn": "release_affected",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "tag",
            "dataType": "string",
            "sourceColumn": "tag",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "status_order",
            "dataType": "int64",
            "sourceColumn": "status_order",
            "sourceProviderType": "Integer"
          },
          {
            "name": "status_detail",
            "dataType": "string",
            "sourceColumn": "status_detail",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "id",
            "dataType": "int64",
            "sourceColumn": "id",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "lineage",
            "dataType": "int64",
            "sourceColumn": "lineage",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "original_lineage",
            "dataType": "int64",
            "sourceColumn": "original_lineage",
            "sourceProviderType": "Integer"
          },
          {
            "name": "title",
            "dataType": "string",
            "sourceColumn": "title",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_submitted_date",
            "dataType": "string",
            "sourceColumn": "ww_submitted_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.env_found",
            "dataType": "string",
            "sourceColumn": "bugeco.env_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.team_found",
            "dataType": "string",
            "sourceColumn": "bugeco.team_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bug_category",
            "dataType": "string",
            "sourceColumn": "bug_category",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_tenant",
            "dataType": "string",
            "sourceColumn": "from_tenant",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "from_subject",
            "dataType": "string",
            "sourceColumn": "from_subject",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.type",
            "dataType": "string",
            "sourceColumn": "bugeco.type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "component",
            "dataType": "string",
            "sourceColumn": "component",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "url",
            "dataType": "string",
            "sourceColumn": "url",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ccb_prq_gating",
            "dataType": "string",
            "sourceColumn": "ccb_prq_gating",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "currentww",
            "dataType": "int64",
            "sourceColumn": "currentww",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentmonth",
            "dataType": "int64",
            "sourceColumn": "currentmonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "currentyear",
            "dataType": "int64",
            "sourceColumn": "currentyear",
            "sourceProviderType": "Integer"
          },
          {
            "name": "subip_family",
            "dataType": "string",
            "sourceColumn": "subip_family",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "subip_supplier",
            "dataType": "string",
            "sourceColumn": "subip_supplier",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "bugeco.release_found",
            "dataType": "string",
            "sourceColumn": "bugeco.release_found",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "supplier_org",
            "dataType": "string",
            "sourceColumn": "supplier_org",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_PreSiPostSi",
            "dataType": "string",
            "sourceColumn": "is_PreSiPostSi",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "is_found_bySoc",
            "dataType": "string",
            "sourceColumn": "is_found_bySoc",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "lineage_final",
            "dataType": "int64",
            "sourceColumn": "lineage_final",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "IsSubIP",
            "dataType": "string",
            "sourceColumn": "IsSubIP",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "sub_bugcategory",
            "dataType": "string",
            "sourceColumn": "sub_bugcategory",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_status",
            "dataType": "string",
            "sourceColumn": "retro_status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_ip_escape",
            "dataType": "string",
            "sourceColumn": "retro_ip_escape",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_learning",
            "dataType": "string",
            "sourceColumn": "retro_global_learning",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_global_action",
            "dataType": "string",
            "sourceColumn": "retro_global_action",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_analysis",
            "dataType": "string",
            "sourceColumn": "retro_analysis",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "retro_learnings",
            "dataType": "string",
            "sourceColumn": "retro_learnings",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "owner",
            "dataType": "string",
            "sourceColumn": "owner",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_closed_date",
            "dataType": "string",
            "sourceColumn": "ww_closed_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ww_repo_modified_date",
            "dataType": "string",
            "sourceColumn": "ww_repo_modified_date",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "totalID",
            "dataType": "int64",
            "sourceColumn": "totalID",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "QueryProjectAffected",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "select distinct ",
                "[project]",
                ",[project_affected]",
                ",[tenant]",
                ",[ww] ",
                ",[original_family]",
                ",[family]",
                ",[priority]",
                ",[ip_supplier]",
                ",[release]",
                ",[release_affected]",
                ",[tag]",
                ",[status]",
                ",[status_order]",
                ",[status_detail] ",
                ",[id]",
                ",[lineage]",
                ",[original_lineage]",
                ",[title]",
                ",[ww_submitted_date]",
                ",[bugeco.env_found]",
                ",[bugeco.team_found]",
                ",[bug_category]",
                ",[from_tenant]",
                ",[from_subject]",
                ",[bugeco.type]",
                ",[component]",
                ",[url]",
                ",[ccb_prq_gating]",
                ",[currentww] ",
                ",[currentmonth]",
                ",[currentyear]",
                ",[subip_family]",
                ",[subip_supplier]",
                ",[bugeco.release_found]",
                ",[supplier_org]",
                ",[is_PreSiPostSi]",
                ",[is_found_bySoc]",
                ",[lineage_final]",
                ",[IsSubIP]",
                ",[sub_bugcategory]",
                ",[retro_status]",
                ",[retro_ip_escape]",
                ",[retro_global_learning]",
                ",[retro_global_action]",
                ",[retro_analysis]",
                ",[retro_learnings]",
                ",[owner]",
                ",[ww_closed_date]",
                ",[ww_repo_modified_date]",
                ",[totalID]",
                "from CACHED_ipg_bug_project_affected"
              ],
              "dataSource": "iBI"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct ",
                  "[project]",
                  ",[project_affected]",
                  ",[tenant]",
                  ",[ww] ",
                  ",[original_family]",
                  ",[family]",
                  ",[priority]",
                  ",[ip_supplier]",
                  ",[release]",
                  ",[release_affected]",
                  ",[tag]",
                  ",[status]",
                  ",[status_order]",
                  ",[status_detail] ",
                  ",[id]",
                  ",[lineage]",
                  ",[original_lineage]",
                  ",[title]",
                  ",[ww_submitted_date]",
                  ",[bugeco.env_found]",
                  ",[bugeco.team_found]",
                  ",[bug_category]",
                  ",[from_tenant]",
                  ",[from_subject]",
                  ",[bugeco.type]",
                  ",[component]",
                  ",[url]",
                  ",[ccb_prq_gating]",
                  ",[currentww] ",
                  ",[currentmonth]",
                  ",[currentyear]",
                  ",[subip_family]",
                  ",[subip_supplier]",
                  ",[bugeco.release_found]",
                  ",[supplier_org]",
                  ",[is_PreSiPostSi]",
                  ",[is_found_bySoc]",
                  ",[lineage_final]",
                  ",[IsSubIP]",
                  ",[sub_bugcategory]",
                  ",[retro_status]",
                  ",[retro_ip_escape]",
                  ",[retro_global_learning]",
                  ",[retro_global_action]",
                  ",[retro_analysis]",
                  ",[retro_learnings]",
                  ",[owner]",
                  ",[ww_closed_date]",
                  ",[ww_repo_modified_date]",
                  ",[totalID]",
                  "from CACHED_ipg_bug_project_affected</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct ",
              "[project]",
              ",[project_affected]",
              ",[tenant]",
              ",[ww] ",
              ",[original_family]",
              ",[family]",
              ",[priority]",
              ",[ip_supplier]",
              ",[release]",
              ",[release_affected]",
              ",[tag]",
              ",[status]",
              ",[status_order]",
              ",[status_detail] ",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ",[ww_submitted_date]",
              ",[bugeco.env_found]",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[from_tenant]",
              ",[from_subject]",
              ",[bugeco.type]",
              ",[component]",
              ",[url]",
              ",[ccb_prq_gating]",
              ",[currentww] ",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ",[supplier_org]",
              ",[is_PreSiPostSi]",
              ",[is_found_bySoc]",
              ",[lineage_final]",
              ",[IsSubIP]",
              ",[sub_bugcategory]",
              ",[retro_status]",
              ",[retro_ip_escape]",
              ",[retro_global_learning]",
              ",[retro_global_action]",
              ",[retro_analysis]",
              ",[retro_learnings]",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[totalID]",
              "from CACHED_ipg_bug_project_affected"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "QueryProjectAffected"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct ",
              "[project]",
              ",[project_affected]",
              ",[tenant]",
              ",[ww] ",
              ",[original_family]",
              ",[family]",
              ",[priority]",
              ",[ip_supplier]",
              ",[release]",
              ",[release_affected]",
              ",[tag]",
              ",[status]",
              ",[status_order]",
              ",[status_detail] ",
              ",[id]",
              ",[lineage]",
              ",[original_lineage]",
              ",[title]",
              ",[ww_submitted_date]",
              ",[bugeco.env_found]",
              ",[bugeco.team_found]",
              ",[bug_category]",
              ",[from_tenant]",
              ",[from_subject]",
              ",[bugeco.type]",
              ",[component]",
              ",[url]",
              ",[ccb_prq_gating]",
              ",[currentww] ",
              ",[currentmonth]",
              ",[currentyear]",
              ",[subip_family]",
              ",[subip_supplier]",
              ",[bugeco.release_found]",
              ",[supplier_org]",
              ",[is_PreSiPostSi]",
              ",[is_found_bySoc]",
              ",[lineage_final]",
              ",[IsSubIP]",
              ",[sub_bugcategory]",
              ",[retro_status]",
              ",[retro_ip_escape]",
              ",[retro_global_learning]",
              ",[retro_global_action]",
              ",[retro_analysis]",
              ",[retro_learnings]",
              ",[owner]",
              ",[ww_closed_date]",
              ",[ww_repo_modified_date]",
              ",[totalID]",
              "from CACHED_ipg_bug_project_affected</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "dccb_state_xjoin",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "ww",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "ww_list[ww]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ww_m4",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "ww_list[ww_m4]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "state",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[state]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CROSSJOIN(ww_list, UNION(ROW(\"state\", \"Incoming\"), ROW(\"state\", \"Dispositioned\")))"
            }
          }
        ]
      },
      {
        "name": "status_order",
        "columns": [
          {
            "type": "calculated",
            "name": "status_order",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "SWITCH([status], \"open\", 1, \"change_defined\", 2, \"approved\", 3, \"implemented\", 4, \"repo_modified\", 5, \"verified\", 6, \"complete\", 7, \"future\", 8, \"rejected\", 9, 0)"
          },
          {
            "type": "calculatedTableColumn",
            "name": "status",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[status]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "UNION(row(\"status\", \"complete\"), ",
                "row(\"status\", \"rejected\"), ",
                "row(\"status\", \"future\"), ",
                "row(\"status\", \"repo_modified\"), ",
                "row(\"status\", \"change_defined\"), ",
                "row(\"status\", \"approved\"), ",
                "row(\"status\", \"open\")",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "line_select",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "line",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[line]",
            "sortByColumn": "order"
          },
          {
            "type": "calculatedTableColumn",
            "name": "order",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[order]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "UNION(row(\"line\", \"Pending\", \"order\", 1), ",
                "row(\"line\", \"Uncoded\", \"order\", 2), ",
                "row(\"line\", \"Incoming 4wk Avg\", \"order\", 3), ",
                "row(\"line\", \"Repo_mod 4wk Avg\", \"order\", 4), ",
                "row(\"line\", \"Closed 4wk Avg\", \"order\", 5), ",
                "row(\"line\", \"Future 4wk Avg\", \"order\", 6)",
                ") "
              ]
            }
          }
        ]
      },
      {
        "name": "Column_slicer",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Item",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Item]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "UNION(ROW(\"Item\",\"Bug_id\"),ROW(\"Item\",\"url\"),ROW(\"item\",\"ip_supplier\"),ROW(\"item\",\"SOC Die\"),ROW(\"item\",\"family\"),ROW(\"item\",\"org_is_found_bySoc\"),ROW(\"item\",\"is_PreSiPostSi\"),ROW(\"item\",\"sub_bugcategory\"),ROW(\"item\",\"ww_submitted_date\"),ROW(\"item\",\"SubmittedYear_Quarter\"),ROW(\"item\",\"title\"),ROW(\"item\",\"bug_category\"),ROW(\"item\",\"status\"),ROW(\"item\",\"status_detail\"),ROW(\"item\",\"priority\"),ROW(\"item\",\"owner\"),ROW(\"item\",\"ccb_prq_gating\"),ROW(\"item\",\"retro_status\"),ROW(\"item\",\"retro_ip_escape\"),ROW(\"item\",\"retro_global_action\"),ROW(\"item\",\"retro_global_learning\"),ROW(\"item\",\"retro_analysis\"),ROW(\"item\",\"retro_learnings\"),ROW(\"item\",\"component\"),ROW(\"item\",\"Configuration\"),ROW(\"item\",\"release_affected\"),ROW(\"item\",\"tenant\"),ROW(\"item\",\"from_tenant\"),ROW(\"item\",\"submitted_by\"),ROW(\"item\",\"updated_by\"),ROW(\"item\",\"resolutionSLA\"),ROW(\"item\",\"responseSLA\"),ROW(\"item\",\"bugeco.env_found\"),ROW(\"item\",\"bugeco.team_found\"),ROW(\"item\",\"bugeco.type\"),ROW(\"item\",\"ingredient\"),ROW(\"item\",\"closed_date\"),ROW(\"item\",\"closed_ww_date\"),ROW(\"item\",\"updated_ww_date\"),ROW(\"item\",\"repo_modified_date\"),ROW(\"item\",\"repo_modified_ww_date\"),ROW(\"item\",\"sla_resolution_met\"),ROW(\"item\",\"ccb_prq_gating\"),ROW(\"item\",\"release\"),ROW(\"item\",\"ww_sla_response_date\"),ROW(\"item\",\"ww_sla_resolution_date\"),ROW(\"item\",\"ww\"))"
            }
          }
        ]
      },
      {
        "name": "ccb_approv_ww_list",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "ww_apprv_axis",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "QueryBugHistorical[ww_submitted_date]"
          },
          {
            "type": "calculated",
            "name": "apprv_year",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "LEFT([ww_apprv_axis], 4)"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(QueryBugHistorical[ww_submitted_date])"
            }
          }
        ]
      },
      {
        "name": "ccb_rej_ww_list",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "ww_rej_axis",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "QueryBugHistorical[ww_submitted_date]"
          },
          {
            "type": "calculated",
            "name": "rej_year",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "LEFT([ww_rej_axis], 4)"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(QueryBugHistorical[ww_submitted_date])"
            }
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "be5c6ae5-1dc5-4e9a-8425-21f6c68f3dbc",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "validator",
        "toTable": "Querywork_public",
        "toColumn": "User_Idsid"
      },
      {
        "name": "0f9844d6-8771-4d11-b89e-cc9063279a31",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "ww",
        "toTable": "ww_list",
        "toColumn": "ww"
      },
      {
        "name": "6e310dbc-90f2-4f71-94f9-19525f39a882",
        "fromTable": "CalendarDate",
        "fromColumn": "ww",
        "toTable": "WWBridge",
        "toColumn": "ww",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "d7cd6094-0b39-4ef1-bf52-dd67b1bee796",
        "fromTable": "DynamicLegend",
        "fromColumn": "LegendId",
        "toTable": "UniqueID",
        "toColumn": "id",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "6b15fb89-aa3c-46dd-a909-9765a1993660",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "id",
        "toTable": "UniqueID",
        "toColumn": "id",
        "isActive": false
      },
      {
        "name": "46fe8d7c-751c-4659-9054-1af6fb2a50f6",
        "fromTable": "DynamicLegend",
        "fromColumn": "WWSnapshot",
        "toTable": "WWBridge",
        "toColumn": "ww",
        "isActive": false
      },
      {
        "name": "c1526465-1085-4790-90c9-c502b41980a7",
        "fromTable": "DynamicLegend",
        "fromColumn": "WW_id",
        "toTable": "QueryBugHistorical",
        "toColumn": "WW_id",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "8459aeef-5c71-4c67-852f-0fcd0ab24130",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "ww_submitted_nbr",
        "toTable": "WWBridge",
        "toColumn": "ww"
      },
      {
        "name": "3403588f-6cec-4a3d-a837-abe143d8b81c",
        "fromTable": "Cumulative",
        "fromColumn": "ww",
        "toTable": "IndependentWWBridge",
        "toColumn": "WW"
      },
      {
        "name": "5b53cd5a-4784-4e9d-b650-d90b9499d1eb",
        "fromTable": "IndependentCalendar",
        "fromColumn": "ww",
        "toTable": "IndependentWWBridge",
        "toColumn": "WW",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "41caf179-178f-4fb4-b222-b1c2e88a2851",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "project",
        "toTable": "QueryTestChip",
        "toColumn": "product"
      },
      {
        "name": "ebf59962-3d5d-49dc-9fc5-af8bb0e7961b",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "release",
        "toTable": "QueryProcess",
        "toColumn": "Configuration"
      },
      {
        "name": "4ba3e576-7a5c-48be-9a06-0accd467006f",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "release",
        "toTable": "QueryRTL1p0",
        "toColumn": "configuration"
      },
      {
        "name": "86d8a098-94b4-49c8-9267-8fa738e98f32",
        "fromTable": "dccb_state_xjoin",
        "fromColumn": "ww",
        "toTable": "ww_list",
        "toColumn": "ww"
      },
      {
        "name": "803dea2f-e5fd-4f9a-a180-b70c79010910",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "SoC Die",
        "toTable": "QueryTapein",
        "toColumn": "project"
      },
      {
        "name": "1753c05f-b20f-4f55-9876-551eed54ab31",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "family",
        "toTable": "QueryGladius",
        "toColumn": "old_family"
      },
      {
        "name": "68ed7513-a0bb-46fb-bb18-d8aa44c61926",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "family",
        "toTable": "QueryCIGActiveIP",
        "toColumn": "family.name"
      },
      {
        "name": "64e485d5-6cbc-44e1-ade2-f8a05c4deaa4",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "status",
        "toTable": "status_order",
        "toColumn": "status"
      },
      {
        "name": "0c26bc56-cb7f-4997-af8a-dc3352634d0c",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "ccb_approved_ww",
        "toTable": "ccb_approv_ww_list",
        "toColumn": "ww_apprv_axis"
      },
      {
        "name": "4c02bb7c-8728-4911-aba8-b1338e1fc499",
        "fromTable": "QueryBugHistorical",
        "fromColumn": "ccb_rejected_ww",
        "toTable": "ccb_rej_ww_list",
        "toColumn": "ww_rej_axis"
      }
    ],
    "roles": [
      {
        "name": "IPG_Developers",
        "modelPermission": "administrator",
        "members": [
          {
            "memberName": "AMR\\IPG_Dashboard_Developers",
            "memberId": "S-1-5-21-725345543-602162358-527237240-4603422"
          }
        ]
      },
      {
        "name": "IPG_InternalUsers",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "AMR\\IPG_Dashboard_SuperUsers",
            "memberId": "S-1-5-21-725345543-602162358-527237240-4603439"
          }
        ]
      },
      {
        "name": "IPG_ExternalUsers",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "AMR\\IPG_Dashboard_Users",
            "memberId": "S-1-5-21-725345543-602162358-527237240-4603440"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "500"
      }
    ]
  },
  "id": "SemanticModel"
}